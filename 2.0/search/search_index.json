{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Nebula Graph 2.0 Documentation \u00b6 Nebula Graph is a distributed, scalable, and lightning-fast graph database. It is the optimal solution in the world capable of hosting graphs with dozens of billions of vertices (nodes) and trillions of edges with millisecond latency. Tutorial Video \u00b6 YouTube bilibili Preface \u00b6 Manual Change Log Introduction \u00b6 What is Nebula Graph Quick start (for beginners) \u00b6 Quick start workflow Deploy Nebula Graph with Docker Compose Connect to Nebula Graph Nebula Graph CRUD nGQL guide (for all users) \u00b6 Operators Comparison Pipe Reference operators Set String Precedence Functions and expressions Math String Date and time Schema Case expressions General query statements Match Space statements Create space Use space Show spaces Describe space Drop space Vertex statements Insert vertex Update vertex Upsert vertex Delete vertex Subgraph and path Get subgraph Query tuning statements Explain and profile Deployment and installation (for Developers and DBA) \u00b6 Resource preparations Compile and install Nebula Graph Install Nebula Graph by compiling the source code","title":"Welcome to Nebula Graph 2.0 Documentation"},{"location":"#welcome_to_nebula_graph_20_documentation","text":"Nebula Graph is a distributed, scalable, and lightning-fast graph database. It is the optimal solution in the world capable of hosting graphs with dozens of billions of vertices (nodes) and trillions of edges with millisecond latency.","title":"Welcome to Nebula Graph 2.0 Documentation"},{"location":"#tutorial_video","text":"YouTube bilibili","title":"Tutorial Video"},{"location":"#preface","text":"Manual Change Log","title":"Preface"},{"location":"#introduction","text":"What is Nebula Graph","title":"Introduction"},{"location":"#quick_start_for_beginners","text":"Quick start workflow Deploy Nebula Graph with Docker Compose Connect to Nebula Graph Nebula Graph CRUD","title":"Quick start (for beginners)"},{"location":"#ngql_guide_for_all_users","text":"Operators Comparison Pipe Reference operators Set String Precedence Functions and expressions Math String Date and time Schema Case expressions General query statements Match Space statements Create space Use space Show spaces Describe space Drop space Vertex statements Insert vertex Update vertex Upsert vertex Delete vertex Subgraph and path Get subgraph Query tuning statements Explain and profile","title":"nGQL guide (for all users)"},{"location":"#deployment_and_installation_for_developers_and_dba","text":"Resource preparations Compile and install Nebula Graph Install Nebula Graph by compiling the source code","title":"Deployment and installation (for Developers and DBA)"},{"location":"CHANGELOG/","text":"Manual Changes \u00b6 0.1.1 - Initial release Nebula Graph alpha","title":"Manual Changes"},{"location":"CHANGELOG/#manual_changes","text":"0.1.1 - Initial release Nebula Graph alpha","title":"Manual Changes"},{"location":"1.introduction/1.what-is-nebula-graph/","text":"\u4ec0\u4e48\u662fNebula Graph \u00b6 Nebula Graph\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u3001\u5206\u5e03\u5f0f\u7684\u3001\u6613\u6269\u5c55\u7684\u539f\u751f\u56fe\u6570\u636e\u5e93\uff0c\u80fd\u591f\u627f\u8f7d\u6570\u5341\u4ebf\u4e2a\u70b9\u548c\u6570\u4e07\u4ebf\u6761\u8fb9\u7684\u8d85\u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u5e76\u4e14\u63d0\u4f9b\u6beb\u79d2\u7ea7\u67e5\u8be2\u3002 \u4ec0\u4e48\u662f\u56fe\u6570\u636e\u5e93 \u00b6 \u56fe\u6570\u636e\u5e93\u662f\u4e13\u95e8\u5b58\u50a8\u5e9e\u5927\u7684\u56fe\u5f62\u7f51\u7edc\u5e76\u4ece\u4e2d\u68c0\u7d22\u4fe1\u606f\u7684\u6570\u636e\u5e93\u3002\u5b83\u53ef\u4ee5\u5c06\u56fe\u5f62\u4e2d\u7684\u6570\u636e\u9ad8\u6548\u5b58\u50a8\u4e3a\u70b9\uff08vertex\uff09\u548c\u8fb9\uff08edge\uff09\uff0c\u8fd8\u53ef\u4ee5\u5c06\u5c5e\u6027\uff08property\uff09\u9644\u52a0\u5230\u70b9\u548c\u8fb9\u4e0a\u3002 \u56fe\u6570\u636e\u5e93\u9002\u5408\u5b58\u50a8\u5927\u591a\u6570\u4ece\u73b0\u5b9e\u62bd\u8c61\u51fa\u7684\u6570\u636e\u7c7b\u578b\u3002\u4e16\u754c\u4e0a\u51e0\u4e4e\u6240\u6709\u9886\u57df\u7684\u4e8b\u7269\u90fd\u6709\u5185\u5728\u8054\u7cfb\uff0c\u50cf\u5173\u7cfb\u578b\u6570\u636e\u5e93\u8fd9\u6837\u7684\u5efa\u6a21\u7cfb\u7edf\u4f1a\u63d0\u53d6\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u5c06\u5173\u7cfb\u5355\u72ec\u5b58\u50a8\u5230\u8868\u548c\u5217\u4e2d\uff0c\u800c\u5b9e\u4f53\u7684\u7c7b\u578b\u548c\u5c5e\u6027\u5b58\u50a8\u5728\u5176\u4ed6\u5217\u751a\u81f3\u5176\u4ed6\u8868\u4e2d\uff0c\u8fd9\u4f7f\u5f97\u6570\u636e\u7ba1\u7406\u8d39\u65f6\u8d39\u529b\u3002 Nebula Graph\u4f5c\u4e3a\u4e00\u4e2a\u5178\u578b\u7684\u539f\u751f\u56fe\u6570\u636e\u5e93\uff0c\u5141\u8bb8\u5c06\u4e30\u5bcc\u7684\u5173\u7cfb\u5b58\u50a8\u4e3a\u8fb9\uff0c\u8fb9\u7684\u7c7b\u578b\u548c\u5c5e\u6027\u53ef\u4ee5\u76f4\u63a5\u9644\u52a0\u5230\u8fb9\u4e0a\u3002 Nebula Graph\u7684\u4f18\u52bf \u00b6 \u5f00\u6e90 \u00b6 Nebula Graph\u662f\u5728Apache 2.0\u548cCommons Clause 1.0\u6761\u6b3e\u4e0b\u5f00\u53d1\u7684\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\uff0c\u5982\u6570\u636e\u5e93\u5f00\u53d1\u4eba\u5458\u3001\u6570\u636e\u79d1\u5b66\u5bb6\u3001\u5b89\u5168\u4e13\u5bb6\u3001\u7b97\u6cd5\u5de5\u7a0b\u5e08\uff0c\u90fd\u53c2\u4e0e\u5230Nebula Graph\u7684\u8bbe\u8ba1\u548c\u5f00\u53d1\u4e2d\u6765\uff0c\u6b22\u8fce\u8bbf\u95ee Nebula Graph GitHub\u4e3b\u9875 \u53c2\u4e0e\u5f00\u6e90\u9879\u76ee\u3002 \u9ad8\u6027\u80fd \u00b6 \u57fa\u4e8e\u56fe\u6570\u636e\u5e93\u7684\u7279\u6027\u4f7f\u7528C++\u7f16\u5199\u7684Nebula Graph\uff0c\u53ef\u4ee5\u63d0\u4f9b\u6beb\u79d2\u7ea7\u67e5\u8be2\u3002\u4f17\u591a\u6570\u636e\u5e93\u4e2d\uff0cNebula Graph\u5728\u56fe\u6570\u636e\u670d\u52a1\u9886\u57df\u5c55\u73b0\u4e86\u5353\u8d8a\u7684\u6027\u80fd\uff0c\u6570\u636e\u89c4\u6a21\u8d8a\u5927\uff0cNebula Graph\u4f18\u52bf\u5c31\u8d8a\u5927\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 Nebula Graph benchmarking \u3002 \u6613\u6269\u5c55 \u00b6 Nebula Graph\u91c7\u7528shared-nothing\u67b6\u6784\uff0c\u652f\u6301\u5728\u4e0d\u505c\u6b62\u6570\u636e\u5e93\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\u6269\u7f29\u5bb9\u3002 \u6613\u5f00\u53d1 \u00b6 Nebula Graph\u63d0\u4f9bJava\u3001Python\u3001C++\u548cGo\u7b49\u6d41\u884c\u7f16\u7a0b\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\uff0c\u66f4\u591a\u5ba2\u6237\u7aef\u4ecd\u5728\u5f00\u53d1\u4e2d\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 Nebula Graph clients \u3002 \u9ad8\u53ef\u9760\u8bbf\u95ee\u63a7\u5236 \u00b6 Nebula Graph\u652f\u6301\u4e25\u683c\u7684\u89d2\u8272\u8bbf\u95ee\u63a7\u5236\u548cLDAP\uff08Lightweight Directory Access Protocol\uff09\u7b49\u5916\u90e8\u8ba4\u8bc1\u670d\u52a1\uff0c\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u6570\u636e\u5b89\u5168\u6027\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u9a8c\u8bc1\u548c\u6388\u6743 \u3002 \u751f\u6001\u591a\u6837\u5316 \u00b6 Nebula Graph\u5f00\u653e\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u539f\u751f\u5de5\u5177\uff0c\u4f8b\u5982 Nebula Graph Studio \u3001 nebula-console \u3001 Nebula Graph Exchange \u7b49\u3002 \u6b64\u5916\uff0cNebula Graph\u8fd8\u5177\u5907\u4e0eSpark\u3001Flink\u3001HBase\u7b49\u4ea7\u54c1\u6574\u5408\u7684\u80fd\u529b\uff0c\u5728\u8fd9\u4e2a\u5145\u6ee1\u6311\u6218\u4e0e\u673a\u9047\u7684\u65f6\u4ee3\uff0c\u5927\u5927\u589e\u5f3a\u4e86\u81ea\u8eab\u7684\u7ade\u4e89\u529b\u3002 \u517c\u5bb9openCypher\u67e5\u8be2\u8bed\u8a00 \u00b6 Nebula Graph\u67e5\u8be2\u8bed\u8a00\uff0c\u4e5f\u79f0\u4e3anGQL\uff0c\u662f\u4e00\u79cd\u58f0\u660e\u6027\u7684\u3001\u517c\u5bb9openCypher\u7684\u6587\u672c\u67e5\u8be2\u8bed\u8a00\uff0c\u6613\u4e8e\u7406\u89e3\u548c\u4f7f\u7528\u3002\u8be6\u7ec6\u8bed\u6cd5\u8bf7\u53c2\u89c1 nGQL\u6307\u5357 \u3002 \u7075\u6d3b\u6570\u636e\u5efa\u6a21 \u00b6 \u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5728Nebula Graph\u4e2d\u5efa\u7acb\u6570\u636e\u6a21\u578b\uff0c\u4e0d\u5fc5\u5c06\u6570\u636e\u5f3a\u5236\u8f6c\u6362\u4e3a\u5173\u7cfb\u8868\u4e4b\u7c7b\u7684\u7ed3\u6784\uff0c\u800c\u4e14\u53ef\u4ee5\u81ea\u7531\u589e\u52a0\u3001\u66f4\u65b0\u548c\u5220\u9664\u5c5e\u6027\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u6570\u636e\u6a21\u578b \u3002 \u5e7f\u53d7\u6b22\u8fce \u00b6 \u817e\u8baf\u3001vivo\u3001\u7f8e\u56e2\u548c\u4eac\u4e1c\u6570\u79d1\u7b49\u79d1\u6280\u5de8\u5934\u90fd\u5728\u4f7f\u7528Nebula Graph\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 Nebula Graph\u5b98\u7f51 \u3002 \u9002\u7528\u573a\u666f \u00b6 Nebula Graph\u53ef\u7528\u4e8e\u5404\u79cd\u57fa\u4e8e\u56fe\u7684\u4e1a\u52a1\u573a\u666f\u3002\u4e3a\u8282\u7ea6\u8f6c\u6362\u5404\u7c7b\u6570\u636e\u5230\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u907f\u514d\u590d\u6742\u67e5\u8be2\uff0c\u5efa\u8bae\u60a8\u4f7f\u7528Nebula Graph\u3002 \u6b3a\u8bc8\u68c0\u6d4b \u00b6 \u91d1\u878d\u673a\u6784\u5fc5\u987b\u4ed4\u7ec6\u7814\u7a76\u5927\u91cf\u7684\u4ea4\u6613\u4fe1\u606f\uff0c\u624d\u80fd\u68c0\u6d4b\u51fa\u6f5c\u5728\u7684\u91d1\u878d\u6b3a\u8bc8\u884c\u4e3a\uff0c\u5e76\u4e86\u89e3\u67d0\u4e2a\u6b3a\u8bc8\u884c\u4e3a\u548c\u8bbe\u5907\u7684\u5185\u5728\u5173\u8054\u3002\u8fd9\u79cd\u573a\u666f\u53ef\u4ee5\u901a\u8fc7\u56fe\u5f62\u5efa\u6a21\uff0c\u7136\u540e\u501f\u52a9Nebula Graph\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u68c0\u6d4b\u51fa\u8bc8\u9a97\u56e2\u4f19\u6216\u5176\u4ed6\u590d\u6742\u8bc8\u9a97\u884c\u4e3a\u3002 \u5b9e\u65f6\u63a8\u8350 \u00b6 Nebula Graph\u80fd\u591f\u53ca\u65f6\u5904\u7406\u8bbf\u95ee\u8005\u4ea7\u751f\u7684\u5b9e\u65f6\u4fe1\u606f\uff0c\u5e76\u4e14\u7cbe\u51c6\u63a8\u9001\u6587\u7ae0\u3001\u89c6\u9891\u3001\u4ea7\u54c1\u548c\u670d\u52a1\u3002 \u77e5\u8bc6\u56fe\u8c31 \u00b6 \u81ea\u7136\u8bed\u8a00\u53ef\u4ee5\u8f6c\u5316\u4e3a\u77e5\u8bc6\u56fe\u8c31\uff0c\u5b58\u50a8\u5728Nebula Graph\u4e2d\u3002\u7528\u81ea\u7136\u8bed\u8a00\u7ec4\u7ec7\u7684\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u667a\u80fd\u95ee\u7b54\u7cfb\u7edf\u4e2d\u7684\u8bed\u4e49\u89e3\u6790\u5668\u8fdb\u884c\u89e3\u6790\u5e76\u91cd\u65b0\u7ec4\u7ec7\uff0c\u7136\u540e\u4ece\u77e5\u8bc6\u56fe\u8c31\u4e2d\u68c0\u7d22\u51fa\u95ee\u9898\u7684\u53ef\u80fd\u7b54\u6848\uff0c\u63d0\u4f9b\u7ed9\u63d0\u95ee\u4eba\u3002 \u793e\u4ea4\u7f51\u7edc \u00b6 \u4eba\u9645\u5173\u7cfb\u4fe1\u606f\u662f\u5178\u578b\u7684\u56fe\u5f62\u6570\u636e\uff0cNebula Graph\u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u6570\u5341\u4ebf\u4eba\u548c\u6570\u4e07\u4ebf\u4eba\u9645\u5173\u7cfb\u7684\u793e\u4ea4\u7f51\u7edc\u4fe1\u606f\uff0c\u5e76\u5728\u6d77\u91cf\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\uff0c\u63d0\u4f9b\u5feb\u901f\u7684\u597d\u53cb\u63a8\u8350\u548c\u5de5\u4f5c\u5c97\u4f4d\u67e5\u8be2\u3002","title":"What is Nebula Graph"},{"location":"1.introduction/1.what-is-nebula-graph/#nebula_graph","text":"Nebula Graph\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u3001\u5206\u5e03\u5f0f\u7684\u3001\u6613\u6269\u5c55\u7684\u539f\u751f\u56fe\u6570\u636e\u5e93\uff0c\u80fd\u591f\u627f\u8f7d\u6570\u5341\u4ebf\u4e2a\u70b9\u548c\u6570\u4e07\u4ebf\u6761\u8fb9\u7684\u8d85\u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u5e76\u4e14\u63d0\u4f9b\u6beb\u79d2\u7ea7\u67e5\u8be2\u3002","title":"\u4ec0\u4e48\u662fNebula Graph"},{"location":"1.introduction/1.what-is-nebula-graph/#_1","text":"\u56fe\u6570\u636e\u5e93\u662f\u4e13\u95e8\u5b58\u50a8\u5e9e\u5927\u7684\u56fe\u5f62\u7f51\u7edc\u5e76\u4ece\u4e2d\u68c0\u7d22\u4fe1\u606f\u7684\u6570\u636e\u5e93\u3002\u5b83\u53ef\u4ee5\u5c06\u56fe\u5f62\u4e2d\u7684\u6570\u636e\u9ad8\u6548\u5b58\u50a8\u4e3a\u70b9\uff08vertex\uff09\u548c\u8fb9\uff08edge\uff09\uff0c\u8fd8\u53ef\u4ee5\u5c06\u5c5e\u6027\uff08property\uff09\u9644\u52a0\u5230\u70b9\u548c\u8fb9\u4e0a\u3002 \u56fe\u6570\u636e\u5e93\u9002\u5408\u5b58\u50a8\u5927\u591a\u6570\u4ece\u73b0\u5b9e\u62bd\u8c61\u51fa\u7684\u6570\u636e\u7c7b\u578b\u3002\u4e16\u754c\u4e0a\u51e0\u4e4e\u6240\u6709\u9886\u57df\u7684\u4e8b\u7269\u90fd\u6709\u5185\u5728\u8054\u7cfb\uff0c\u50cf\u5173\u7cfb\u578b\u6570\u636e\u5e93\u8fd9\u6837\u7684\u5efa\u6a21\u7cfb\u7edf\u4f1a\u63d0\u53d6\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u5c06\u5173\u7cfb\u5355\u72ec\u5b58\u50a8\u5230\u8868\u548c\u5217\u4e2d\uff0c\u800c\u5b9e\u4f53\u7684\u7c7b\u578b\u548c\u5c5e\u6027\u5b58\u50a8\u5728\u5176\u4ed6\u5217\u751a\u81f3\u5176\u4ed6\u8868\u4e2d\uff0c\u8fd9\u4f7f\u5f97\u6570\u636e\u7ba1\u7406\u8d39\u65f6\u8d39\u529b\u3002 Nebula Graph\u4f5c\u4e3a\u4e00\u4e2a\u5178\u578b\u7684\u539f\u751f\u56fe\u6570\u636e\u5e93\uff0c\u5141\u8bb8\u5c06\u4e30\u5bcc\u7684\u5173\u7cfb\u5b58\u50a8\u4e3a\u8fb9\uff0c\u8fb9\u7684\u7c7b\u578b\u548c\u5c5e\u6027\u53ef\u4ee5\u76f4\u63a5\u9644\u52a0\u5230\u8fb9\u4e0a\u3002","title":"\u4ec0\u4e48\u662f\u56fe\u6570\u636e\u5e93"},{"location":"1.introduction/1.what-is-nebula-graph/#nebula_graph_1","text":"","title":"Nebula Graph\u7684\u4f18\u52bf"},{"location":"1.introduction/1.what-is-nebula-graph/#_2","text":"Nebula Graph\u662f\u5728Apache 2.0\u548cCommons Clause 1.0\u6761\u6b3e\u4e0b\u5f00\u53d1\u7684\u3002\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\uff0c\u5982\u6570\u636e\u5e93\u5f00\u53d1\u4eba\u5458\u3001\u6570\u636e\u79d1\u5b66\u5bb6\u3001\u5b89\u5168\u4e13\u5bb6\u3001\u7b97\u6cd5\u5de5\u7a0b\u5e08\uff0c\u90fd\u53c2\u4e0e\u5230Nebula Graph\u7684\u8bbe\u8ba1\u548c\u5f00\u53d1\u4e2d\u6765\uff0c\u6b22\u8fce\u8bbf\u95ee Nebula Graph GitHub\u4e3b\u9875 \u53c2\u4e0e\u5f00\u6e90\u9879\u76ee\u3002","title":"\u5f00\u6e90"},{"location":"1.introduction/1.what-is-nebula-graph/#_3","text":"\u57fa\u4e8e\u56fe\u6570\u636e\u5e93\u7684\u7279\u6027\u4f7f\u7528C++\u7f16\u5199\u7684Nebula Graph\uff0c\u53ef\u4ee5\u63d0\u4f9b\u6beb\u79d2\u7ea7\u67e5\u8be2\u3002\u4f17\u591a\u6570\u636e\u5e93\u4e2d\uff0cNebula Graph\u5728\u56fe\u6570\u636e\u670d\u52a1\u9886\u57df\u5c55\u73b0\u4e86\u5353\u8d8a\u7684\u6027\u80fd\uff0c\u6570\u636e\u89c4\u6a21\u8d8a\u5927\uff0cNebula Graph\u4f18\u52bf\u5c31\u8d8a\u5927\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 Nebula Graph benchmarking \u3002","title":"\u9ad8\u6027\u80fd"},{"location":"1.introduction/1.what-is-nebula-graph/#_4","text":"Nebula Graph\u91c7\u7528shared-nothing\u67b6\u6784\uff0c\u652f\u6301\u5728\u4e0d\u505c\u6b62\u6570\u636e\u5e93\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\u6269\u7f29\u5bb9\u3002","title":"\u6613\u6269\u5c55"},{"location":"1.introduction/1.what-is-nebula-graph/#_5","text":"Nebula Graph\u63d0\u4f9bJava\u3001Python\u3001C++\u548cGo\u7b49\u6d41\u884c\u7f16\u7a0b\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\uff0c\u66f4\u591a\u5ba2\u6237\u7aef\u4ecd\u5728\u5f00\u53d1\u4e2d\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 Nebula Graph clients \u3002","title":"\u6613\u5f00\u53d1"},{"location":"1.introduction/1.what-is-nebula-graph/#_6","text":"Nebula Graph\u652f\u6301\u4e25\u683c\u7684\u89d2\u8272\u8bbf\u95ee\u63a7\u5236\u548cLDAP\uff08Lightweight Directory Access Protocol\uff09\u7b49\u5916\u90e8\u8ba4\u8bc1\u670d\u52a1\uff0c\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u6570\u636e\u5b89\u5168\u6027\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u9a8c\u8bc1\u548c\u6388\u6743 \u3002","title":"\u9ad8\u53ef\u9760\u8bbf\u95ee\u63a7\u5236"},{"location":"1.introduction/1.what-is-nebula-graph/#_7","text":"Nebula Graph\u5f00\u653e\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u539f\u751f\u5de5\u5177\uff0c\u4f8b\u5982 Nebula Graph Studio \u3001 nebula-console \u3001 Nebula Graph Exchange \u7b49\u3002 \u6b64\u5916\uff0cNebula Graph\u8fd8\u5177\u5907\u4e0eSpark\u3001Flink\u3001HBase\u7b49\u4ea7\u54c1\u6574\u5408\u7684\u80fd\u529b\uff0c\u5728\u8fd9\u4e2a\u5145\u6ee1\u6311\u6218\u4e0e\u673a\u9047\u7684\u65f6\u4ee3\uff0c\u5927\u5927\u589e\u5f3a\u4e86\u81ea\u8eab\u7684\u7ade\u4e89\u529b\u3002","title":"\u751f\u6001\u591a\u6837\u5316"},{"location":"1.introduction/1.what-is-nebula-graph/#opencypher","text":"Nebula Graph\u67e5\u8be2\u8bed\u8a00\uff0c\u4e5f\u79f0\u4e3anGQL\uff0c\u662f\u4e00\u79cd\u58f0\u660e\u6027\u7684\u3001\u517c\u5bb9openCypher\u7684\u6587\u672c\u67e5\u8be2\u8bed\u8a00\uff0c\u6613\u4e8e\u7406\u89e3\u548c\u4f7f\u7528\u3002\u8be6\u7ec6\u8bed\u6cd5\u8bf7\u53c2\u89c1 nGQL\u6307\u5357 \u3002","title":"\u517c\u5bb9openCypher\u67e5\u8be2\u8bed\u8a00"},{"location":"1.introduction/1.what-is-nebula-graph/#_8","text":"\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5728Nebula Graph\u4e2d\u5efa\u7acb\u6570\u636e\u6a21\u578b\uff0c\u4e0d\u5fc5\u5c06\u6570\u636e\u5f3a\u5236\u8f6c\u6362\u4e3a\u5173\u7cfb\u8868\u4e4b\u7c7b\u7684\u7ed3\u6784\uff0c\u800c\u4e14\u53ef\u4ee5\u81ea\u7531\u589e\u52a0\u3001\u66f4\u65b0\u548c\u5220\u9664\u5c5e\u6027\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u6570\u636e\u6a21\u578b \u3002","title":"\u7075\u6d3b\u6570\u636e\u5efa\u6a21"},{"location":"1.introduction/1.what-is-nebula-graph/#_9","text":"\u817e\u8baf\u3001vivo\u3001\u7f8e\u56e2\u548c\u4eac\u4e1c\u6570\u79d1\u7b49\u79d1\u6280\u5de8\u5934\u90fd\u5728\u4f7f\u7528Nebula Graph\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 Nebula Graph\u5b98\u7f51 \u3002","title":"\u5e7f\u53d7\u6b22\u8fce"},{"location":"1.introduction/1.what-is-nebula-graph/#_10","text":"Nebula Graph\u53ef\u7528\u4e8e\u5404\u79cd\u57fa\u4e8e\u56fe\u7684\u4e1a\u52a1\u573a\u666f\u3002\u4e3a\u8282\u7ea6\u8f6c\u6362\u5404\u7c7b\u6570\u636e\u5230\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u65f6\u95f4\uff0c\u4ee5\u53ca\u907f\u514d\u590d\u6742\u67e5\u8be2\uff0c\u5efa\u8bae\u60a8\u4f7f\u7528Nebula Graph\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"1.introduction/1.what-is-nebula-graph/#_11","text":"\u91d1\u878d\u673a\u6784\u5fc5\u987b\u4ed4\u7ec6\u7814\u7a76\u5927\u91cf\u7684\u4ea4\u6613\u4fe1\u606f\uff0c\u624d\u80fd\u68c0\u6d4b\u51fa\u6f5c\u5728\u7684\u91d1\u878d\u6b3a\u8bc8\u884c\u4e3a\uff0c\u5e76\u4e86\u89e3\u67d0\u4e2a\u6b3a\u8bc8\u884c\u4e3a\u548c\u8bbe\u5907\u7684\u5185\u5728\u5173\u8054\u3002\u8fd9\u79cd\u573a\u666f\u53ef\u4ee5\u901a\u8fc7\u56fe\u5f62\u5efa\u6a21\uff0c\u7136\u540e\u501f\u52a9Nebula Graph\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u68c0\u6d4b\u51fa\u8bc8\u9a97\u56e2\u4f19\u6216\u5176\u4ed6\u590d\u6742\u8bc8\u9a97\u884c\u4e3a\u3002","title":"\u6b3a\u8bc8\u68c0\u6d4b"},{"location":"1.introduction/1.what-is-nebula-graph/#_12","text":"Nebula Graph\u80fd\u591f\u53ca\u65f6\u5904\u7406\u8bbf\u95ee\u8005\u4ea7\u751f\u7684\u5b9e\u65f6\u4fe1\u606f\uff0c\u5e76\u4e14\u7cbe\u51c6\u63a8\u9001\u6587\u7ae0\u3001\u89c6\u9891\u3001\u4ea7\u54c1\u548c\u670d\u52a1\u3002","title":"\u5b9e\u65f6\u63a8\u8350"},{"location":"1.introduction/1.what-is-nebula-graph/#_13","text":"\u81ea\u7136\u8bed\u8a00\u53ef\u4ee5\u8f6c\u5316\u4e3a\u77e5\u8bc6\u56fe\u8c31\uff0c\u5b58\u50a8\u5728Nebula Graph\u4e2d\u3002\u7528\u81ea\u7136\u8bed\u8a00\u7ec4\u7ec7\u7684\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u667a\u80fd\u95ee\u7b54\u7cfb\u7edf\u4e2d\u7684\u8bed\u4e49\u89e3\u6790\u5668\u8fdb\u884c\u89e3\u6790\u5e76\u91cd\u65b0\u7ec4\u7ec7\uff0c\u7136\u540e\u4ece\u77e5\u8bc6\u56fe\u8c31\u4e2d\u68c0\u7d22\u51fa\u95ee\u9898\u7684\u53ef\u80fd\u7b54\u6848\uff0c\u63d0\u4f9b\u7ed9\u63d0\u95ee\u4eba\u3002","title":"\u77e5\u8bc6\u56fe\u8c31"},{"location":"1.introduction/1.what-is-nebula-graph/#_14","text":"\u4eba\u9645\u5173\u7cfb\u4fe1\u606f\u662f\u5178\u578b\u7684\u56fe\u5f62\u6570\u636e\uff0cNebula Graph\u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u6570\u5341\u4ebf\u4eba\u548c\u6570\u4e07\u4ebf\u4eba\u9645\u5173\u7cfb\u7684\u793e\u4ea4\u7f51\u7edc\u4fe1\u606f\uff0c\u5e76\u5728\u6d77\u91cf\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\uff0c\u63d0\u4f9b\u5feb\u901f\u7684\u597d\u53cb\u63a8\u8350\u548c\u5de5\u4f5c\u5c97\u4f4d\u67e5\u8be2\u3002","title":"\u793e\u4ea4\u7f51\u7edc"},{"location":"1.introduction/2.data-model/","text":"\u6570\u636e\u6a21\u578b \u00b6 \u672c\u6587\u4ecb\u7ecdNebula Graph\u7684\u6570\u636e\u6a21\u578b\u3002\u6570\u636e\u6a21\u578b\u662f\u4e00\u79cd\u7ec4\u7ec7\u6570\u636e\u5e76\u8bf4\u660e\u5b83\u4eec\u5982\u4f55\u76f8\u4e92\u5173\u8054\u7684\u6a21\u578b\u3002 \u6570\u636e\u7ed3\u6784 \u00b6 Nebula Graph\u6570\u636e\u6a21\u578b\u4f7f\u75285\u79cd\u6570\u636e\u7ed3\u6784\u6765\u4fdd\u5b58\u6570\u636e\uff1a \u70b9\uff08vertex\uff09 \u70b9\u7528\u6765\u4fdd\u5b58\u5b9e\u4f53\u5bf9\u8c61\uff0c\u7279\u70b9\u5982\u4e0b\uff1a \u70b9\u662f\u7528\u70b9\u6807\u8bc6\u7b26\uff08 VID \uff09\u6807\u8bc6\u7684\u3002 VID \u5728\u540c\u4e00\u56fe\u7a7a\u95f4\u4e2d\u552f\u4e00\u3002 \u70b9\u5fc5\u987b\u6709\u81f3\u5c11\u4e00\u4e2a\u6807\u7b7e\uff08Tag\uff09\u3002 \u6807\u7b7e\uff08tag\uff09 \u6807\u7b7e\u53ef\u4ee5\u7528\u4e8e\u5bf9\u70b9\u8fdb\u884c\u533a\u5206\u3002\u5177\u6709\u76f8\u540c\u6807\u7b7e\u7684\u70b9\u5171\u4eab\u76f8\u540c\u7684\u5c5e\u6027\u5b9a\u4e49\u3002 \u8fb9\uff08edge\uff09 \u8fb9\u662f\u7528\u6765\u8fde\u63a5\u70b9\u7684\uff0c\u8868\u793a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u6216\u884c\u4e3a\uff0c\u7279\u70b9\u5982\u4e0b\uff1a \u4e00\u6761\u8fb9\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8fb9\u7c7b\u578b\u3002 \u8d77\u70b9\u3001\u8fb9\u7c7b\u578b\uff08edge type\uff09\u3001rank\u3001\u7ec8\u70b9\u53ef\u4ee5\u552f\u4e00\u8868\u793a\u4e00\u6761\u8fb9\u3002 \u8fb9\u662f\u6709\u6307\u5411\u7684\u3002 -> \u8868\u793a\u8fb9\u7684\u6307\u5411\uff0c\u8fb9\u53ef\u4ee5\u6cbf\u4efb\u610f\u65b9\u5411\u904d\u5386\u3002 \u8fb9\u5fc5\u987b\u6709rank\u3002rank\u662f\u4e00\u4e2a\u4e0d\u53ef\u66f4\u6539\u7684\u3001\u7528\u6237\u5206\u914d\u7684\u300164\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002\u901a\u8fc7\u5b83\u624d\u80fd\u8bc6\u522b\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5177\u6709\u76f8\u540c\u8fb9\u7c7b\u578b\u7684\u8fb9\u3002\u8fb9\u6309\u5b83\u4eec\u7684rank\u6392\u5e8f\uff0c\u503c\u5927\u7684\u8fb9\u6392\u5728\u524d\u9762\u3002\u9ed8\u8ba4rank\u4e3a0\u3002 \u8fb9\u7c7b\u578b\uff08edge type\uff09 \u8fb9\u7c7b\u578b\u7528\u4e8e\u5bf9\u8fb9\u8fdb\u884c\u533a\u5206\u3002\u5177\u6709\u76f8\u540c\u8fb9\u7c7b\u578b\u7684\u8fb9\u5171\u4eab\u76f8\u540c\u7684\u5c5e\u6027\u5b9a\u4e49\u3002 \u5c5e\u6027\uff08properties\uff09 \u5c5e\u6027\u662f\u6307\u4ee5\u952e\u503c\u5bf9\uff08key-value\uff09\u5f62\u5f0f\u5b58\u50a8\u70b9\u6216\u8fb9\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u6709\u5411\u5c5e\u6027\u56fe \u00b6 Nebula Graph\u5c06\u6570\u636e\u5b58\u50a8\u5728\u6709\u5411\u5c5e\u6027\u56fe\u4e2d\u3002\u6709\u5411\u5c5e\u6027\u56fe\u662f\u6307\u70b9\u548c\u8fb9\u6784\u6210\u7684\u56fe\uff0c\u8fd9\u4e9b\u8fb9\u662f\u6709\u65b9\u5411\u7684\u3002\u6709\u5411\u5c5e\u6027\u56fe\u8868\u793a\u4e3a\uff1a G = < V, E, P V , P E > V \u662f\u70b9\u7684\u96c6\u5408\u3002 E \u662f\u6709\u5411\u8fb9\u7684\u96c6\u5408\u3002 P V \u662f\u70b9\u7684\u5c5e\u6027\u3002 P E \u662f\u8fb9\u7684\u5c5e\u6027\u3002 \u901a\u8fc7\u4e0b\u9762\u7684\u793a\u4f8b\u56fe\u6765\u4ecb\u7ecd\u6709\u5411\u5c5e\u6027\u56fe\u7684\u57fa\u672c\u6982\u5ff5\u3002 \u56fe\u7247\u5c55\u793a\u4e86\u4e00\u7ec4\u5173\u4e8eNBA\u7403\u5458\u548c\u7403\u961f\u7684\u6570\u636e\u3002\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u70b9\uff08 player \u3001 name \uff09\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9\uff08 serve \u3001 like \uff09\u3002 \u4e0b\u8868\u4e3a\u56fe\u7247\u6570\u636e\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u7c7b\u578b \u540d\u79f0 \u5c5e\u6027\u540d\uff08\u6570\u636e\u7c7b\u578b\uff09 \u8bf4\u660e tag player name \uff08string\uff09 age \uff08int\uff09 \u8868\u793aNBA\u7403\u5458\u3002 tag team name \uff08string\uff09 \u8868\u793aNBA\u7403\u961f\u3002 edge type serve start_year \uff08int\uff09 end_year \uff08int\uff09 \u8868\u793aNBA\u7403\u5458\u7684\u884c\u4e3a\u3002 \u8be5\u884c\u4e3a\u5c06\u7403\u5458\u548c\u7403\u961f\u8054\u7cfb\u8d77\u6765\uff0c\u65b9\u5411\u662f\u4ece\u7403\u5458\u5230\u7403\u961f\u3002 edge type like likeness \uff08int\uff09 \u8868\u793aNBA\u7403\u5458\u7684\u884c\u4e3a\u3002 \u8be5\u884c\u4e3a\u5c06\u4e24\u4e2a\u7403\u5458\u8054\u7cfb\u8d77\u6765\uff0c\u65b9\u5411\u662f\u4ece\u4e00\u4e2a\u7403\u5458\u5230\u53e6\u4e00\u4e2a\u7403\u5458\u3002","title":"Date model"},{"location":"1.introduction/2.data-model/#_1","text":"\u672c\u6587\u4ecb\u7ecdNebula Graph\u7684\u6570\u636e\u6a21\u578b\u3002\u6570\u636e\u6a21\u578b\u662f\u4e00\u79cd\u7ec4\u7ec7\u6570\u636e\u5e76\u8bf4\u660e\u5b83\u4eec\u5982\u4f55\u76f8\u4e92\u5173\u8054\u7684\u6a21\u578b\u3002","title":"\u6570\u636e\u6a21\u578b"},{"location":"1.introduction/2.data-model/#_2","text":"Nebula Graph\u6570\u636e\u6a21\u578b\u4f7f\u75285\u79cd\u6570\u636e\u7ed3\u6784\u6765\u4fdd\u5b58\u6570\u636e\uff1a \u70b9\uff08vertex\uff09 \u70b9\u7528\u6765\u4fdd\u5b58\u5b9e\u4f53\u5bf9\u8c61\uff0c\u7279\u70b9\u5982\u4e0b\uff1a \u70b9\u662f\u7528\u70b9\u6807\u8bc6\u7b26\uff08 VID \uff09\u6807\u8bc6\u7684\u3002 VID \u5728\u540c\u4e00\u56fe\u7a7a\u95f4\u4e2d\u552f\u4e00\u3002 \u70b9\u5fc5\u987b\u6709\u81f3\u5c11\u4e00\u4e2a\u6807\u7b7e\uff08Tag\uff09\u3002 \u6807\u7b7e\uff08tag\uff09 \u6807\u7b7e\u53ef\u4ee5\u7528\u4e8e\u5bf9\u70b9\u8fdb\u884c\u533a\u5206\u3002\u5177\u6709\u76f8\u540c\u6807\u7b7e\u7684\u70b9\u5171\u4eab\u76f8\u540c\u7684\u5c5e\u6027\u5b9a\u4e49\u3002 \u8fb9\uff08edge\uff09 \u8fb9\u662f\u7528\u6765\u8fde\u63a5\u70b9\u7684\uff0c\u8868\u793a\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u6216\u884c\u4e3a\uff0c\u7279\u70b9\u5982\u4e0b\uff1a \u4e00\u6761\u8fb9\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8fb9\u7c7b\u578b\u3002 \u8d77\u70b9\u3001\u8fb9\u7c7b\u578b\uff08edge type\uff09\u3001rank\u3001\u7ec8\u70b9\u53ef\u4ee5\u552f\u4e00\u8868\u793a\u4e00\u6761\u8fb9\u3002 \u8fb9\u662f\u6709\u6307\u5411\u7684\u3002 -> \u8868\u793a\u8fb9\u7684\u6307\u5411\uff0c\u8fb9\u53ef\u4ee5\u6cbf\u4efb\u610f\u65b9\u5411\u904d\u5386\u3002 \u8fb9\u5fc5\u987b\u6709rank\u3002rank\u662f\u4e00\u4e2a\u4e0d\u53ef\u66f4\u6539\u7684\u3001\u7528\u6237\u5206\u914d\u7684\u300164\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002\u901a\u8fc7\u5b83\u624d\u80fd\u8bc6\u522b\u4e24\u4e2a\u70b9\u4e4b\u95f4\u5177\u6709\u76f8\u540c\u8fb9\u7c7b\u578b\u7684\u8fb9\u3002\u8fb9\u6309\u5b83\u4eec\u7684rank\u6392\u5e8f\uff0c\u503c\u5927\u7684\u8fb9\u6392\u5728\u524d\u9762\u3002\u9ed8\u8ba4rank\u4e3a0\u3002 \u8fb9\u7c7b\u578b\uff08edge type\uff09 \u8fb9\u7c7b\u578b\u7528\u4e8e\u5bf9\u8fb9\u8fdb\u884c\u533a\u5206\u3002\u5177\u6709\u76f8\u540c\u8fb9\u7c7b\u578b\u7684\u8fb9\u5171\u4eab\u76f8\u540c\u7684\u5c5e\u6027\u5b9a\u4e49\u3002 \u5c5e\u6027\uff08properties\uff09 \u5c5e\u6027\u662f\u6307\u4ee5\u952e\u503c\u5bf9\uff08key-value\uff09\u5f62\u5f0f\u5b58\u50a8\u70b9\u6216\u8fb9\u7684\u76f8\u5173\u4fe1\u606f\u3002","title":"\u6570\u636e\u7ed3\u6784"},{"location":"1.introduction/2.data-model/#_3","text":"Nebula Graph\u5c06\u6570\u636e\u5b58\u50a8\u5728\u6709\u5411\u5c5e\u6027\u56fe\u4e2d\u3002\u6709\u5411\u5c5e\u6027\u56fe\u662f\u6307\u70b9\u548c\u8fb9\u6784\u6210\u7684\u56fe\uff0c\u8fd9\u4e9b\u8fb9\u662f\u6709\u65b9\u5411\u7684\u3002\u6709\u5411\u5c5e\u6027\u56fe\u8868\u793a\u4e3a\uff1a G = < V, E, P V , P E > V \u662f\u70b9\u7684\u96c6\u5408\u3002 E \u662f\u6709\u5411\u8fb9\u7684\u96c6\u5408\u3002 P V \u662f\u70b9\u7684\u5c5e\u6027\u3002 P E \u662f\u8fb9\u7684\u5c5e\u6027\u3002 \u901a\u8fc7\u4e0b\u9762\u7684\u793a\u4f8b\u56fe\u6765\u4ecb\u7ecd\u6709\u5411\u5c5e\u6027\u56fe\u7684\u57fa\u672c\u6982\u5ff5\u3002 \u56fe\u7247\u5c55\u793a\u4e86\u4e00\u7ec4\u5173\u4e8eNBA\u7403\u5458\u548c\u7403\u961f\u7684\u6570\u636e\u3002\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u70b9\uff08 player \u3001 name \uff09\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9\uff08 serve \u3001 like \uff09\u3002 \u4e0b\u8868\u4e3a\u56fe\u7247\u6570\u636e\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u7c7b\u578b \u540d\u79f0 \u5c5e\u6027\u540d\uff08\u6570\u636e\u7c7b\u578b\uff09 \u8bf4\u660e tag player name \uff08string\uff09 age \uff08int\uff09 \u8868\u793aNBA\u7403\u5458\u3002 tag team name \uff08string\uff09 \u8868\u793aNBA\u7403\u961f\u3002 edge type serve start_year \uff08int\uff09 end_year \uff08int\uff09 \u8868\u793aNBA\u7403\u5458\u7684\u884c\u4e3a\u3002 \u8be5\u884c\u4e3a\u5c06\u7403\u5458\u548c\u7403\u961f\u8054\u7cfb\u8d77\u6765\uff0c\u65b9\u5411\u662f\u4ece\u7403\u5458\u5230\u7403\u961f\u3002 edge type like likeness \uff08int\uff09 \u8868\u793aNBA\u7403\u5458\u7684\u884c\u4e3a\u3002 \u8be5\u884c\u4e3a\u5c06\u4e24\u4e2a\u7403\u5458\u8054\u7cfb\u8d77\u6765\uff0c\u65b9\u5411\u662f\u4ece\u4e00\u4e2a\u7403\u5458\u5230\u53e6\u4e00\u4e2a\u7403\u5458\u3002","title":"\u6709\u5411\u5c5e\u6027\u56fe"},{"location":"1.introduction/3.nebula-graph-architecture/1.architecture-overview/","text":"\u67b6\u6784\u603b\u89c8 \u00b6 Nebula Graph\u7531\u4e09\u79cd\u670d\u52a1\u6784\u6210\uff1aGraph\u670d\u52a1\u3001Meta\u670d\u52a1\u548cStorage\u670d\u52a1\u3002 \u6bcf\u4e2a\u670d\u52a1\u90fd\u6709\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u5bf9\u5e94\u8fdb\u7a0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6587\u4ef6\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u8ba1\u7b97\u673a\u4e0a\u90e8\u7f72Nebula Graph\u96c6\u7fa4\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86Nebula Graph\u96c6\u7fa4\u7684\u7ecf\u5178\u67b6\u6784\u3002 Meta\u670d\u52a1 \u00b6 \u5728Nebula Graph\u67b6\u6784\u4e2d\uff0cMeta\u670d\u52a1\u662f\u7531nebula-metad\u8fdb\u7a0b\u63d0\u4f9b\u7684\uff0c\u8d1f\u8d23\u6570\u636e\u7ba1\u7406\uff0c\u4f8b\u5982Schema\u64cd\u4f5c\u3001\u96c6\u7fa4\u7ba1\u7406\u548c\u7528\u6237\u6743\u9650\u7ba1\u7406\u7b49\u3002 Meta\u670d\u52a1\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1 Meta\u670d\u52a1 \u3002 Graph\u670d\u52a1\u548cStorage\u670d\u52a1 \u00b6 Nebula Graph\u91c7\u7528\u8ba1\u7b97\u5b58\u50a8\u5206\u79bb\u67b6\u6784\u3002Graph\u670d\u52a1\u8d1f\u8d23\u5904\u7406\u8ba1\u7b97\u8bf7\u6c42\uff0cStorage\u670d\u52a1\u8d1f\u8d23\u5b58\u50a8\u6570\u636e\u3002\u5b83\u4eec\u7531\u4e0d\u540c\u7684\u8fdb\u7a0b\u63d0\u4f9b\uff0cGraph\u670d\u52a1\u662f\u7531nebula-graphd\u8fdb\u7a0b\u63d0\u4f9b\uff0cStorage\u670d\u52a1\u662f\u7531nebula-storaged\u8fdb\u7a0b\u63d0\u4f9b\u3002\u8ba1\u7b97\u5b58\u50a8\u5206\u79bb\u67b6\u6784\u7684\u4f18\u52bf\u5982\u4e0b\uff1a \u6613\u6269\u5c55 \u5206\u5e03\u5f0f\u67b6\u6784\u4fdd\u8bc1\u4e86Graph\u670d\u52a1\u548cStorage\u670d\u52a1\u7684\u7075\u6d3b\u6027\uff0c\u65b9\u4fbf\u6269\u5bb9\u548c\u7f29\u5bb9\u3002 \u9ad8\u53ef\u7528 \u5982\u679c\u63d0\u4f9bGraph\u670d\u52a1\u7684\u670d\u52a1\u5668\u6709\u4e00\u90e8\u5206\u51fa\u73b0\u6545\u969c\uff0c\u5176\u4f59\u670d\u52a1\u5668\u53ef\u4ee5\u7ee7\u7eed\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\uff0c\u800c\u4e14Storage\u670d\u52a1\u5b58\u50a8\u7684\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\u3002\u670d\u52a1\u6062\u590d\u901f\u5ea6\u8f83\u5feb\uff0c\u751a\u81f3\u80fd\u505a\u5230\u7528\u6237\u65e0\u611f\u77e5\u3002 \u8282\u7ea6\u6210\u672c \u8ba1\u7b97\u5b58\u50a8\u5206\u79bb\u67b6\u6784\u80fd\u591f\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u800c\u4e14\u53ef\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u7075\u6d3b\u63a7\u5236\u6210\u672c\u3002\u5982\u679c\u4f7f\u7528 Nebula Graph Cloud \uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8282\u7ea6\u6210\u672c\u3002 \u5f00\u653e\u66f4\u591a\u53ef\u80fd\u6027 \u57fa\u4e8e\u5206\u79bb\u67b6\u6784\u7684\u7279\u6027\uff0cGraph\u670d\u52a1\u53ef\u4ee5\u5728\u591a\u79cd\u5b58\u50a8\u5f15\u64ce\u4e0a\u5355\u72ec\u8fd0\u884c\uff0cStorage\u670d\u52a1\u4e5f\u53ef\u4ee5\u4e3a\u591a\u79cd\u8ba1\u7b97\u5f15\u64ce\u63d0\u4f9b\u670d\u52a1\u3002 Graph\u670d\u52a1\u548cStorage\u670d\u52a1\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1 Graph\u670d\u52a1 \u548c Storage\u670d\u52a1 \u3002","title":"Architecture overview"},{"location":"1.introduction/3.nebula-graph-architecture/1.architecture-overview/#_1","text":"Nebula Graph\u7531\u4e09\u79cd\u670d\u52a1\u6784\u6210\uff1aGraph\u670d\u52a1\u3001Meta\u670d\u52a1\u548cStorage\u670d\u52a1\u3002 \u6bcf\u4e2a\u670d\u52a1\u90fd\u6709\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u5bf9\u5e94\u8fdb\u7a0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6587\u4ef6\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u8ba1\u7b97\u673a\u4e0a\u90e8\u7f72Nebula Graph\u96c6\u7fa4\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86Nebula Graph\u96c6\u7fa4\u7684\u7ecf\u5178\u67b6\u6784\u3002","title":"\u67b6\u6784\u603b\u89c8"},{"location":"1.introduction/3.nebula-graph-architecture/1.architecture-overview/#meta","text":"\u5728Nebula Graph\u67b6\u6784\u4e2d\uff0cMeta\u670d\u52a1\u662f\u7531nebula-metad\u8fdb\u7a0b\u63d0\u4f9b\u7684\uff0c\u8d1f\u8d23\u6570\u636e\u7ba1\u7406\uff0c\u4f8b\u5982Schema\u64cd\u4f5c\u3001\u96c6\u7fa4\u7ba1\u7406\u548c\u7528\u6237\u6743\u9650\u7ba1\u7406\u7b49\u3002 Meta\u670d\u52a1\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1 Meta\u670d\u52a1 \u3002","title":"Meta\u670d\u52a1"},{"location":"1.introduction/3.nebula-graph-architecture/1.architecture-overview/#graphstorage","text":"Nebula Graph\u91c7\u7528\u8ba1\u7b97\u5b58\u50a8\u5206\u79bb\u67b6\u6784\u3002Graph\u670d\u52a1\u8d1f\u8d23\u5904\u7406\u8ba1\u7b97\u8bf7\u6c42\uff0cStorage\u670d\u52a1\u8d1f\u8d23\u5b58\u50a8\u6570\u636e\u3002\u5b83\u4eec\u7531\u4e0d\u540c\u7684\u8fdb\u7a0b\u63d0\u4f9b\uff0cGraph\u670d\u52a1\u662f\u7531nebula-graphd\u8fdb\u7a0b\u63d0\u4f9b\uff0cStorage\u670d\u52a1\u662f\u7531nebula-storaged\u8fdb\u7a0b\u63d0\u4f9b\u3002\u8ba1\u7b97\u5b58\u50a8\u5206\u79bb\u67b6\u6784\u7684\u4f18\u52bf\u5982\u4e0b\uff1a \u6613\u6269\u5c55 \u5206\u5e03\u5f0f\u67b6\u6784\u4fdd\u8bc1\u4e86Graph\u670d\u52a1\u548cStorage\u670d\u52a1\u7684\u7075\u6d3b\u6027\uff0c\u65b9\u4fbf\u6269\u5bb9\u548c\u7f29\u5bb9\u3002 \u9ad8\u53ef\u7528 \u5982\u679c\u63d0\u4f9bGraph\u670d\u52a1\u7684\u670d\u52a1\u5668\u6709\u4e00\u90e8\u5206\u51fa\u73b0\u6545\u969c\uff0c\u5176\u4f59\u670d\u52a1\u5668\u53ef\u4ee5\u7ee7\u7eed\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\uff0c\u800c\u4e14Storage\u670d\u52a1\u5b58\u50a8\u7684\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\u3002\u670d\u52a1\u6062\u590d\u901f\u5ea6\u8f83\u5feb\uff0c\u751a\u81f3\u80fd\u505a\u5230\u7528\u6237\u65e0\u611f\u77e5\u3002 \u8282\u7ea6\u6210\u672c \u8ba1\u7b97\u5b58\u50a8\u5206\u79bb\u67b6\u6784\u80fd\u591f\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u800c\u4e14\u53ef\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u7075\u6d3b\u63a7\u5236\u6210\u672c\u3002\u5982\u679c\u4f7f\u7528 Nebula Graph Cloud \uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8282\u7ea6\u6210\u672c\u3002 \u5f00\u653e\u66f4\u591a\u53ef\u80fd\u6027 \u57fa\u4e8e\u5206\u79bb\u67b6\u6784\u7684\u7279\u6027\uff0cGraph\u670d\u52a1\u53ef\u4ee5\u5728\u591a\u79cd\u5b58\u50a8\u5f15\u64ce\u4e0a\u5355\u72ec\u8fd0\u884c\uff0cStorage\u670d\u52a1\u4e5f\u53ef\u4ee5\u4e3a\u591a\u79cd\u8ba1\u7b97\u5f15\u64ce\u63d0\u4f9b\u670d\u52a1\u3002 Graph\u670d\u52a1\u548cStorage\u670d\u52a1\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1 Graph\u670d\u52a1 \u548c Storage\u670d\u52a1 \u3002","title":"Graph\u670d\u52a1\u548cStorage\u670d\u52a1"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/","text":"Meta\u670d\u52a1 \u00b6 \u672c\u6587\u4ecb\u7ecdMeta\u670d\u52a1\u7684\u67b6\u6784\u548c\u529f\u80fd\u3002 Meta\u670d\u52a1\u67b6\u6784 \u00b6 Meta\u670d\u52a1\u662f\u7531nebula-metad\u8fdb\u7a0b\u63d0\u4f9b\u7684\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u573a\u666f\u914d\u7f6enebula-metad\u8fdb\u7a0b\u6570\u91cf\uff1a \u6d4b\u8bd5\u73af\u5883\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u6bcf\u4e2a\u673a\u5668\u4e0a\u914d\u7f6e1\u4e2a\u62163\u4e2anebula-metad\u8fdb\u7a0b\u3002 \u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5efa\u8bae\u60a8\u5728\u6bcf\u4e2a\u673a\u5668\u4e0a\u90fd\u914d\u7f6e3\u4e2anebula-metad\u8fdb\u7a0b\u4ee5\u4fdd\u8bc1\u9ad8\u53ef\u7528\u3002 \u6240\u6709nebula-metad\u8fdb\u7a0b\u6784\u6210\u4e86\u57fa\u4e8eRaft\u534f\u8bae\u7684\u96c6\u7fa4\uff0c\u5176\u4e2d\u4e00\u4e2a\u8fdb\u7a0b\u662fleader\uff0c\u5176\u4ed6\u8fdb\u7a0b\u90fd\u662ffollower\u3002 leader\u662f\u7531\u591a\u6570\u6d3e\u9009\u4e3e\u51fa\u6765\uff0c\u53ea\u6709leader\u80fd\u591f\u5bf9\u5ba2\u6237\u7aef\u6216\u5176\u4ed6\u7ec4\u4ef6\u63d0\u4f9b\u670d\u52a1\uff0c\u5176\u4ed6follower\u4f5c\u4e3a\u5019\u8865\uff0c\u5982\u679cleader\u51fa\u73b0\u6545\u969c\uff0c\u4f1a\u5728\u6240\u6709follower\u4e2d\u9009\u4e3e\u51fa\u65b0\u7684leader\u3002 \u8bf4\u660e \uff1aleader\u548cfollower\u7684\u6570\u636e\u901a\u8fc7Raft\u534f\u8bae\u4fdd\u6301\u4e00\u81f4\uff0c\u56e0\u6b64leader\u6545\u969c\u548c\u9009\u4e3e\u65b0leader\u4e0d\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\u3002 Meta\u670d\u52a1\u529f\u80fd \u00b6 \u7ba1\u7406\u7528\u6237\u8d26\u53f7 \u00b6 Meta\u670d\u52a1\u4e2d\u5b58\u50a8\u4e86\u7528\u6237\u7684\u8d26\u53f7\u548c\u6743\u9650\u4fe1\u606f\uff0c\u5f53\u5ba2\u6237\u7aef\u901a\u8fc7\u8d26\u53f7\u53d1\u9001\u8bf7\u6c42\u7ed9Meta\u670d\u52a1\uff0cMeta\u670d\u52a1\u4f1a\u68c0\u67e5\u8d26\u53f7\u4fe1\u606f\uff0c\u4ee5\u53ca\u8be5\u8d26\u53f7\u662f\u5426\u6709\u5bf9\u5e94\u7684\u8bf7\u6c42\u6743\u9650\u3002 \u66f4\u591aNebula Graph\u7684\u8bbf\u95ee\u63a7\u5236\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1\u9a8c\u8bc1\u548c\u6388\u6743\uff08TODO: doc\uff09\u3002 \u7ba1\u7406\u5206\u7247 \u00b6 Meta\u670d\u52a1\u8d1f\u8d23\u5b58\u50a8\u548c\u7ba1\u7406\u5206\u7247\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5e76\u4e14\u4fdd\u8bc1\u5206\u7247\u7684\u8d1f\u8f7d\u5747\u8861\u3002 \u7ba1\u7406\u56fe\u7a7a\u95f4 \u00b6 Nebula Graph\u652f\u6301\u591a\u4e2a\u56fe\u7a7a\u95f4\uff0c\u4e0d\u540c\u56fe\u7a7a\u95f4\u5185\u7684\u6570\u636e\u662f\u5b89\u5168\u9694\u79bb\u7684\u3002Meta\u670d\u52a1\u5b58\u50a8\u6240\u6709\u56fe\u7a7a\u95f4\u7684\u5143\u6570\u636e\uff08\u975e\u5b8c\u6574\u6570\u636e\uff09\uff0c\u5e76\u8ddf\u8e2a\u6570\u636e\u7684\u53d8\u66f4\uff0c\u4f8b\u5982\u589e\u52a0\u6216\u5220\u9664\u56fe\u7a7a\u95f4\u3002 \u7ba1\u7406Schema\u4fe1\u606f \u00b6 Nebula Graph\u662f\u5f3a\u7c7b\u578b\u56fe\u6570\u636e\u5e93\uff0c\u5b83\u7684Schema\u5305\u62ec\u6807\u7b7e\u3001\u8fb9\u7c7b\u578b\u3001\u6807\u7b7e\u5c5e\u6027\u548c\u8fb9\u7c7b\u578b\u5c5e\u6027\u3002 Meta\u670d\u52a1\u4e2d\u5b58\u50a8\u4e86Schema\u4fe1\u606f\uff0c\u540c\u65f6\u8fd8\u8d1f\u8d23Schema\u7684\u6dfb\u52a0\u3001\u4fee\u6539\u548c\u5220\u9664\uff0c\u5e76\u8bb0\u5f55\u5b83\u4eec\u7684\u7248\u672c\u3002 \u66f4\u591aNebula Graph\u7684Schema\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6570\u636e\u6a21\u578b \u3002 \u7ba1\u7406\u57fa\u4e8eTTL\u7684\u6570\u636e\u56de\u6536 \u00b6 Meta\u670d\u52a1\u63d0\u4f9b\u57fa\u4e8eTTL\uff08time to live\uff09\u7684\u81ea\u52a8\u6570\u636e\u56de\u6536\u548c\u7a7a\u95f4\u56de\u6536\u3002 \u7ba1\u7406\u4f5c\u4e1a \u00b6 Meta\u670d\u52a1\u4e2d\u7684\u4f5c\u4e1a\u7ba1\u7406\u6a21\u5757\u8d1f\u8d23\u4f5c\u4e1a\u7684\u521b\u5efa\u3001\u6392\u961f\u3001\u67e5\u8be2\u548c\u5220\u9664\u3002","title":"Meta Service"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#meta","text":"\u672c\u6587\u4ecb\u7ecdMeta\u670d\u52a1\u7684\u67b6\u6784\u548c\u529f\u80fd\u3002","title":"Meta\u670d\u52a1"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#meta_1","text":"Meta\u670d\u52a1\u662f\u7531nebula-metad\u8fdb\u7a0b\u63d0\u4f9b\u7684\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u573a\u666f\u914d\u7f6enebula-metad\u8fdb\u7a0b\u6570\u91cf\uff1a \u6d4b\u8bd5\u73af\u5883\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5728\u6bcf\u4e2a\u673a\u5668\u4e0a\u914d\u7f6e1\u4e2a\u62163\u4e2anebula-metad\u8fdb\u7a0b\u3002 \u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5efa\u8bae\u60a8\u5728\u6bcf\u4e2a\u673a\u5668\u4e0a\u90fd\u914d\u7f6e3\u4e2anebula-metad\u8fdb\u7a0b\u4ee5\u4fdd\u8bc1\u9ad8\u53ef\u7528\u3002 \u6240\u6709nebula-metad\u8fdb\u7a0b\u6784\u6210\u4e86\u57fa\u4e8eRaft\u534f\u8bae\u7684\u96c6\u7fa4\uff0c\u5176\u4e2d\u4e00\u4e2a\u8fdb\u7a0b\u662fleader\uff0c\u5176\u4ed6\u8fdb\u7a0b\u90fd\u662ffollower\u3002 leader\u662f\u7531\u591a\u6570\u6d3e\u9009\u4e3e\u51fa\u6765\uff0c\u53ea\u6709leader\u80fd\u591f\u5bf9\u5ba2\u6237\u7aef\u6216\u5176\u4ed6\u7ec4\u4ef6\u63d0\u4f9b\u670d\u52a1\uff0c\u5176\u4ed6follower\u4f5c\u4e3a\u5019\u8865\uff0c\u5982\u679cleader\u51fa\u73b0\u6545\u969c\uff0c\u4f1a\u5728\u6240\u6709follower\u4e2d\u9009\u4e3e\u51fa\u65b0\u7684leader\u3002 \u8bf4\u660e \uff1aleader\u548cfollower\u7684\u6570\u636e\u901a\u8fc7Raft\u534f\u8bae\u4fdd\u6301\u4e00\u81f4\uff0c\u56e0\u6b64leader\u6545\u969c\u548c\u9009\u4e3e\u65b0leader\u4e0d\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\u3002","title":"Meta\u670d\u52a1\u67b6\u6784"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#meta_2","text":"","title":"Meta\u670d\u52a1\u529f\u80fd"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#_1","text":"Meta\u670d\u52a1\u4e2d\u5b58\u50a8\u4e86\u7528\u6237\u7684\u8d26\u53f7\u548c\u6743\u9650\u4fe1\u606f\uff0c\u5f53\u5ba2\u6237\u7aef\u901a\u8fc7\u8d26\u53f7\u53d1\u9001\u8bf7\u6c42\u7ed9Meta\u670d\u52a1\uff0cMeta\u670d\u52a1\u4f1a\u68c0\u67e5\u8d26\u53f7\u4fe1\u606f\uff0c\u4ee5\u53ca\u8be5\u8d26\u53f7\u662f\u5426\u6709\u5bf9\u5e94\u7684\u8bf7\u6c42\u6743\u9650\u3002 \u66f4\u591aNebula Graph\u7684\u8bbf\u95ee\u63a7\u5236\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1\u9a8c\u8bc1\u548c\u6388\u6743\uff08TODO: doc\uff09\u3002","title":"\u7ba1\u7406\u7528\u6237\u8d26\u53f7"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#_2","text":"Meta\u670d\u52a1\u8d1f\u8d23\u5b58\u50a8\u548c\u7ba1\u7406\u5206\u7247\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5e76\u4e14\u4fdd\u8bc1\u5206\u7247\u7684\u8d1f\u8f7d\u5747\u8861\u3002","title":"\u7ba1\u7406\u5206\u7247"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#_3","text":"Nebula Graph\u652f\u6301\u591a\u4e2a\u56fe\u7a7a\u95f4\uff0c\u4e0d\u540c\u56fe\u7a7a\u95f4\u5185\u7684\u6570\u636e\u662f\u5b89\u5168\u9694\u79bb\u7684\u3002Meta\u670d\u52a1\u5b58\u50a8\u6240\u6709\u56fe\u7a7a\u95f4\u7684\u5143\u6570\u636e\uff08\u975e\u5b8c\u6574\u6570\u636e\uff09\uff0c\u5e76\u8ddf\u8e2a\u6570\u636e\u7684\u53d8\u66f4\uff0c\u4f8b\u5982\u589e\u52a0\u6216\u5220\u9664\u56fe\u7a7a\u95f4\u3002","title":"\u7ba1\u7406\u56fe\u7a7a\u95f4"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#schema","text":"Nebula Graph\u662f\u5f3a\u7c7b\u578b\u56fe\u6570\u636e\u5e93\uff0c\u5b83\u7684Schema\u5305\u62ec\u6807\u7b7e\u3001\u8fb9\u7c7b\u578b\u3001\u6807\u7b7e\u5c5e\u6027\u548c\u8fb9\u7c7b\u578b\u5c5e\u6027\u3002 Meta\u670d\u52a1\u4e2d\u5b58\u50a8\u4e86Schema\u4fe1\u606f\uff0c\u540c\u65f6\u8fd8\u8d1f\u8d23Schema\u7684\u6dfb\u52a0\u3001\u4fee\u6539\u548c\u5220\u9664\uff0c\u5e76\u8bb0\u5f55\u5b83\u4eec\u7684\u7248\u672c\u3002 \u66f4\u591aNebula Graph\u7684Schema\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u6570\u636e\u6a21\u578b \u3002","title":"\u7ba1\u7406Schema\u4fe1\u606f"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#ttl","text":"Meta\u670d\u52a1\u63d0\u4f9b\u57fa\u4e8eTTL\uff08time to live\uff09\u7684\u81ea\u52a8\u6570\u636e\u56de\u6536\u548c\u7a7a\u95f4\u56de\u6536\u3002","title":"\u7ba1\u7406\u57fa\u4e8eTTL\u7684\u6570\u636e\u56de\u6536"},{"location":"1.introduction/3.nebula-graph-architecture/2.meta-service/#_4","text":"Meta\u670d\u52a1\u4e2d\u7684\u4f5c\u4e1a\u7ba1\u7406\u6a21\u5757\u8d1f\u8d23\u4f5c\u4e1a\u7684\u521b\u5efa\u3001\u6392\u961f\u3001\u67e5\u8be2\u548c\u5220\u9664\u3002","title":"\u7ba1\u7406\u4f5c\u4e1a"},{"location":"1.introduction/3.nebula-graph-architecture/3.graph-service/","text":"Graph\u670d\u52a1 \u00b6 \u8bf4\u660e \uff1a\u7f16\u5199\u8be5\u6587\u6863\u662f\u4e0b\u4e00\u4e2aNebula Graph\u6280\u672f\u6587\u6863\u5de5\u7a0b\u5e08\u7684\u57f9\u8bad\u4efb\u52a1\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3Graph\u670d\u52a1\uff0c\u8bf7\u53c2\u89c1 Nebula Graph 2.0 Query Engine \u3002","title":"Graph Service"},{"location":"1.introduction/3.nebula-graph-architecture/3.graph-service/#graph","text":"\u8bf4\u660e \uff1a\u7f16\u5199\u8be5\u6587\u6863\u662f\u4e0b\u4e00\u4e2aNebula Graph\u6280\u672f\u6587\u6863\u5de5\u7a0b\u5e08\u7684\u57f9\u8bad\u4efb\u52a1\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3Graph\u670d\u52a1\uff0c\u8bf7\u53c2\u89c1 Nebula Graph 2.0 Query Engine \u3002","title":"Graph\u670d\u52a1"},{"location":"1.introduction/3.nebula-graph-architecture/4.storage-service/","text":"Storage\u670d\u52a1 \u00b6 \u8bf4\u660e \uff1a\u8be5\u6587\u6863\u6b63\u7528\u4e8e\u62db\u8058\u6d4b\u8bd5\u4e2d\uff0c\u56e0\u6b64\u5b98\u65b9\u7248\u672c\u5c06\u5728\u56db\u6708\u5e95\u53d1\u5e03\u3002\u5982\u679c\u4f60\u60f3\u52a0\u5165\u6211\u4eec\u7684\u56e2\u961f\uff0c\u8bf7\u968f\u65f6 \u8054\u7cfb\u6211\u4eec \u3002\u5982\u679c\u611f\u5174\u8da3\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u8bdd\u9898 \u63d0\u4ea4\u8d21\u732e \u3002 \u53c2\u8003\u6587\u6863 Nebula Graph's Storage Engine Architecture overview Meta Service","title":"Storage Service"},{"location":"1.introduction/3.nebula-graph-architecture/4.storage-service/#storage","text":"\u8bf4\u660e \uff1a\u8be5\u6587\u6863\u6b63\u7528\u4e8e\u62db\u8058\u6d4b\u8bd5\u4e2d\uff0c\u56e0\u6b64\u5b98\u65b9\u7248\u672c\u5c06\u5728\u56db\u6708\u5e95\u53d1\u5e03\u3002\u5982\u679c\u4f60\u60f3\u52a0\u5165\u6211\u4eec\u7684\u56e2\u961f\uff0c\u8bf7\u968f\u65f6 \u8054\u7cfb\u6211\u4eec \u3002\u5982\u679c\u611f\u5174\u8da3\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u8bdd\u9898 \u63d0\u4ea4\u8d21\u732e \u3002 \u53c2\u8003\u6587\u6863 Nebula Graph's Storage Engine Architecture overview Meta Service","title":"Storage\u670d\u52a1"},{"location":"2.quick-start/0.FAQ/","text":"\u5e38\u89c1\u95ee\u9898FAQ \u00b6 \u5173\u4e8eopenCypher\u517c\u5bb9\u6027 \u00b6 nGQL\u517c\u5bb9openCypher 9\u5417\uff1f \u00b6 nGQL\u90e8\u5206\u517c\u5bb9openCypher 9\u3002 \u5728 Nebula Graph Issues \u4e2d\u5df2\u7ecf\u5217\u51fa\u5df2\u77e5\u7684\u4e0d\u517c\u5bb9\u9879\u3002\u5982\u679c\u60a8\u53d1\u73b0\u8fd9\u79cd\u7c7b\u578b\u7684\u65b0\u95ee\u9898\uff0c\u8bf7\u63d0\u4ea4\u95ee\u9898\u5e76\u9644\u5e26 incompatible \u6807\u7b7e\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u5b57 compatibility \u641c\u7d22\u517c\u5bb9\u6027\u95ee\u9898\u3002 \u4e0b\u9762\u662fnGQL\u548copenCypher 9\u7684\u4e3b\u8981\u5dee\u5f02\uff08\u7531\u4e8e\u8bbe\u8ba1\u539f\u56e0\u800c\u4e0d\u517c\u5bb9\uff09\u3002 \u7c7b\u522b openCypher 9 nGQL Schema \u5f31Schema \u5f3aSchema \u76f8\u7b49\u8fd0\u7b97\u7b26 = == \u6570\u5b66\u6c42\u5e42 ^ \u4f7f\u7528 pow(x, y) \u66ff\u4ee3 ^ \u8fb9rank \u65e0\u6b64\u6982\u5ff5 \u7528 @rank \u8bbe\u7f6e \u8bed\u53e5 - \u4e0d\u652f\u6301openCypher 9\u7684\u6240\u6709DML\u8bed\u53e5\uff08 CREATE \u3001 MERGE \u7b49\uff09\u548c\u90e8\u5206 MATCH \u8bed\u53e5\u3002 \u8bf4\u660e \uff1a\u8bf7\u6ce8\u610f openCypher 9 \u548c Cypher \u5728\u8bed\u6cd5\u548c\u8bb8\u53ef\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\u3002\u4f8b\u5982Cypher\u8981\u6c42\u6240\u6709Cypher\u8bed\u53e5\u5fc5\u987b\u663e\u5f0f\u5730\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u6267\u884c\uff0c\u800copenCypher\u6ca1\u6709\u8fd9\u6837\u7684\u8981\u6c42\u3002\u53e6\u5916\uff0cnGQL\u6682\u4e0d\u652f\u6301\u4e8b\u52a1\u3002 \u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u66f4\u591anGQL\u7684\u793a\u4f8b\uff1f \u00b6 \u60a8\u53ef\u4ee5\u5728Nebula Graph GitHub\u7684 features \u76ee\u5f55\u5185\u67e5\u770b\u8d85\u8fc72500\u6761nGQL\u793a\u4f8b\u3002 features\u76ee\u5f55\u5185\u5305\u542b\u5f88\u591a.features\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u8bb0\u5f55\u4e86\u4f7f\u7528nGQL\u7684\u573a\u666f\u548c\u793a\u4f8b\u3002\u4f8b\u5982\uff1a Feature: Match seek by tag Background: Prepare space Given a graph with space named \"nba\" Scenario: seek by empty tag index When executing query: \"\"\" MATCH (v:bachelor) RETURN id(v) AS vid \"\"\" Then the result should be, in any order: | vid | | 'Tim Duncan' | And no side effects When executing query: \"\"\" MATCH (v:bachelor) RETURN id(v) AS vid, v.age AS age \"\"\" Then the result should be, in any order: | vid | age | | 'Tim Duncan' | 42 | And no side effects \u793a\u4f8b\u4e2d\u7684\u5173\u952e\u5b57\u8bf4\u660e\u5982\u4e0b\u3002 \u5173\u952e\u5b57 \u8bf4\u660e Feature \u63cf\u8ff0\u5f53\u524d\u6587\u6863\u7684\u4e3b\u9898\u3002 Background \u63cf\u8ff0\u5f53\u524d\u6587\u6863\u7684\u80cc\u666f\u4fe1\u606f\u3002 Given \u63cf\u8ff0\u6267\u884c\u793a\u4f8b\u8bed\u53e5\u7684\u524d\u63d0\u6761\u4ef6\u3002 Scenario \u63cf\u8ff0\u5177\u4f53\u573a\u666f\u3002\u5982\u679c\u573a\u666f\u4e4b\u524d\u6709 @skip \u6807\u8bc6\uff0c\u8868\u793a\u8fd9\u4e2a\u573a\u666f\u4e0b\u793a\u4f8b\u8bed\u53e5\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u8bf7\u4e0d\u8981\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u8be5\u793a\u4f8b\u8bed\u53e5\u3002 When \u63cf\u8ff0\u8981\u6267\u884c\u7684nGQL\u793a\u4f8b\u8bed\u53e5\u3002 Then \u63cf\u8ff0\u6267\u884c When \u5185\u8bed\u53e5\u7684\u9884\u671f\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u60a8\u7684\u8fd4\u56de\u7ed3\u679c\u548c\u6587\u6863\u4e0d\u540c\uff0c\u8bf7\u63d0\u4ea4 issue \u901a\u77e5Nebula Graph\u56e2\u961f\u3002 And \u63cf\u8ff0\u6267\u884c When \u5185\u8bed\u53e5\u7684\u526f\u4f5c\u7528\u3002 @skip \u8df3\u8fc7\u8fd9\u4e2a\u793a\u4f8b\u3002\u901a\u5e38\u8868\u793a\u6d4b\u8bd5\u4ee3\u7801\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u3002 \u6b22\u8fce\u60a8 \u589e\u52a0\u66f4\u591a\u5b9e\u7528\u573a\u666f\u793a\u4f8b \uff0c\u6210\u4e3aNebula Graph\u8d21\u732e\u8005\u3002 \u5173\u4e8e\u6570\u636e\u6a21\u578b \u00b6 Nebula Graph\u652f\u6301 W3C \u7684RDF\uff08SPARQL \u6216 GraphQL\uff09\u5417\uff1f \u00b6 \u4e0d\u652f\u6301\u3002 Nebula Graph\u7684\u6570\u636e\u6a21\u578b\u662f\u5c5e\u6027\u56fe\uff0c\u662f\u4e00\u4e2a\u5f3aSchema\u7cfb\u7edf\uff0c\u4e0d\u652f\u6301RDF\u6807\u51c6\u3002 Nebula Graph\u7684\u67e5\u8be2\u8bed\u8a00\u4e5f\u4e0d\u652f\u6301SPARQL\u548cGraphQL\u3002 \u5173\u4e8e\u6267\u884c \u00b6 \u8fd4\u56de\u6d88\u606f\u4e2d time spent \u7684\u542b\u4e49\u662f\u4ec0\u4e48\uff1f \u00b6 \u5c06\u547d\u4ee4 SHOW SPACES \u8fd4\u56de\u7684\u6d88\u606f\u4f5c\u4e3a\u793a\u4f8b\uff1a nebula> SHOW SPACES; +------+ | Name | +------+ | nba | +------+ Got 1 rows (time spent 1235/1934 us) \u7b2c\u4e00\u4e2a\u6570\u5b57 1235 \u8868\u793a\u6570\u636e\u5e93\u672c\u8eab\u6267\u884c\u8be5\u547d\u4ee4\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u5373\u67e5\u8be2\u5f15\u64ce\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u4e00\u4e2a\u67e5\u8be2\uff0c\u7136\u540e\u4ece\u5b58\u50a8\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\u5e76\u6267\u884c\u4e00\u7cfb\u5217\u8ba1\u7b97\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002 \u7b2c\u4e8c\u4e2a\u6570\u5b57 1934 \u8868\u793a\u4ece\u5ba2\u6237\u7aef\u89d2\u5ea6\u770b\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u5373\u4ece\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u3001\u63a5\u6536\u7ed3\u679c\uff0c\u7136\u540e\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7ed3\u679c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002 \u53ef\u4ee5\u5728 CREATE SPACE \u65f6\u8bbe\u7f6e replica_factor \u4e3a\u5076\u6570\uff08\u4f8b\u5982\u8bbe\u7f6e\u4e3a2\uff09\u5417\uff1f \u00b6 \u4e0d\u8981\u8fd9\u6837\u8bbe\u7f6e\u3002 Storage\u670d\u52a1\u4f7f\u7528Raft\u534f\u8bae\uff08\u591a\u6570\u8868\u51b3\uff09\uff0c\u4e3a\u4fdd\u8bc1\u53ef\u7528\u6027\uff0c\u8981\u6c42\u51fa\u6545\u969c\u7684\u526f\u672c\u6570\u91cf\u4e0d\u80fd\u8fbe\u5230\u4e00\u534a\u3002 \u5982\u679c replica_factor=2 \uff0c\u5f53\u5176\u4e2d\u4e00\u4e2a\u526f\u672c\u6545\u969c\u65f6\uff0c\u5c31\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u65e0\u6cd5\u5de5\u4f5c\uff1b\u5982\u679c replica_factor=4 \uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u526f\u672c\u53ef\u4ee5\u51fa\u73b0\u6545\u969c\uff0c\u8fd9\u548c replica_factor=3 \u662f\u4e00\u6837\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6240\u4ee5 replica_factor \u8bbe\u7f6e\u4e3a\u5947\u6570\u5373\u53ef\u3002 \u5efa\u8bae\u60a8\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8bbe\u7f6e replica_factor=3 \uff0c\u6d4b\u8bd5\u73af\u5883\u4e2d\u8bbe\u7f6e replica_factor=1 \uff0c\u4e0d\u8981\u4f7f\u7528\u5076\u6570\u3002 \u5982\u4f55\u5904\u7406\u62a5\u9519 [ERROR (-7)]: SyntaxError: syntax error near \uff1f \u00b6 \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u67e5\u8be2\u8bed\u53e5\u9700\u8981\u6709 YIELD \u6216 RETURN \uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u67e5\u8be2\u8bed\u53e5\u662f\u5426\u5305\u542b\u3002 \u5982\u4f55\u7edf\u8ba1\u6bcf\u79cdTag\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u8fb9\u7c7b\u578b\u6709\u591a\u5c11\u6761\u8fb9? \u00b6 \u8bf7\u53c2\u89c1 show-stats \u3002 \u5982\u4f55\u83b7\u53d6\u6bcf\u79cdTag\u7684\u6240\u6709\u70b9\uff0c\u6216\u8005\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u6240\u6709\u8fb9? \u00b6 \u5efa\u7acb\u5e76\u91cd\u5efa\u7d22\u5f15 > CREATE TAG INDEX i_player ON player(); > REBUILD TAG INDEX i_player; \u4f7f\u7528 LOOKUP \u6216 MATCH \u8bed\u53e5\u3002\u4f8b\u5982\uff1a > LOOKUP ON player; > MATCH (n:player) RETURN n; \u66f4\u591a\u8be6\u60c5\u8bf7\u53c2\u89c1 INDEX \u3001 LOOKUP \u548c MATCH \u3002 Error can\u2019t solve the start vids from the sentence \u00b6 \u67e5\u8be2\u5f15\u64ce\u9700\u8981\u77e5\u9053\u4ece\u54ea\u4e9bVID\u5f00\u59cb\u56fe\u904d\u5386. \u8fd9\u4e9b\u5f00\u59cb\uff08\u56fe\u904d\u5386\uff09\u7684VID\uff0c\u6216\u8005\u901a\u8fc7\u7528\u6237\u6307\u5b9a\uff0c\u4f8b\u5982 > GO FROM ${vids} ... > MATCH (src) WHERE id(src) == ${vids} # \u5f00\u59cb\u56fe\u904d\u5386\u7684VID\u901a\u8fc7\u5982\u4e0a\u529e\u6cd5\u6307\u5b9a \u6216\u8005\u901a\u8fc7\u4e00\u4e2a(\u5c5e\u6027)\u7d22\u5f15\u6765\u5f97\u5230\uff0c\u4f8b\u5982 # CREATE TAG INDEX i_player ON player(name(20)); # REBUILD TAG INDEX i_player; > LOOKUP ON player WHERE player.name == \"abc\" | ... YIELD ... > MATCH (src) WHERE src.name == \"abc\" ... # \u901a\u8fc7\u70b9\u5c5e\u6027name\u7684\u7d22\u5f15\uff0c\u6765\u5f97\u5230VID \u5426\u5219\uff0c\u5c31\u4f1a\u629b\u51fa\u8fd9\u6837\u4e00\u4e2a\u5f02\u5e38 can\u2019t solve the start vids from the sentence \u3002 Error Storage Error: The VID must be a 64-bit integer or a string. \u00b6 \u68c0\u67e5\u8f93\u5165\u7684 vid \u662f\u5426\u662f create space \u8bbe\u7f6e\u7684\u6574\u578b\u6216\u8005 fix_string(N) . \u5982\u679c\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u68c0\u67e5\u957f\u5ea6\u662f\u5426\u8d85\u8fc7 N (\u9ed8\u8ba4\u4e3a 8 ). \u89c1 create space . \u5173\u4e8e\u8fd0\u7ef4 \u00b6 \u65e5\u5fd7\u6587\u4ef6\u8fc7\u5927\u65f6\u5982\u4f55\u56de\u6536\u65e5\u5fd7\uff1f \u00b6 Nebula Graph\u4f7f\u7528 glog \u6253\u5370\u65e5\u5fd7\u3002glog \u6ca1\u6709\u65e5\u5fd7\u56de\u6536\u7684\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 crontab \u8bbe\u7f6e\u5b9a\u671f\u4efb\u52a1\u56de\u6536\u65e5\u5fd7\u6587\u4ef6\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 Glog should delete old log files automaticly \u3002 \u5173\u4e8e\u672c\u624b\u518c \u00b6 \u4e3a\u4ec0\u4e48\u624b\u518c\u793a\u4f8b\u548c\u7cfb\u7edf\u884c\u4e3a\u4e0d\u4e00\u81f4\uff1f \u00b6 Nebula Graph 2.0\u4e00\u76f4\u5728\u6301\u7eed\u5f00\u53d1\uff0c\u529f\u80fd\u6216\u64cd\u4f5c\u7684\u884c\u4e3a\u53ef\u80fd\u4f1a\u6709\u53d8\u5316\uff0c\u5982\u679c\u60a8\u53d1\u73b0\u4e0d\u4e00\u81f4\uff0c\u8bf7\u63d0\u4ea4 issue \u901a\u77e5Nebula Graph\u56e2\u961f\u3002","title":"FAQ"},{"location":"2.quick-start/0.FAQ/#faq","text":"","title":"\u5e38\u89c1\u95ee\u9898FAQ"},{"location":"2.quick-start/0.FAQ/#opencypher","text":"","title":"\u5173\u4e8eopenCypher\u517c\u5bb9\u6027"},{"location":"2.quick-start/0.FAQ/#ngqlopencypher_9","text":"nGQL\u90e8\u5206\u517c\u5bb9openCypher 9\u3002 \u5728 Nebula Graph Issues \u4e2d\u5df2\u7ecf\u5217\u51fa\u5df2\u77e5\u7684\u4e0d\u517c\u5bb9\u9879\u3002\u5982\u679c\u60a8\u53d1\u73b0\u8fd9\u79cd\u7c7b\u578b\u7684\u65b0\u95ee\u9898\uff0c\u8bf7\u63d0\u4ea4\u95ee\u9898\u5e76\u9644\u5e26 incompatible \u6807\u7b7e\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u5b57 compatibility \u641c\u7d22\u517c\u5bb9\u6027\u95ee\u9898\u3002 \u4e0b\u9762\u662fnGQL\u548copenCypher 9\u7684\u4e3b\u8981\u5dee\u5f02\uff08\u7531\u4e8e\u8bbe\u8ba1\u539f\u56e0\u800c\u4e0d\u517c\u5bb9\uff09\u3002 \u7c7b\u522b openCypher 9 nGQL Schema \u5f31Schema \u5f3aSchema \u76f8\u7b49\u8fd0\u7b97\u7b26 = == \u6570\u5b66\u6c42\u5e42 ^ \u4f7f\u7528 pow(x, y) \u66ff\u4ee3 ^ \u8fb9rank \u65e0\u6b64\u6982\u5ff5 \u7528 @rank \u8bbe\u7f6e \u8bed\u53e5 - \u4e0d\u652f\u6301openCypher 9\u7684\u6240\u6709DML\u8bed\u53e5\uff08 CREATE \u3001 MERGE \u7b49\uff09\u548c\u90e8\u5206 MATCH \u8bed\u53e5\u3002 \u8bf4\u660e \uff1a\u8bf7\u6ce8\u610f openCypher 9 \u548c Cypher \u5728\u8bed\u6cd5\u548c\u8bb8\u53ef\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\u3002\u4f8b\u5982Cypher\u8981\u6c42\u6240\u6709Cypher\u8bed\u53e5\u5fc5\u987b\u663e\u5f0f\u5730\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u6267\u884c\uff0c\u800copenCypher\u6ca1\u6709\u8fd9\u6837\u7684\u8981\u6c42\u3002\u53e6\u5916\uff0cnGQL\u6682\u4e0d\u652f\u6301\u4e8b\u52a1\u3002","title":"nGQL\u517c\u5bb9openCypher 9\u5417\uff1f"},{"location":"2.quick-start/0.FAQ/#ngql","text":"\u60a8\u53ef\u4ee5\u5728Nebula Graph GitHub\u7684 features \u76ee\u5f55\u5185\u67e5\u770b\u8d85\u8fc72500\u6761nGQL\u793a\u4f8b\u3002 features\u76ee\u5f55\u5185\u5305\u542b\u5f88\u591a.features\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u8bb0\u5f55\u4e86\u4f7f\u7528nGQL\u7684\u573a\u666f\u548c\u793a\u4f8b\u3002\u4f8b\u5982\uff1a Feature: Match seek by tag Background: Prepare space Given a graph with space named \"nba\" Scenario: seek by empty tag index When executing query: \"\"\" MATCH (v:bachelor) RETURN id(v) AS vid \"\"\" Then the result should be, in any order: | vid | | 'Tim Duncan' | And no side effects When executing query: \"\"\" MATCH (v:bachelor) RETURN id(v) AS vid, v.age AS age \"\"\" Then the result should be, in any order: | vid | age | | 'Tim Duncan' | 42 | And no side effects \u793a\u4f8b\u4e2d\u7684\u5173\u952e\u5b57\u8bf4\u660e\u5982\u4e0b\u3002 \u5173\u952e\u5b57 \u8bf4\u660e Feature \u63cf\u8ff0\u5f53\u524d\u6587\u6863\u7684\u4e3b\u9898\u3002 Background \u63cf\u8ff0\u5f53\u524d\u6587\u6863\u7684\u80cc\u666f\u4fe1\u606f\u3002 Given \u63cf\u8ff0\u6267\u884c\u793a\u4f8b\u8bed\u53e5\u7684\u524d\u63d0\u6761\u4ef6\u3002 Scenario \u63cf\u8ff0\u5177\u4f53\u573a\u666f\u3002\u5982\u679c\u573a\u666f\u4e4b\u524d\u6709 @skip \u6807\u8bc6\uff0c\u8868\u793a\u8fd9\u4e2a\u573a\u666f\u4e0b\u793a\u4f8b\u8bed\u53e5\u53ef\u80fd\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u8bf7\u4e0d\u8981\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u8be5\u793a\u4f8b\u8bed\u53e5\u3002 When \u63cf\u8ff0\u8981\u6267\u884c\u7684nGQL\u793a\u4f8b\u8bed\u53e5\u3002 Then \u63cf\u8ff0\u6267\u884c When \u5185\u8bed\u53e5\u7684\u9884\u671f\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u60a8\u7684\u8fd4\u56de\u7ed3\u679c\u548c\u6587\u6863\u4e0d\u540c\uff0c\u8bf7\u63d0\u4ea4 issue \u901a\u77e5Nebula Graph\u56e2\u961f\u3002 And \u63cf\u8ff0\u6267\u884c When \u5185\u8bed\u53e5\u7684\u526f\u4f5c\u7528\u3002 @skip \u8df3\u8fc7\u8fd9\u4e2a\u793a\u4f8b\u3002\u901a\u5e38\u8868\u793a\u6d4b\u8bd5\u4ee3\u7801\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u3002 \u6b22\u8fce\u60a8 \u589e\u52a0\u66f4\u591a\u5b9e\u7528\u573a\u666f\u793a\u4f8b \uff0c\u6210\u4e3aNebula Graph\u8d21\u732e\u8005\u3002","title":"\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u66f4\u591anGQL\u7684\u793a\u4f8b\uff1f"},{"location":"2.quick-start/0.FAQ/#_1","text":"","title":"\u5173\u4e8e\u6570\u636e\u6a21\u578b"},{"location":"2.quick-start/0.FAQ/#nebula_graph_w3c_rdfsparql_graphql","text":"\u4e0d\u652f\u6301\u3002 Nebula Graph\u7684\u6570\u636e\u6a21\u578b\u662f\u5c5e\u6027\u56fe\uff0c\u662f\u4e00\u4e2a\u5f3aSchema\u7cfb\u7edf\uff0c\u4e0d\u652f\u6301RDF\u6807\u51c6\u3002 Nebula Graph\u7684\u67e5\u8be2\u8bed\u8a00\u4e5f\u4e0d\u652f\u6301SPARQL\u548cGraphQL\u3002","title":"Nebula Graph\u652f\u6301 W3C \u7684RDF\uff08SPARQL \u6216 GraphQL\uff09\u5417\uff1f"},{"location":"2.quick-start/0.FAQ/#_2","text":"","title":"\u5173\u4e8e\u6267\u884c"},{"location":"2.quick-start/0.FAQ/#time_spent","text":"\u5c06\u547d\u4ee4 SHOW SPACES \u8fd4\u56de\u7684\u6d88\u606f\u4f5c\u4e3a\u793a\u4f8b\uff1a nebula> SHOW SPACES; +------+ | Name | +------+ | nba | +------+ Got 1 rows (time spent 1235/1934 us) \u7b2c\u4e00\u4e2a\u6570\u5b57 1235 \u8868\u793a\u6570\u636e\u5e93\u672c\u8eab\u6267\u884c\u8be5\u547d\u4ee4\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u5373\u67e5\u8be2\u5f15\u64ce\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u4e00\u4e2a\u67e5\u8be2\uff0c\u7136\u540e\u4ece\u5b58\u50a8\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\u5e76\u6267\u884c\u4e00\u7cfb\u5217\u8ba1\u7b97\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002 \u7b2c\u4e8c\u4e2a\u6570\u5b57 1934 \u8868\u793a\u4ece\u5ba2\u6237\u7aef\u89d2\u5ea6\u770b\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u5373\u4ece\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u3001\u63a5\u6536\u7ed3\u679c\uff0c\u7136\u540e\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7ed3\u679c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002","title":"\u8fd4\u56de\u6d88\u606f\u4e2dtime spent\u7684\u542b\u4e49\u662f\u4ec0\u4e48\uff1f"},{"location":"2.quick-start/0.FAQ/#create_spacereplica_factor2","text":"\u4e0d\u8981\u8fd9\u6837\u8bbe\u7f6e\u3002 Storage\u670d\u52a1\u4f7f\u7528Raft\u534f\u8bae\uff08\u591a\u6570\u8868\u51b3\uff09\uff0c\u4e3a\u4fdd\u8bc1\u53ef\u7528\u6027\uff0c\u8981\u6c42\u51fa\u6545\u969c\u7684\u526f\u672c\u6570\u91cf\u4e0d\u80fd\u8fbe\u5230\u4e00\u534a\u3002 \u5982\u679c replica_factor=2 \uff0c\u5f53\u5176\u4e2d\u4e00\u4e2a\u526f\u672c\u6545\u969c\u65f6\uff0c\u5c31\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u65e0\u6cd5\u5de5\u4f5c\uff1b\u5982\u679c replica_factor=4 \uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u526f\u672c\u53ef\u4ee5\u51fa\u73b0\u6545\u969c\uff0c\u8fd9\u548c replica_factor=3 \u662f\u4e00\u6837\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6240\u4ee5 replica_factor \u8bbe\u7f6e\u4e3a\u5947\u6570\u5373\u53ef\u3002 \u5efa\u8bae\u60a8\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8bbe\u7f6e replica_factor=3 \uff0c\u6d4b\u8bd5\u73af\u5883\u4e2d\u8bbe\u7f6e replica_factor=1 \uff0c\u4e0d\u8981\u4f7f\u7528\u5076\u6570\u3002","title":"\u53ef\u4ee5\u5728CREATE SPACE\u65f6\u8bbe\u7f6ereplica_factor\u4e3a\u5076\u6570\uff08\u4f8b\u5982\u8bbe\u7f6e\u4e3a2\uff09\u5417\uff1f"},{"location":"2.quick-start/0.FAQ/#error_-7_syntaxerror_syntax_error_near","text":"\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u67e5\u8be2\u8bed\u53e5\u9700\u8981\u6709 YIELD \u6216 RETURN \uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u67e5\u8be2\u8bed\u53e5\u662f\u5426\u5305\u542b\u3002","title":"\u5982\u4f55\u5904\u7406\u62a5\u9519[ERROR (-7)]: SyntaxError: syntax error near\uff1f"},{"location":"2.quick-start/0.FAQ/#tag","text":"\u8bf7\u53c2\u89c1 show-stats \u3002","title":"\u5982\u4f55\u7edf\u8ba1\u6bcf\u79cdTag\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u8fb9\u7c7b\u578b\u6709\u591a\u5c11\u6761\u8fb9?"},{"location":"2.quick-start/0.FAQ/#tag_1","text":"\u5efa\u7acb\u5e76\u91cd\u5efa\u7d22\u5f15 > CREATE TAG INDEX i_player ON player(); > REBUILD TAG INDEX i_player; \u4f7f\u7528 LOOKUP \u6216 MATCH \u8bed\u53e5\u3002\u4f8b\u5982\uff1a > LOOKUP ON player; > MATCH (n:player) RETURN n; \u66f4\u591a\u8be6\u60c5\u8bf7\u53c2\u89c1 INDEX \u3001 LOOKUP \u548c MATCH \u3002","title":"\u5982\u4f55\u83b7\u53d6\u6bcf\u79cdTag\u7684\u6240\u6709\u70b9\uff0c\u6216\u8005\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u6240\u6709\u8fb9?"},{"location":"2.quick-start/0.FAQ/#error_cant_solve_the_start_vids_from_the_sentence","text":"\u67e5\u8be2\u5f15\u64ce\u9700\u8981\u77e5\u9053\u4ece\u54ea\u4e9bVID\u5f00\u59cb\u56fe\u904d\u5386. \u8fd9\u4e9b\u5f00\u59cb\uff08\u56fe\u904d\u5386\uff09\u7684VID\uff0c\u6216\u8005\u901a\u8fc7\u7528\u6237\u6307\u5b9a\uff0c\u4f8b\u5982 > GO FROM ${vids} ... > MATCH (src) WHERE id(src) == ${vids} # \u5f00\u59cb\u56fe\u904d\u5386\u7684VID\u901a\u8fc7\u5982\u4e0a\u529e\u6cd5\u6307\u5b9a \u6216\u8005\u901a\u8fc7\u4e00\u4e2a(\u5c5e\u6027)\u7d22\u5f15\u6765\u5f97\u5230\uff0c\u4f8b\u5982 # CREATE TAG INDEX i_player ON player(name(20)); # REBUILD TAG INDEX i_player; > LOOKUP ON player WHERE player.name == \"abc\" | ... YIELD ... > MATCH (src) WHERE src.name == \"abc\" ... # \u901a\u8fc7\u70b9\u5c5e\u6027name\u7684\u7d22\u5f15\uff0c\u6765\u5f97\u5230VID \u5426\u5219\uff0c\u5c31\u4f1a\u629b\u51fa\u8fd9\u6837\u4e00\u4e2a\u5f02\u5e38 can\u2019t solve the start vids from the sentence \u3002","title":"Error can\u2019t solve the start vids from the sentence"},{"location":"2.quick-start/0.FAQ/#error_storage_error_the_vid_must_be_a_64-bit_integer_or_a_string","text":"\u68c0\u67e5\u8f93\u5165\u7684 vid \u662f\u5426\u662f create space \u8bbe\u7f6e\u7684\u6574\u578b\u6216\u8005 fix_string(N) . \u5982\u679c\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u68c0\u67e5\u957f\u5ea6\u662f\u5426\u8d85\u8fc7 N (\u9ed8\u8ba4\u4e3a 8 ). \u89c1 create space .","title":"Error Storage Error: The VID must be a 64-bit integer or a string."},{"location":"2.quick-start/0.FAQ/#_3","text":"","title":"\u5173\u4e8e\u8fd0\u7ef4"},{"location":"2.quick-start/0.FAQ/#_4","text":"Nebula Graph\u4f7f\u7528 glog \u6253\u5370\u65e5\u5fd7\u3002glog \u6ca1\u6709\u65e5\u5fd7\u56de\u6536\u7684\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 crontab \u8bbe\u7f6e\u5b9a\u671f\u4efb\u52a1\u56de\u6536\u65e5\u5fd7\u6587\u4ef6\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 Glog should delete old log files automaticly \u3002","title":"\u65e5\u5fd7\u6587\u4ef6\u8fc7\u5927\u65f6\u5982\u4f55\u56de\u6536\u65e5\u5fd7\uff1f"},{"location":"2.quick-start/0.FAQ/#_5","text":"","title":"\u5173\u4e8e\u672c\u624b\u518c"},{"location":"2.quick-start/0.FAQ/#_6","text":"Nebula Graph 2.0\u4e00\u76f4\u5728\u6301\u7eed\u5f00\u53d1\uff0c\u529f\u80fd\u6216\u64cd\u4f5c\u7684\u884c\u4e3a\u53ef\u80fd\u4f1a\u6709\u53d8\u5316\uff0c\u5982\u679c\u60a8\u53d1\u73b0\u4e0d\u4e00\u81f4\uff0c\u8bf7\u63d0\u4ea4 issue \u901a\u77e5Nebula Graph\u56e2\u961f\u3002","title":"\u4e3a\u4ec0\u4e48\u624b\u518c\u793a\u4f8b\u548c\u7cfb\u7edf\u884c\u4e3a\u4e0d\u4e00\u81f4\uff1f"},{"location":"2.quick-start/1.quick-start-workflow/","text":"\u5feb\u901f\u5165\u95e8 \u00b6 \u5feb\u901f\u5165\u95e8\u5c06\u4ecb\u7ecd\u5982\u4f55\u7b80\u5355\u5730\u4f7f\u7528Nebula Graph\uff0c\u5305\u62ec\u90e8\u7f72\u3001\u8fde\u63a5Nebula Graph\uff0c\u4ee5\u53ca\u57fa\u7840\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c\u3002 Docker Compose\u90e8\u7f72Nebula Graph \u8fde\u63a5Nebula Graph \u57fa\u7840\u64cd\u4f5c\u8bed\u6cd5 \u4ee5\u4e0b\u662f\u5176\u4ed6\u63a8\u8350\u60a8\u9605\u8bfb\u7684\u6587\u6863\u3002\u5728\u60a8\u5c1d\u8bd5\u8fc7\u5feb\u901f\u5165\u95e8\u7684\u64cd\u4f5c\u540e\uff0c\u60a8\u53ef\u80fd\u4f1a\u9700\u8981\u9605\u8bfb\u5b83\u4eec\u6765\u8fdb\u4e00\u6b65\u4e86\u89e3\u548c\u4f7f\u7528Nebula Graph\u3002 \u5e38\u89c1\u95ee\u9898FAQ \u90e8\u7f72Nebula Graph\u96c6\u7fa4 \u4e00\u4e9b \u5e38\u7528\u94fe\u63a5 Compaction","title":"Quick start workflow"},{"location":"2.quick-start/1.quick-start-workflow/#_1","text":"\u5feb\u901f\u5165\u95e8\u5c06\u4ecb\u7ecd\u5982\u4f55\u7b80\u5355\u5730\u4f7f\u7528Nebula Graph\uff0c\u5305\u62ec\u90e8\u7f72\u3001\u8fde\u63a5Nebula Graph\uff0c\u4ee5\u53ca\u57fa\u7840\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c\u3002 Docker Compose\u90e8\u7f72Nebula Graph \u8fde\u63a5Nebula Graph \u57fa\u7840\u64cd\u4f5c\u8bed\u6cd5 \u4ee5\u4e0b\u662f\u5176\u4ed6\u63a8\u8350\u60a8\u9605\u8bfb\u7684\u6587\u6863\u3002\u5728\u60a8\u5c1d\u8bd5\u8fc7\u5feb\u901f\u5165\u95e8\u7684\u64cd\u4f5c\u540e\uff0c\u60a8\u53ef\u80fd\u4f1a\u9700\u8981\u9605\u8bfb\u5b83\u4eec\u6765\u8fdb\u4e00\u6b65\u4e86\u89e3\u548c\u4f7f\u7528Nebula Graph\u3002 \u5e38\u89c1\u95ee\u9898FAQ \u90e8\u7f72Nebula Graph\u96c6\u7fa4 \u4e00\u4e9b \u5e38\u7528\u94fe\u63a5 Compaction","title":"\u5feb\u901f\u5165\u95e8"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/","text":"Docker Compose\u90e8\u7f72Nebula Graph \u00b6 \u6709\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u90e8\u7f72Nebula Graph\uff0c\u4f46\u662f\u4f7f\u7528Docker Compose\u901a\u5e38\u662f\u6700\u5feb\u7684\u65b9\u5f0f\u3002 \u9605\u8bfb\u6307\u5357 \u00b6 \u5982\u679c\u60a8\u662f\u5e26\u7740\u5982\u4e0b\u95ee\u9898\u9605\u8bfb\u672c\u6587\uff0c\u53ef\u4ee5\u76f4\u63a5\u5355\u51fb\u95ee\u9898\u8df3\u8f6c\u67e5\u770b\u5bf9\u5e94\u7684\u8bf4\u660e\u3002 \u90e8\u7f72Nebula Graph\u4e4b\u524d\u9700\u8981\u505a\u4ec0\u4e48\u51c6\u5907\u5de5\u4f5c\uff1f \u5982\u4f55\u901a\u8fc7Docker Compose\u5feb\u901f\u90e8\u7f72Nebula Graph\uff1f \u5982\u4f55\u68c0\u67e5Nebula Graph\u670d\u52a1\u7684\u72b6\u6001\u548c\u7aef\u53e3\uff1f \u5982\u4f55\u68c0\u67e5Nebula Graph\u670d\u52a1\u7684\u6570\u636e\u548c\u65e5\u5fd7\uff1f \u5982\u4f55\u505c\u6b62Nebula Graph\u670d\u52a1\uff1f \u5982\u4f55\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u90e8\u7f72Nebula Graph\uff1f \u524d\u63d0\u6761\u4ef6 \u00b6 \u4e3b\u673a\u4e0a\u5b89\u88c5\u5982\u4e0b\u5e94\u7528\u7a0b\u5e8f\u3002 \u5e94\u7528\u7a0b\u5e8f \u63a8\u8350\u7248\u672c \u5b98\u65b9\u5b89\u88c5\u53c2\u8003 Docker \u6700\u65b0\u7248\u672c Install Docker Engine Docker Compose \u6700\u65b0\u7248\u672c Install Docker Compose Git \u6700\u65b0\u7248\u672c Download Git \u5982\u679c\u60a8\u4f7f\u7528\u975eroot\u7528\u6237\u90e8\u7f72Nebula Graph\uff0c\u8bf7\u6388\u6743\u8be5\u7528\u6237Docker\u76f8\u5173\u7684\u6743\u9650\u3002\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 Manage Docker as a non-root user \u3002 \u542f\u52a8\u4e3b\u673a\u4e0a\u7684Docker\u670d\u52a1\u3002 \u5982\u679c\u60a8\u5df2\u7ecf\u901a\u8fc7Docker Compose\u5728\u4e3b\u673a\u4e0a\u90e8\u7f72\u4e86\u53e6\u4e00\u4e2a\u7248\u672c\u7684Nebula Graph\uff0c\u4e3a\u907f\u514d\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u9700\u8981\u60a8\u5220\u9664\u76ee\u5f55 nebula-docker-compose/data \u3002 \u8bf4\u660e \uff1a\u5982\u679c\u60a8\u9700\u8981\u5907\u4efd\u670d\u52a1\u6570\u636e\uff0c\u8bf7\u53c2\u89c1 \u4f7f\u7528BR\u5907\u4efd\u6570\u636e TODO: \u672a\u548cv2.0.0\u4e00\u8d77\u53d1\u5e03\u3002 \u90e8\u7f72\u548c\u8fde\u63a5Nebula Graph \u00b6 \u901a\u8fc7Git\u514b\u9686 nebula-docker-compose \u4ed3\u5e93\u7684 master \u5206\u652f\u5230\u60a8\u7684\u4e3b\u673a\u3002 \u7981\u6b62 \uff1a master \u5206\u652f\u5305\u542b\u6700\u65b0\u7684Nebula Graph\u5f00\u53d1\u7248\u672c\u7684Docker Compose\u89e3\u51b3\u65b9\u6848\u3002\u8bf7 \u4e0d\u8981 \u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u6b64\u7248\u672c\u3002 $ git clone https://github.com/vesoft-inc/nebula-docker-compose.git \u5207\u6362\u81f3\u76ee\u5f55 nebula-docker-compose \u3002 $ cd nebula-docker-compose/ \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u542f\u52a8Nebula Graph\u670d\u52a1\u3002 \u8bf4\u660e : \u5982\u679c\u957f\u671f\u672a\u66f4\u65b0\u955c\u50cf\uff0c\u8bf7\u5148\u66f4\u65b0 Nebula Graph\u955c\u50cf \u548c Nebula Console\u955c\u50cf \u3002 nebula-docker-compose ] $ docker-compose up -d Creating nebula-docker-compose_metad0_1 ... done Creating nebula-docker-compose_metad2_1 ... done Creating nebula-docker-compose_metad1_1 ... done Creating nebula-docker-compose_graphd2_1 ... done Creating nebula-docker-compose_graphd_1 ... done Creating nebula-docker-compose_graphd1_1 ... done Creating nebula-docker-compose_storaged0_1 ... done Creating nebula-docker-compose_storaged2_1 ... done Creating nebula-docker-compose_storaged1_1 ... done \u8bf4\u660e : \u4e0a\u8ff0\u670d\u52a1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u67b6\u6784\u603b\u89c8 \u3002 \u8fde\u63a5Nebula Graph\u3002 1. \u4f7f\u7528Nebula Console\u955c\u50cf\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u8fde\u63a5\u5230Nebula Graph\u670d\u52a1\u6240\u5728\u7684\u7f51\u7edc\uff08nebula-docker-compose_nebula-net\uff09\u4e2d\u3002 $ docker run --rm -ti --network nebula-docker-compose_nebula-net --entrypoint = /bin/sh vesoft/nebula-console:v2-nightly \u8bf4\u660e \uff1a\u60a8\u7684\u672c\u5730\u7f51\u7edc\u53ef\u80fd\u548c\u793a\u4f8b\u4e2d\u7684 nebula-docker-compose_nebula-net \u4e0d\u540c\uff0c\u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u67e5\u770b\u3002 $ docker network ls NETWORK ID NAME DRIVER SCOPE a74c312b1d16 bridge bridge local dbfa82505f0e host host local ed55ccf356ae nebula-docker-compose_nebula-net bridge local 93ba48b4b288 none null local 1. \u901a\u8fc7Nebula Console\u8fde\u63a5Nebula Graph\u3002 docker> nebula-console -u user -p password --address = graphd --port = 9669 \u8bf4\u660e \uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8eab\u4efd\u8ba4\u8bc1\u529f\u80fd\u662f\u5173\u95ed\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u7528\u6237\u540d\u548c\u5bc6\u7801\u767b\u5f55\u3002\u5982\u679c\u60f3\u4f7f\u7528\u8eab\u4efd\u8ba4\u8bc1\uff0c\u8bf7\u53c2\u89c1 \u8eab\u4efd\u8ba4\u8bc1 \u3002 1. \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5 nebula-storaged \u8fdb\u7a0b\u72b6\u6001\u3002 nebula> SHOW HOSTS ; +-------------+------+----------+--------------+----------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-------------+------+----------+--------------+----------------------+------------------------+ | \"storaged0\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+------+----------+--------------+----------------------+------------------------+ | \"storaged1\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+------+----------+--------------+----------------------+------------------------+ | \"storaged2\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+------+----------+--------------+----------------------+------------------------+ | \"Total\" | | | 0 | | | +-------------+------+----------+--------------+----------------------+------------------------+ \u6267\u884c\u4e24\u6b21 exit \u53ef\u4ee5\u9000\u51fa\u5bb9\u5668\u3002 \u67e5\u770bNebula Graph\u670d\u52a1\u7684\u72b6\u6001\u548c\u7aef\u53e3 \u00b6 \u6267\u884c\u547d\u4ee4 docker-compose ps \u53ef\u4ee5\u5217\u51faNebula Graph\u670d\u52a1\u7684\u72b6\u6001\u548c\u7aef\u53e3\u3002 $ docker-compose ps Name Command State Ports ------------------------------------------------------------------------------------------------------------------------------------------------------------------- nebula-docker-compose_graphd1_1 ./bin/nebula-graphd --flag ... Up ( health: starting ) 13000 /tcp, 13002 /tcp, 0 .0.0.0:33295->19669/tcp, 0 .0.0.0:33291->19670/tcp, 3699 /tcp, 0 .0.0.0:33298->9669/tcp nebula-docker-compose_graphd2_1 ./bin/nebula-graphd --flag ... Up ( health: starting ) 13000 /tcp, 13002 /tcp, 0 .0.0.0:33285->19669/tcp, 0 .0.0.0:33284->19670/tcp, 3699 /tcp, 0 .0.0.0:33286->9669/tcp nebula-docker-compose_graphd_1 ./bin/nebula-graphd --flag ... Up ( health: starting ) 13000 /tcp, 13002 /tcp, 0 .0.0.0:33288->19669/tcp, 0 .0.0.0:33287->19670/tcp, 3699 /tcp, 0 .0.0.0:9669->9669/tcp nebula-docker-compose_metad0_1 ./bin/nebula-metad --flagf ... Up ( health: starting ) 11000 /tcp, 11002 /tcp, 0 .0.0.0:33276->19559/tcp, 0 .0.0.0:33275->19560/tcp, 45500 /tcp, 45501 /tcp, 0 .0.0.0:33278->9559/tcp nebula-docker-compose_metad1_1 ./bin/nebula-metad --flagf ... Up ( health: starting ) 11000 /tcp, 11002 /tcp, 0 .0.0.0:33279->19559/tcp, 0 .0.0.0:33277->19560/tcp, 45500 /tcp, 45501 /tcp, 0 .0.0.0:33281->9559/tcp nebula-docker-compose_metad2_1 ./bin/nebula-metad --flagf ... Up ( health: starting ) 11000 /tcp, 11002 /tcp, 0 .0.0.0:33282->19559/tcp, 0 .0.0.0:33280->19560/tcp, 45500 /tcp, 45501 /tcp, 0 .0.0.0:33283->9559/tcp nebula-docker-compose_storaged0_1 ./bin/nebula-storaged --fl ... Up ( health: starting ) 12000 /tcp, 12002 /tcp, 0 .0.0.0:33290->19779/tcp, 0 .0.0.0:33289->19780/tcp, 44500 /tcp, 44501 /tcp, 0 .0.0.0:33294->9779/tcp nebula-docker-compose_storaged1_1 ./bin/nebula-storaged --fl ... Up ( health: starting ) 12000 /tcp, 12002 /tcp, 0 .0.0.0:33296->19779/tcp, 0 .0.0.0:33292->19780/tcp, 44500 /tcp, 44501 /tcp, 0 .0.0.0:33299->9779/tcp nebula-docker-compose_storaged2_1 ./bin/nebula-storaged --fl ... Up ( health: starting ) 12000 /tcp, 12002 /tcp, 0 .0.0.0:33297->19779/tcp, 0 .0.0.0:33293->19780/tcp, 44500 /tcp, 44501 /tcp, 0 .0.0.0:33300->9779/tcp Nebula Graph\u9ed8\u8ba4\u4f7f\u7528 9669 \u7aef\u53e3\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u7aef\u53e3\uff0c\u8bf7\u4fee\u6539\u76ee\u5f55 nebula-docker-compose \u5185\u7684\u6587\u4ef6 docker-compose.yaml \uff0c\u7136\u540e\u91cd\u542fNebula Graph\u670d\u52a1\u3002 \u67e5\u770bNebula Graph\u670d\u52a1\u7684\u6570\u636e\u548c\u65e5\u5fd7 \u00b6 Nebula Graph\u7684\u6240\u6709\u6570\u636e\u548c\u65e5\u5fd7\u90fd\u6301\u4e45\u5316\u5b58\u50a8\u5728 nebula-docker-compose/data \u548c nebula-docker-compose/logs \u76ee\u5f55\u4e2d\u3002 \u76ee\u5f55\u7684\u7ed3\u6784\u5982\u4e0b\uff1a nebula-docker-compose/ |-- docker-compose.yaml \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 meta0 \u2502 \u251c\u2500\u2500 meta1 \u2502 \u251c\u2500\u2500 meta2 \u2502 \u251c\u2500\u2500 storage0 \u2502 \u251c\u2500\u2500 storage1 \u2502 \u2514\u2500\u2500 storage2 \u2514\u2500\u2500 logs \u251c\u2500\u2500 graph \u251c\u2500\u2500 graph1 \u251c\u2500\u2500 graph2 \u251c\u2500\u2500 meta0 \u251c\u2500\u2500 meta1 \u251c\u2500\u2500 meta2 \u251c\u2500\u2500 storage0 \u251c\u2500\u2500 storage1 \u2514\u2500\u2500 storage2 \u505c\u6b62Nebula Graph\u670d\u52a1 \u00b6 \u60a8\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u505c\u6b62Nebula Graph\u670d\u52a1\uff1a $ docker-compose down \u5982\u679c\u8fd4\u56de\u5982\u4e0b\u4fe1\u606f\uff0c\u8868\u793a\u5df2\u7ecf\u6210\u529f\u505c\u6b62\u670d\u52a1\u3002 Stopping nebula-docker-compose_storaged0_1 ... done Stopping nebula-docker-compose_graphd1_1 ... done Stopping nebula-docker-compose_graphd_1 ... done Stopping nebula-docker-compose_storaged1_1 ... done Stopping nebula-docker-compose_graphd2_1 ... done Stopping nebula-docker-compose_storaged2_1 ... done Stopping nebula-docker-compose_metad0_1 ... done Stopping nebula-docker-compose_metad2_1 ... done Stopping nebula-docker-compose_metad1_1 ... done Removing nebula-docker-compose_storaged0_1 ... done Removing nebula-docker-compose_graphd1_1 ... done Removing nebula-docker-compose_graphd_1 ... done Removing nebula-docker-compose_storaged1_1 ... done Removing nebula-docker-compose_graphd2_1 ... done Removing nebula-docker-compose_storaged2_1 ... done Removing nebula-docker-compose_metad0_1 ... done Removing nebula-docker-compose_metad2_1 ... done Removing nebula-docker-compose_metad1_1 ... done Removing network nebula-docker-compose_nebula-net \u8bf4\u660e \uff1a\u547d\u4ee4 docker-compose down -v \u5c06\u4f1a \u5220\u9664 \u6240\u6709\u672c\u5730Nebula Graph\u7684\u6570\u636e\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fdeveloping\u6216nightly\u7248\u672c\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u8fd9\u4e2a\u547d\u4ee4\u3002 \u5e38\u89c1\u95ee\u9898 \u00b6 \u5982\u4f55\u66f4\u65b0Nebula Graph\u670d\u52a1\u7684Docker\u955c\u50cf\uff1f \u00b6 \u5728\u76ee\u5f55 nebula-docker-compose \u5185\u6267\u884c\u547d\u4ee4 docker-compose pull \uff0c\u53ef\u4ee5\u66f4\u65b0Graph\u670d\u52a1\u3001Storage\u670d\u52a1\u548cMeta\u670d\u52a1\u7684\u955c\u50cf\u3002 \u6267\u884c\u547d\u4ee4 docker-compose pull \u62a5\u9519 ERROR: toomanyrequests \u00b6 \u60a8\u53ef\u80fd\u9047\u5230\u5982\u4e0b\u9519\u8bef\uff1a ERROR: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit \u4ee5\u4e0a\u9519\u8bef\u8868\u793a\u60a8\u5df2\u8fbe\u5230Docker Hub\u7684\u901f\u7387\u9650\u5236\u3002\u89e3\u51b3\u65b9\u6848\u8bf7\u53c2\u89c1 Understanding Docker Hub Rate Limiting \u3002 \u5982\u4f55\u66f4\u65b0Nebula Console\uff1f \u00b6 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u66f4\u65b0Nebula Console\u5ba2\u6237\u7aef\u955c\u50cf\u3002 docker pull vesoft/nebula-console:v2-nightly \u5982\u4f55\u5347\u7ea7Nebula Graph\uff1f \u00b6 \u66f4\u65b0Nebula Graph\u7684Docker\u955c\u50cf\u5e76\u91cd\u542f\u670d\u52a1\uff1a \u5728\u76ee\u5f55 nebula-docker-compose \u5185\uff0c\u6267\u884c\u547d\u4ee4 docker-compose pull \u66f4\u65b0Nebula Graph\u7684Docker\u955c\u50cf\u3002 \u6267\u884c\u547d\u4ee4 docker-compose down \u505c\u6b62Nebula Graph\u670d\u52a1\u3002 \u6267\u884c\u547d\u4ee4 docker-compose up -d \u542f\u52a8Nebula Graph\u670d\u52a1\u3002 \u4e3a\u4ec0\u4e48\u66f4\u65b0nebula-docker-compose\u4ed3\u5e93\uff08Nebula Graph 2.0.0-RC\uff09\u540e\uff0c\u65e0\u6cd5\u901a\u8fc7\u7aef\u53e3 3699 \u8fde\u63a5Nebula Graph\uff1f \u00b6 \u5728Nebula Graph 2.0.0-RC\u7248\u672c\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4ece 3699 \u6539\u4e3a 9669 \u3002\u8bf7\u4f7f\u7528 9669 \u7aef\u53e3\u8fde\u63a5\uff0c\u6216\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 docker-compose.yaml \u5185\u7684\u7aef\u53e3\u3002 \u4e3a\u4ec0\u4e48\u66f4\u65b0nebula-docker-compose\u4ed3\u5e93\u540e\uff0c\u65e0\u6cd5\u8bbf\u95ee\u6570\u636e\uff1f\uff082021\u5e7401\u670804\u65e5\uff09 \u00b6 \u5982\u679c\u60a8\u57282021\u5e7401\u670804\u65e5\u540e\u66f4\u65b0\u8fc7nebula-docker-compose\u4ed3\u5e93\uff0c\u800c\u4e14\u4e4b\u524d\u5df2\u7ecf\u6709\u6570\u636e\uff0c\u8bf7\u4fee\u6539\u6587\u4ef6 docker-compose.yaml \uff0c\u5c06\u7aef\u53e3\u4fee\u6539\u4e3a\u4e4b\u524d\u4f7f\u7528\u7684\u7aef\u53e3\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u4fee\u6539\u9ed8\u8ba4\u7aef\u53e3 \u3002 \u4e3a\u4ec0\u4e48\u66f4\u65b0nebula-docker-compose\u4ed3\u5e93\u540e\uff0c\u65e0\u6cd5\u8bbf\u95ee\u6570\u636e\uff1f\uff082021\u5e7401\u670827\u65e5\uff09 \u00b6 2021\u5e7401\u670827\u65e5\u4fee\u6539\u4e86\u6570\u636e\u683c\u5f0f\uff0c\u65e0\u6cd5\u517c\u5bb9\u4e4b\u524d\u7684\u6570\u636e\uff0c\u8bf7\u6267\u884c\u547d\u4ee4 docker-compose down -v \u5220\u9664\u6240\u6709\u672c\u5730\u6570\u636e\u3002 \u76f8\u5173\u6587\u6863 \u00b6 \u4f7f\u7528\u6e90\u7801\u5b89\u88c5\u90e8\u7f72Nebula Graph \u4f7f\u7528\u5bb9\u5668\u5b89\u88c5\u90e8\u7f72\uff08TODO: doc\uff09 \u4f7f\u7528RPM\u6216DEB\u5b89\u88c5\u5305\u5b89\u88c5Nebula Graph \u591a\u79cd\u65b9\u5f0f\u8fde\u63a5Nebula Graph","title":"Deploy Nebula\u00a0Graph with Docker Compose"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#docker_composenebula_graph","text":"\u6709\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u90e8\u7f72Nebula Graph\uff0c\u4f46\u662f\u4f7f\u7528Docker Compose\u901a\u5e38\u662f\u6700\u5feb\u7684\u65b9\u5f0f\u3002","title":"Docker Compose\u90e8\u7f72Nebula Graph"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#_1","text":"\u5982\u679c\u60a8\u662f\u5e26\u7740\u5982\u4e0b\u95ee\u9898\u9605\u8bfb\u672c\u6587\uff0c\u53ef\u4ee5\u76f4\u63a5\u5355\u51fb\u95ee\u9898\u8df3\u8f6c\u67e5\u770b\u5bf9\u5e94\u7684\u8bf4\u660e\u3002 \u90e8\u7f72Nebula Graph\u4e4b\u524d\u9700\u8981\u505a\u4ec0\u4e48\u51c6\u5907\u5de5\u4f5c\uff1f \u5982\u4f55\u901a\u8fc7Docker Compose\u5feb\u901f\u90e8\u7f72Nebula Graph\uff1f \u5982\u4f55\u68c0\u67e5Nebula Graph\u670d\u52a1\u7684\u72b6\u6001\u548c\u7aef\u53e3\uff1f \u5982\u4f55\u68c0\u67e5Nebula Graph\u670d\u52a1\u7684\u6570\u636e\u548c\u65e5\u5fd7\uff1f \u5982\u4f55\u505c\u6b62Nebula Graph\u670d\u52a1\uff1f \u5982\u4f55\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u90e8\u7f72Nebula Graph\uff1f","title":"\u9605\u8bfb\u6307\u5357"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#_2","text":"\u4e3b\u673a\u4e0a\u5b89\u88c5\u5982\u4e0b\u5e94\u7528\u7a0b\u5e8f\u3002 \u5e94\u7528\u7a0b\u5e8f \u63a8\u8350\u7248\u672c \u5b98\u65b9\u5b89\u88c5\u53c2\u8003 Docker \u6700\u65b0\u7248\u672c Install Docker Engine Docker Compose \u6700\u65b0\u7248\u672c Install Docker Compose Git \u6700\u65b0\u7248\u672c Download Git \u5982\u679c\u60a8\u4f7f\u7528\u975eroot\u7528\u6237\u90e8\u7f72Nebula Graph\uff0c\u8bf7\u6388\u6743\u8be5\u7528\u6237Docker\u76f8\u5173\u7684\u6743\u9650\u3002\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 Manage Docker as a non-root user \u3002 \u542f\u52a8\u4e3b\u673a\u4e0a\u7684Docker\u670d\u52a1\u3002 \u5982\u679c\u60a8\u5df2\u7ecf\u901a\u8fc7Docker Compose\u5728\u4e3b\u673a\u4e0a\u90e8\u7f72\u4e86\u53e6\u4e00\u4e2a\u7248\u672c\u7684Nebula Graph\uff0c\u4e3a\u907f\u514d\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u9700\u8981\u60a8\u5220\u9664\u76ee\u5f55 nebula-docker-compose/data \u3002 \u8bf4\u660e \uff1a\u5982\u679c\u60a8\u9700\u8981\u5907\u4efd\u670d\u52a1\u6570\u636e\uff0c\u8bf7\u53c2\u89c1 \u4f7f\u7528BR\u5907\u4efd\u6570\u636e TODO: \u672a\u548cv2.0.0\u4e00\u8d77\u53d1\u5e03\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula_graph","text":"\u901a\u8fc7Git\u514b\u9686 nebula-docker-compose \u4ed3\u5e93\u7684 master \u5206\u652f\u5230\u60a8\u7684\u4e3b\u673a\u3002 \u7981\u6b62 \uff1a master \u5206\u652f\u5305\u542b\u6700\u65b0\u7684Nebula Graph\u5f00\u53d1\u7248\u672c\u7684Docker Compose\u89e3\u51b3\u65b9\u6848\u3002\u8bf7 \u4e0d\u8981 \u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\u6b64\u7248\u672c\u3002 $ git clone https://github.com/vesoft-inc/nebula-docker-compose.git \u5207\u6362\u81f3\u76ee\u5f55 nebula-docker-compose \u3002 $ cd nebula-docker-compose/ \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u542f\u52a8Nebula Graph\u670d\u52a1\u3002 \u8bf4\u660e : \u5982\u679c\u957f\u671f\u672a\u66f4\u65b0\u955c\u50cf\uff0c\u8bf7\u5148\u66f4\u65b0 Nebula Graph\u955c\u50cf \u548c Nebula Console\u955c\u50cf \u3002 nebula-docker-compose ] $ docker-compose up -d Creating nebula-docker-compose_metad0_1 ... done Creating nebula-docker-compose_metad2_1 ... done Creating nebula-docker-compose_metad1_1 ... done Creating nebula-docker-compose_graphd2_1 ... done Creating nebula-docker-compose_graphd_1 ... done Creating nebula-docker-compose_graphd1_1 ... done Creating nebula-docker-compose_storaged0_1 ... done Creating nebula-docker-compose_storaged2_1 ... done Creating nebula-docker-compose_storaged1_1 ... done \u8bf4\u660e : \u4e0a\u8ff0\u670d\u52a1\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u67b6\u6784\u603b\u89c8 \u3002 \u8fde\u63a5Nebula Graph\u3002 1. \u4f7f\u7528Nebula Console\u955c\u50cf\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u8fde\u63a5\u5230Nebula Graph\u670d\u52a1\u6240\u5728\u7684\u7f51\u7edc\uff08nebula-docker-compose_nebula-net\uff09\u4e2d\u3002 $ docker run --rm -ti --network nebula-docker-compose_nebula-net --entrypoint = /bin/sh vesoft/nebula-console:v2-nightly \u8bf4\u660e \uff1a\u60a8\u7684\u672c\u5730\u7f51\u7edc\u53ef\u80fd\u548c\u793a\u4f8b\u4e2d\u7684 nebula-docker-compose_nebula-net \u4e0d\u540c\uff0c\u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u67e5\u770b\u3002 $ docker network ls NETWORK ID NAME DRIVER SCOPE a74c312b1d16 bridge bridge local dbfa82505f0e host host local ed55ccf356ae nebula-docker-compose_nebula-net bridge local 93ba48b4b288 none null local 1. \u901a\u8fc7Nebula Console\u8fde\u63a5Nebula Graph\u3002 docker> nebula-console -u user -p password --address = graphd --port = 9669 \u8bf4\u660e \uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8eab\u4efd\u8ba4\u8bc1\u529f\u80fd\u662f\u5173\u95ed\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u7528\u6237\u540d\u548c\u5bc6\u7801\u767b\u5f55\u3002\u5982\u679c\u60f3\u4f7f\u7528\u8eab\u4efd\u8ba4\u8bc1\uff0c\u8bf7\u53c2\u89c1 \u8eab\u4efd\u8ba4\u8bc1 \u3002 1. \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5 nebula-storaged \u8fdb\u7a0b\u72b6\u6001\u3002 nebula> SHOW HOSTS ; +-------------+------+----------+--------------+----------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-------------+------+----------+--------------+----------------------+------------------------+ | \"storaged0\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+------+----------+--------------+----------------------+------------------------+ | \"storaged1\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+------+----------+--------------+----------------------+------------------------+ | \"storaged2\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+------+----------+--------------+----------------------+------------------------+ | \"Total\" | | | 0 | | | +-------------+------+----------+--------------+----------------------+------------------------+ \u6267\u884c\u4e24\u6b21 exit \u53ef\u4ee5\u9000\u51fa\u5bb9\u5668\u3002","title":"\u90e8\u7f72\u548c\u8fde\u63a5Nebula Graph"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula_graph_1","text":"\u6267\u884c\u547d\u4ee4 docker-compose ps \u53ef\u4ee5\u5217\u51faNebula Graph\u670d\u52a1\u7684\u72b6\u6001\u548c\u7aef\u53e3\u3002 $ docker-compose ps Name Command State Ports ------------------------------------------------------------------------------------------------------------------------------------------------------------------- nebula-docker-compose_graphd1_1 ./bin/nebula-graphd --flag ... Up ( health: starting ) 13000 /tcp, 13002 /tcp, 0 .0.0.0:33295->19669/tcp, 0 .0.0.0:33291->19670/tcp, 3699 /tcp, 0 .0.0.0:33298->9669/tcp nebula-docker-compose_graphd2_1 ./bin/nebula-graphd --flag ... Up ( health: starting ) 13000 /tcp, 13002 /tcp, 0 .0.0.0:33285->19669/tcp, 0 .0.0.0:33284->19670/tcp, 3699 /tcp, 0 .0.0.0:33286->9669/tcp nebula-docker-compose_graphd_1 ./bin/nebula-graphd --flag ... Up ( health: starting ) 13000 /tcp, 13002 /tcp, 0 .0.0.0:33288->19669/tcp, 0 .0.0.0:33287->19670/tcp, 3699 /tcp, 0 .0.0.0:9669->9669/tcp nebula-docker-compose_metad0_1 ./bin/nebula-metad --flagf ... Up ( health: starting ) 11000 /tcp, 11002 /tcp, 0 .0.0.0:33276->19559/tcp, 0 .0.0.0:33275->19560/tcp, 45500 /tcp, 45501 /tcp, 0 .0.0.0:33278->9559/tcp nebula-docker-compose_metad1_1 ./bin/nebula-metad --flagf ... Up ( health: starting ) 11000 /tcp, 11002 /tcp, 0 .0.0.0:33279->19559/tcp, 0 .0.0.0:33277->19560/tcp, 45500 /tcp, 45501 /tcp, 0 .0.0.0:33281->9559/tcp nebula-docker-compose_metad2_1 ./bin/nebula-metad --flagf ... Up ( health: starting ) 11000 /tcp, 11002 /tcp, 0 .0.0.0:33282->19559/tcp, 0 .0.0.0:33280->19560/tcp, 45500 /tcp, 45501 /tcp, 0 .0.0.0:33283->9559/tcp nebula-docker-compose_storaged0_1 ./bin/nebula-storaged --fl ... Up ( health: starting ) 12000 /tcp, 12002 /tcp, 0 .0.0.0:33290->19779/tcp, 0 .0.0.0:33289->19780/tcp, 44500 /tcp, 44501 /tcp, 0 .0.0.0:33294->9779/tcp nebula-docker-compose_storaged1_1 ./bin/nebula-storaged --fl ... Up ( health: starting ) 12000 /tcp, 12002 /tcp, 0 .0.0.0:33296->19779/tcp, 0 .0.0.0:33292->19780/tcp, 44500 /tcp, 44501 /tcp, 0 .0.0.0:33299->9779/tcp nebula-docker-compose_storaged2_1 ./bin/nebula-storaged --fl ... Up ( health: starting ) 12000 /tcp, 12002 /tcp, 0 .0.0.0:33297->19779/tcp, 0 .0.0.0:33293->19780/tcp, 44500 /tcp, 44501 /tcp, 0 .0.0.0:33300->9779/tcp Nebula Graph\u9ed8\u8ba4\u4f7f\u7528 9669 \u7aef\u53e3\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u7aef\u53e3\uff0c\u8bf7\u4fee\u6539\u76ee\u5f55 nebula-docker-compose \u5185\u7684\u6587\u4ef6 docker-compose.yaml \uff0c\u7136\u540e\u91cd\u542fNebula Graph\u670d\u52a1\u3002","title":"\u67e5\u770bNebula Graph\u670d\u52a1\u7684\u72b6\u6001\u548c\u7aef\u53e3"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula_graph_2","text":"Nebula Graph\u7684\u6240\u6709\u6570\u636e\u548c\u65e5\u5fd7\u90fd\u6301\u4e45\u5316\u5b58\u50a8\u5728 nebula-docker-compose/data \u548c nebula-docker-compose/logs \u76ee\u5f55\u4e2d\u3002 \u76ee\u5f55\u7684\u7ed3\u6784\u5982\u4e0b\uff1a nebula-docker-compose/ |-- docker-compose.yaml \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 meta0 \u2502 \u251c\u2500\u2500 meta1 \u2502 \u251c\u2500\u2500 meta2 \u2502 \u251c\u2500\u2500 storage0 \u2502 \u251c\u2500\u2500 storage1 \u2502 \u2514\u2500\u2500 storage2 \u2514\u2500\u2500 logs \u251c\u2500\u2500 graph \u251c\u2500\u2500 graph1 \u251c\u2500\u2500 graph2 \u251c\u2500\u2500 meta0 \u251c\u2500\u2500 meta1 \u251c\u2500\u2500 meta2 \u251c\u2500\u2500 storage0 \u251c\u2500\u2500 storage1 \u2514\u2500\u2500 storage2","title":"\u67e5\u770bNebula Graph\u670d\u52a1\u7684\u6570\u636e\u548c\u65e5\u5fd7"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula_graph_3","text":"\u60a8\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u505c\u6b62Nebula Graph\u670d\u52a1\uff1a $ docker-compose down \u5982\u679c\u8fd4\u56de\u5982\u4e0b\u4fe1\u606f\uff0c\u8868\u793a\u5df2\u7ecf\u6210\u529f\u505c\u6b62\u670d\u52a1\u3002 Stopping nebula-docker-compose_storaged0_1 ... done Stopping nebula-docker-compose_graphd1_1 ... done Stopping nebula-docker-compose_graphd_1 ... done Stopping nebula-docker-compose_storaged1_1 ... done Stopping nebula-docker-compose_graphd2_1 ... done Stopping nebula-docker-compose_storaged2_1 ... done Stopping nebula-docker-compose_metad0_1 ... done Stopping nebula-docker-compose_metad2_1 ... done Stopping nebula-docker-compose_metad1_1 ... done Removing nebula-docker-compose_storaged0_1 ... done Removing nebula-docker-compose_graphd1_1 ... done Removing nebula-docker-compose_graphd_1 ... done Removing nebula-docker-compose_storaged1_1 ... done Removing nebula-docker-compose_graphd2_1 ... done Removing nebula-docker-compose_storaged2_1 ... done Removing nebula-docker-compose_metad0_1 ... done Removing nebula-docker-compose_metad2_1 ... done Removing nebula-docker-compose_metad1_1 ... done Removing network nebula-docker-compose_nebula-net \u8bf4\u660e \uff1a\u547d\u4ee4 docker-compose down -v \u5c06\u4f1a \u5220\u9664 \u6240\u6709\u672c\u5730Nebula Graph\u7684\u6570\u636e\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fdeveloping\u6216nightly\u7248\u672c\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u8fd9\u4e2a\u547d\u4ee4\u3002","title":"\u505c\u6b62Nebula Graph\u670d\u52a1"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#_3","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula_graphdocker","text":"\u5728\u76ee\u5f55 nebula-docker-compose \u5185\u6267\u884c\u547d\u4ee4 docker-compose pull \uff0c\u53ef\u4ee5\u66f4\u65b0Graph\u670d\u52a1\u3001Storage\u670d\u52a1\u548cMeta\u670d\u52a1\u7684\u955c\u50cf\u3002","title":"\u5982\u4f55\u66f4\u65b0Nebula Graph\u670d\u52a1\u7684Docker\u955c\u50cf\uff1f"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#docker-compose_pullerror_toomanyrequests","text":"\u60a8\u53ef\u80fd\u9047\u5230\u5982\u4e0b\u9519\u8bef\uff1a ERROR: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit \u4ee5\u4e0a\u9519\u8bef\u8868\u793a\u60a8\u5df2\u8fbe\u5230Docker Hub\u7684\u901f\u7387\u9650\u5236\u3002\u89e3\u51b3\u65b9\u6848\u8bf7\u53c2\u89c1 Understanding Docker Hub Rate Limiting \u3002","title":"\u6267\u884c\u547d\u4ee4docker-compose pull\u62a5\u9519ERROR: toomanyrequests"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula_console","text":"\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u66f4\u65b0Nebula Console\u5ba2\u6237\u7aef\u955c\u50cf\u3002 docker pull vesoft/nebula-console:v2-nightly","title":"\u5982\u4f55\u66f4\u65b0Nebula Console\uff1f"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula_graph_4","text":"\u66f4\u65b0Nebula Graph\u7684Docker\u955c\u50cf\u5e76\u91cd\u542f\u670d\u52a1\uff1a \u5728\u76ee\u5f55 nebula-docker-compose \u5185\uff0c\u6267\u884c\u547d\u4ee4 docker-compose pull \u66f4\u65b0Nebula Graph\u7684Docker\u955c\u50cf\u3002 \u6267\u884c\u547d\u4ee4 docker-compose down \u505c\u6b62Nebula Graph\u670d\u52a1\u3002 \u6267\u884c\u547d\u4ee4 docker-compose up -d \u542f\u52a8Nebula Graph\u670d\u52a1\u3002","title":"\u5982\u4f55\u5347\u7ea7Nebula Graph\uff1f"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula-docker-composenebula_graph_200-rc3699nebula_graph","text":"\u5728Nebula Graph 2.0.0-RC\u7248\u672c\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4ece 3699 \u6539\u4e3a 9669 \u3002\u8bf7\u4f7f\u7528 9669 \u7aef\u53e3\u8fde\u63a5\uff0c\u6216\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 docker-compose.yaml \u5185\u7684\u7aef\u53e3\u3002","title":"\u4e3a\u4ec0\u4e48\u66f4\u65b0nebula-docker-compose\u4ed3\u5e93\uff08Nebula Graph 2.0.0-RC\uff09\u540e\uff0c\u65e0\u6cd5\u901a\u8fc7\u7aef\u53e33699\u8fde\u63a5Nebula Graph\uff1f"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula-docker-compose20210104","text":"\u5982\u679c\u60a8\u57282021\u5e7401\u670804\u65e5\u540e\u66f4\u65b0\u8fc7nebula-docker-compose\u4ed3\u5e93\uff0c\u800c\u4e14\u4e4b\u524d\u5df2\u7ecf\u6709\u6570\u636e\uff0c\u8bf7\u4fee\u6539\u6587\u4ef6 docker-compose.yaml \uff0c\u5c06\u7aef\u53e3\u4fee\u6539\u4e3a\u4e4b\u524d\u4f7f\u7528\u7684\u7aef\u53e3\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u4fee\u6539\u9ed8\u8ba4\u7aef\u53e3 \u3002","title":"\u4e3a\u4ec0\u4e48\u66f4\u65b0nebula-docker-compose\u4ed3\u5e93\u540e\uff0c\u65e0\u6cd5\u8bbf\u95ee\u6570\u636e\uff1f\uff082021\u5e7401\u670804\u65e5\uff09"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#nebula-docker-compose20210127","text":"2021\u5e7401\u670827\u65e5\u4fee\u6539\u4e86\u6570\u636e\u683c\u5f0f\uff0c\u65e0\u6cd5\u517c\u5bb9\u4e4b\u524d\u7684\u6570\u636e\uff0c\u8bf7\u6267\u884c\u547d\u4ee4 docker-compose down -v \u5220\u9664\u6240\u6709\u672c\u5730\u6570\u636e\u3002","title":"\u4e3a\u4ec0\u4e48\u66f4\u65b0nebula-docker-compose\u4ed3\u5e93\u540e\uff0c\u65e0\u6cd5\u8bbf\u95ee\u6570\u636e\uff1f\uff082021\u5e7401\u670827\u65e5\uff09"},{"location":"2.quick-start/2.deploy-nebula-graph-with-docker-compose/#_4","text":"\u4f7f\u7528\u6e90\u7801\u5b89\u88c5\u90e8\u7f72Nebula Graph \u4f7f\u7528\u5bb9\u5668\u5b89\u88c5\u90e8\u7f72\uff08TODO: doc\uff09 \u4f7f\u7528RPM\u6216DEB\u5b89\u88c5\u5305\u5b89\u88c5Nebula Graph \u591a\u79cd\u65b9\u5f0f\u8fde\u63a5Nebula Graph","title":"\u76f8\u5173\u6587\u6863"},{"location":"2.quick-start/3.connect-to-nebula-graph/","text":"\u8fde\u63a5Nebula Graph \u00b6 Nebula Graph\u652f\u6301\u591a\u79cd\u7c7b\u578b\u5ba2\u6237\u7aef\uff0c\u5305\u62ecCLI\u5ba2\u6237\u7aef\u3001GUI\u5ba2\u6237\u7aef\u548c\u6d41\u884c\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u7684\u5ba2\u6237\u7aef\u3002\u672c\u6587\u5c06\u6982\u8ff0Nebula Graph\u5ba2\u6237\u7aef\uff0c\u5e76\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u539f\u751fCLI\u5ba2\u6237\u7aefNe'bu'la\u3002 Nebula Graph\u5ba2\u6237\u7aef \u00b6 \u60a8\u53ef\u4ee5\u4f7f\u7528\u5df2\u652f\u6301\u7684 \u5ba2\u6237\u7aef\u6216\u8005\u547d\u4ee4\u884c\u5de5\u5177 \u6765\u8fde\u63a5Nebula Graph\u6570\u636e\u5e93. \u4f7f\u7528Nebula Console\u8fde\u63a5Nebula Graph \u00b6 \u524d\u63d0\u6761\u4ef6 \u00b6 Nebula Graph\u670d\u52a1\u5df2\u542f\u52a8\u3002\u5982\u4f55\u542f\u52a8\u670d\u52a1\uff0c\u8bf7\u53c2\u89c1 \u542f\u52a8\u548c\u505c\u6b62Nebula Graph\u670d\u52a1 \u3002 \u8fd0\u884cNebula Console\u7684\u673a\u5668\u548c\u8fd0\u884cNebula Graph\u7684\u670d\u52a1\u5668\u7f51\u7edc\u4e92\u901a\u3002 \u64cd\u4f5c\u6b65\u9aa4 \u00b6 \u5728 nebula-console \u9875\u9762\uff0c\u786e\u8ba4\u9700\u8981\u7684\u7248\u672c\uff0c\u5355\u51fb Assets \u3002 \u8bf4\u660e \uff1a\u5efa\u8bae\u60a8\u9009\u62e9 \u6700\u65b0 \u7248\u672c\u3002 \u5728 Assets \u533a\u57df\u627e\u5230\u673a\u5668\u8fd0\u884c\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e0b\u8f7d\u6587\u4ef6\u5230\u673a\u5668\u4e0a\u3002 \uff08\u53ef\u9009\uff09\u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0c\u91cd\u547d\u540d\u6587\u4ef6\u4e3a nebula-console \u3002 \u8bf4\u660e \uff1a\u5728Windows\u7cfb\u7edf\u4e2d\uff0c\u8bf7\u91cd\u547d\u540d\u4e3a nebula-console.exe \u3002 \u5728\u8fd0\u884cNebula Console\u7684\u673a\u5668\u4e0a\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4e3a\u7528\u6237\u6388\u4e88nebula-console\u6587\u4ef6\u7684\u6267\u884c\u6743\u9650\u3002 \u8bf4\u660e \uff1aWindows\u7cfb\u7edf\u8bf7\u8df3\u8fc7\u6b64\u6b65\u9aa4\u3002 $ chmod 111 nebula-console \u5728\u547d\u4ee4\u884c\u754c\u9762\u4e2d\uff0c\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u81f3nebula-console\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u3002 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fde\u63a5Nebula Graph\u3002 - Linux\u6216macOS $ ./nebula-console -addr <ip> -port <port> -u <username> -p <password> [ -t 120 ] [ -e \"nGQL_statement\" | -f filename.nGQL ] - Windows > nebula-console . exe -addr < ip > -port < port > -u < username > -p < password > [ -t 120 ] [ -e \"nGQL_statement\" | -f filename . nGQL ] \u53c2\u6570\u8bf4\u660e\u5982\u4e0b\u3002 \u53c2\u6570 \u8bf4\u660e -h \u663e\u793a\u5e2e\u52a9\u83dc\u5355\u3002 -addr \u8bbe\u7f6e\u8981\u8fde\u63a5\u7684graphd\u670d\u52a1\u7684IP\u5730\u5740\u3002\u9ed8\u8ba4\u5730\u5740\u4e3a127.0.0.1\u3002 -port \u8bbe\u7f6e\u8981\u8fde\u63a5\u7684graphd\u670d\u52a1\u7684\u7aef\u53e3\u3002\u9ed8\u8ba4\u7aef\u53e3\u4e3a9669\u3002 -u/-user \u8bbe\u7f6eNebula Graph\u8d26\u53f7\u7684\u7528\u6237\u540d\u3002\u672a\u542f\u7528\u8eab\u4efd\u8ba4\u8bc1\u65f6\uff0c\u7528\u6237\u540d\u53ef\u4ee5\u586b\u5199\u4efb\u610f\u5b57\u7b26\u3002 -p/-password \u8bbe\u7f6e\u7528\u6237\u540d\u5bf9\u5e94\u7684\u5bc6\u7801\u3002\u672a\u542f\u7528\u8eab\u4efd\u8ba4\u8bc1\u65f6\uff0c\u5bc6\u7801\u53ef\u4ee5\u586b\u5199\u4efb\u610f\u5b57\u7b26\u3002 -t/-timeout \u8bbe\u7f6e\u6574\u6570\u7c7b\u578b\u7684\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\u3002\u5355\u4f4d\u4e3a\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a120\u3002 -e/-eval \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7c7b\u578b\u7684nGQL\u8bed\u53e5\u3002\u8fde\u63a5\u6210\u529f\u540e\u4f1a\u6267\u884c\u4e00\u6b21\u8be5\u8bed\u53e5\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u7136\u540e\u81ea\u52a8\u65ad\u5f00\u8fde\u63a5\u3002 -f/-file \u8bbe\u7f6e\u5b58\u50a8nGQL\u8bed\u53e5\u7684\u6587\u4ef6\u7684\u8def\u5f84\u3002\u8fde\u63a5\u6210\u529f\u540e\u4f1a\u6267\u884c\u8be5\u6587\u4ef6\u5185\u7684nGQL\u8bed\u53e5\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u6267\u884c\u5b8c\u6bd5\u540e\u81ea\u52a8\u65ad\u5f00\u8fde\u63a5\u3002 \u60a8\u53ef\u4ee5\u5728 \u9879\u76ee\u4ed3\u5e93 \u627e\u5230\u66f4\u591a\u7ec6\u8282. Nebula Console\u5bfc\u51fa\u6a21\u5f0f \u00b6 \u5bfc\u51fa\u6a21\u5f0f\u5f00\u542f\u65f6\uff0cNebula Console\u4f1a\u5bfc\u51fa\u6240\u6709\u8bf7\u6c42\u7684\u7ed3\u679c\u5230CSV\u683c\u5f0f\u6587\u4ef6\u4e2d\u3002\u5173\u95ed\u5bfc\u51fa\u6a21\u5f0f\u4f1a\u505c\u6b62\u5bfc\u51fa\u3002\u4f7f\u7528\u8bed\u6cd5\u5982\u4e0b\uff1a \u8bf4\u660e \uff1a \u547d\u4ee4\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 CSV\u683c\u5f0f\u6587\u4ef6\u4fdd\u5b58\u5728\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\uff0c\u5373Linux\u547d\u4ee4 pwd \u663e\u793a\u7684\u76ee\u5f55\u3002 \u5f00\u542f\u5bfc\u51fa\u6a21\u5f0f nebula> :SET CSV <your_file.csv> \u5173\u95ed\u5bfc\u51fa\u6a21\u5f0f nebula> :UNSET CSV \u4f7f\u7528Nebula Console\u65ad\u5f00\u8fde\u63a5 \u00b6 \u60a8\u53ef\u4ee5\u4f7f\u7528 :EXIT \u6216\u8005 :QUIT \u4eceNebula Graph\u65ad\u5f00\u8fde\u63a5\u3002\u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0cNebula Console\u652f\u6301\u4f7f\u7528\u4e0d\u5e26\u5192\u53f7\uff08:\uff09\u7684\u5c0f\u5199\u547d\u4ee4\uff0c\u4f8b\u5982 quit \u3002 nebula> :QUIT Bye root! \u5e38\u89c1\u95ee\u9898 \u00b6 \u5982\u4f55\u901a\u8fc7\u6e90\u7801\u5b89\u88c5Nebula Console\uff1f \u00b6 \u4e0b\u8f7d\u548c\u7f16\u8bd1Nebula Console\u7684\u6700\u65b0\u6e90\u7801\uff0c\u8bf7\u53c2\u89c1 GitHub nebula console \u9875\u9762\u7684\u8bf4\u660e\u3002","title":"Connect to Nebula\u00a0Graph"},{"location":"2.quick-start/3.connect-to-nebula-graph/#nebula_graph","text":"Nebula Graph\u652f\u6301\u591a\u79cd\u7c7b\u578b\u5ba2\u6237\u7aef\uff0c\u5305\u62ecCLI\u5ba2\u6237\u7aef\u3001GUI\u5ba2\u6237\u7aef\u548c\u6d41\u884c\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u7684\u5ba2\u6237\u7aef\u3002\u672c\u6587\u5c06\u6982\u8ff0Nebula Graph\u5ba2\u6237\u7aef\uff0c\u5e76\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u539f\u751fCLI\u5ba2\u6237\u7aefNe'bu'la\u3002","title":"\u8fde\u63a5Nebula Graph"},{"location":"2.quick-start/3.connect-to-nebula-graph/#nebula_graph_1","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528\u5df2\u652f\u6301\u7684 \u5ba2\u6237\u7aef\u6216\u8005\u547d\u4ee4\u884c\u5de5\u5177 \u6765\u8fde\u63a5Nebula Graph\u6570\u636e\u5e93.","title":"Nebula Graph\u5ba2\u6237\u7aef"},{"location":"2.quick-start/3.connect-to-nebula-graph/#nebula_consolenebula_graph","text":"","title":"\u4f7f\u7528Nebula Console\u8fde\u63a5Nebula Graph"},{"location":"2.quick-start/3.connect-to-nebula-graph/#_1","text":"Nebula Graph\u670d\u52a1\u5df2\u542f\u52a8\u3002\u5982\u4f55\u542f\u52a8\u670d\u52a1\uff0c\u8bf7\u53c2\u89c1 \u542f\u52a8\u548c\u505c\u6b62Nebula Graph\u670d\u52a1 \u3002 \u8fd0\u884cNebula Console\u7684\u673a\u5668\u548c\u8fd0\u884cNebula Graph\u7684\u670d\u52a1\u5668\u7f51\u7edc\u4e92\u901a\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"2.quick-start/3.connect-to-nebula-graph/#_2","text":"\u5728 nebula-console \u9875\u9762\uff0c\u786e\u8ba4\u9700\u8981\u7684\u7248\u672c\uff0c\u5355\u51fb Assets \u3002 \u8bf4\u660e \uff1a\u5efa\u8bae\u60a8\u9009\u62e9 \u6700\u65b0 \u7248\u672c\u3002 \u5728 Assets \u533a\u57df\u627e\u5230\u673a\u5668\u8fd0\u884c\u6240\u9700\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4e0b\u8f7d\u6587\u4ef6\u5230\u673a\u5668\u4e0a\u3002 \uff08\u53ef\u9009\uff09\u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0c\u91cd\u547d\u540d\u6587\u4ef6\u4e3a nebula-console \u3002 \u8bf4\u660e \uff1a\u5728Windows\u7cfb\u7edf\u4e2d\uff0c\u8bf7\u91cd\u547d\u540d\u4e3a nebula-console.exe \u3002 \u5728\u8fd0\u884cNebula Console\u7684\u673a\u5668\u4e0a\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u4e3a\u7528\u6237\u6388\u4e88nebula-console\u6587\u4ef6\u7684\u6267\u884c\u6743\u9650\u3002 \u8bf4\u660e \uff1aWindows\u7cfb\u7edf\u8bf7\u8df3\u8fc7\u6b64\u6b65\u9aa4\u3002 $ chmod 111 nebula-console \u5728\u547d\u4ee4\u884c\u754c\u9762\u4e2d\uff0c\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u81f3nebula-console\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u3002 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fde\u63a5Nebula Graph\u3002 - Linux\u6216macOS $ ./nebula-console -addr <ip> -port <port> -u <username> -p <password> [ -t 120 ] [ -e \"nGQL_statement\" | -f filename.nGQL ] - Windows > nebula-console . exe -addr < ip > -port < port > -u < username > -p < password > [ -t 120 ] [ -e \"nGQL_statement\" | -f filename . nGQL ] \u53c2\u6570\u8bf4\u660e\u5982\u4e0b\u3002 \u53c2\u6570 \u8bf4\u660e -h \u663e\u793a\u5e2e\u52a9\u83dc\u5355\u3002 -addr \u8bbe\u7f6e\u8981\u8fde\u63a5\u7684graphd\u670d\u52a1\u7684IP\u5730\u5740\u3002\u9ed8\u8ba4\u5730\u5740\u4e3a127.0.0.1\u3002 -port \u8bbe\u7f6e\u8981\u8fde\u63a5\u7684graphd\u670d\u52a1\u7684\u7aef\u53e3\u3002\u9ed8\u8ba4\u7aef\u53e3\u4e3a9669\u3002 -u/-user \u8bbe\u7f6eNebula Graph\u8d26\u53f7\u7684\u7528\u6237\u540d\u3002\u672a\u542f\u7528\u8eab\u4efd\u8ba4\u8bc1\u65f6\uff0c\u7528\u6237\u540d\u53ef\u4ee5\u586b\u5199\u4efb\u610f\u5b57\u7b26\u3002 -p/-password \u8bbe\u7f6e\u7528\u6237\u540d\u5bf9\u5e94\u7684\u5bc6\u7801\u3002\u672a\u542f\u7528\u8eab\u4efd\u8ba4\u8bc1\u65f6\uff0c\u5bc6\u7801\u53ef\u4ee5\u586b\u5199\u4efb\u610f\u5b57\u7b26\u3002 -t/-timeout \u8bbe\u7f6e\u6574\u6570\u7c7b\u578b\u7684\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\u3002\u5355\u4f4d\u4e3a\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a120\u3002 -e/-eval \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7c7b\u578b\u7684nGQL\u8bed\u53e5\u3002\u8fde\u63a5\u6210\u529f\u540e\u4f1a\u6267\u884c\u4e00\u6b21\u8be5\u8bed\u53e5\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u7136\u540e\u81ea\u52a8\u65ad\u5f00\u8fde\u63a5\u3002 -f/-file \u8bbe\u7f6e\u5b58\u50a8nGQL\u8bed\u53e5\u7684\u6587\u4ef6\u7684\u8def\u5f84\u3002\u8fde\u63a5\u6210\u529f\u540e\u4f1a\u6267\u884c\u8be5\u6587\u4ef6\u5185\u7684nGQL\u8bed\u53e5\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u6267\u884c\u5b8c\u6bd5\u540e\u81ea\u52a8\u65ad\u5f00\u8fde\u63a5\u3002 \u60a8\u53ef\u4ee5\u5728 \u9879\u76ee\u4ed3\u5e93 \u627e\u5230\u66f4\u591a\u7ec6\u8282.","title":"\u64cd\u4f5c\u6b65\u9aa4"},{"location":"2.quick-start/3.connect-to-nebula-graph/#nebula_console","text":"\u5bfc\u51fa\u6a21\u5f0f\u5f00\u542f\u65f6\uff0cNebula Console\u4f1a\u5bfc\u51fa\u6240\u6709\u8bf7\u6c42\u7684\u7ed3\u679c\u5230CSV\u683c\u5f0f\u6587\u4ef6\u4e2d\u3002\u5173\u95ed\u5bfc\u51fa\u6a21\u5f0f\u4f1a\u505c\u6b62\u5bfc\u51fa\u3002\u4f7f\u7528\u8bed\u6cd5\u5982\u4e0b\uff1a \u8bf4\u660e \uff1a \u547d\u4ee4\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 CSV\u683c\u5f0f\u6587\u4ef6\u4fdd\u5b58\u5728\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\uff0c\u5373Linux\u547d\u4ee4 pwd \u663e\u793a\u7684\u76ee\u5f55\u3002 \u5f00\u542f\u5bfc\u51fa\u6a21\u5f0f nebula> :SET CSV <your_file.csv> \u5173\u95ed\u5bfc\u51fa\u6a21\u5f0f nebula> :UNSET CSV","title":"Nebula Console\u5bfc\u51fa\u6a21\u5f0f"},{"location":"2.quick-start/3.connect-to-nebula-graph/#nebula_console_1","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528 :EXIT \u6216\u8005 :QUIT \u4eceNebula Graph\u65ad\u5f00\u8fde\u63a5\u3002\u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0cNebula Console\u652f\u6301\u4f7f\u7528\u4e0d\u5e26\u5192\u53f7\uff08:\uff09\u7684\u5c0f\u5199\u547d\u4ee4\uff0c\u4f8b\u5982 quit \u3002 nebula> :QUIT Bye root!","title":"\u4f7f\u7528Nebula Console\u65ad\u5f00\u8fde\u63a5"},{"location":"2.quick-start/3.connect-to-nebula-graph/#_3","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"2.quick-start/3.connect-to-nebula-graph/#nebula_console_2","text":"\u4e0b\u8f7d\u548c\u7f16\u8bd1Nebula Console\u7684\u6700\u65b0\u6e90\u7801\uff0c\u8bf7\u53c2\u89c1 GitHub nebula console \u9875\u9762\u7684\u8bf4\u660e\u3002","title":"\u5982\u4f55\u901a\u8fc7\u6e90\u7801\u5b89\u88c5Nebula Console\uff1f"},{"location":"2.quick-start/4.nebula-graph-crud/","text":"\u57fa\u7840\u64cd\u4f5c\u8bed\u6cd5 \u00b6 \u672c\u6587\u4ecb\u7ecdNebula Graph\u57fa\u7840\u64cd\u4f5c\u7684\u8bed\u6cd5\u3002 \u56fe\u7a7a\u95f4\u548cSchema \u00b6 \u4e00\u4e2aNebula Graph\u5b9e\u4f8b\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u56fe\u7a7a\u95f4\u7ec4\u6210\u3002\u6bcf\u4e2a\u56fe\u7a7a\u95f4\u90fd\u662f\u7269\u7406\u9694\u79bb\u7684\uff0c\u60a8\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u5b9e\u4f8b\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7a7a\u95f4\u5b58\u50a8\u4e0d\u540c\u7684\u6570\u636e\u96c6\u3002 \u4e3a\u4e86\u5728\u56fe\u7a7a\u95f4\u4e2d\u63d2\u5165\u6570\u636e\uff0c\u9700\u8981\u4e3a\u56fe\u6570\u636e\u5e93\u5b9a\u4e49\u4e00\u4e2aSchema\u3002Nebula Graph\u7684Schema\u662f\u7531\u5982\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\u3002 \u7ec4\u6210\u90e8\u5206 \u8bf4\u660e \u70b9\uff08vertex\uff09 \u8868\u793a\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5b9e\u4f53\u3002\u4e00\u4e2a\u70b9\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\u3002 \u6807\u7b7e\uff08tag\uff09 \u70b9\u7684\u7c7b\u578b\uff0c\u5b9a\u4e49\u4e86\u4e00\u7ec4\u63cf\u8ff0\u70b9\u7c7b\u578b\u7684\u5c5e\u6027\u3002 \u8fb9\uff08edge\uff09 \u8868\u793a\u4e24\u4e2a\u70b9\u4e4b\u95f4 \u6709\u65b9\u5411 \u7684\u5173\u7cfb\u3002 \u8fb9\u7c7b\u578b\uff08edge type\uff09 \u8fb9\u7684\u7c7b\u578b\uff0c\u5b9a\u4e49\u4e86\u4e00\u7ec4\u63cf\u8ff0\u8fb9\u7c7b\u578b\u7684\u5c5e\u6027\u3002 \u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1Nebula Graph Schema\uff08TODO: doc\uff09\u3002 \u672c\u6587\u5c06\u4f7f\u7528\u4e0b\u56fe\u7684\u6570\u636e\u96c6\u6f14\u793a\u57fa\u7840\u64cd\u4f5c\u7684\u8bed\u6cd5\u3002 \u68c0\u67e5Nebula Graph\u96c6\u7fa4\u7684\u673a\u5668\u72b6\u6001 \u00b6 \u9996\u5148\u5efa\u8bae\u60a8\u68c0\u67e5\u673a\u5668\u72b6\u6001\uff0c\u786e\u4fdd\u6240\u6709\u7684Storage\u670d\u52a1\u8fde\u63a5\u5230\u4e86Meta\u670d\u52a1\u3002\u6267\u884c\u547d\u4ee4 SHOW HOSTS \u67e5\u770b\u673a\u5668\u72b6\u6001\u3002 nebula> SHOW HOSTS; +-------------+-----------+-----------+--------------+----------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-------------+-----------+-----------+--------------+----------------------+------------------------+ | \"storaged0\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+-----------+-----------+--------------+----------------------+------------------------+ | \"storaged1\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+-----------+-----------+--------------+----------------------+------------------------+ | \"storaged2\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+-----------+-----------+--------------+----------------------+------------------------+ | \"Total\" | __EMPTY__ | __EMPTY__ | 0 | __EMPTY__ | __EMPTY__ | +-------------+-----------+-----------+--------------+----------------------+------------------------+ Got 4 rows (time spent 1061/2251 us) \u5728\u8fd4\u56de\u7ed3\u679c\u4e2d\uff0c\u67e5\u770b Status \u5217\uff0c\u53ef\u4ee5\u770b\u5230\u6240\u6709Storage\u670d\u52a1\u90fd\u5728\u7ebf\u3002 \u5f02\u6b65\u5b9e\u73b0\u521b\u5efa\u548c\u4fee\u6539 \u00b6 Nebula Graph\u4e2d\u6267\u884c\u5982\u4e0b\u521b\u5efa\u548c\u4fee\u6539\u64cd\u4f5c\uff0c\u662f\u5f02\u6b65\u5b9e\u73b0\u7684\uff0c\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u624d\u540c\u6b65\u6570\u636e\u3002 CREATE SPACE CREATE TAG CREATE EDGE ALTER TAG ALTER EDGE CREATE TAG INDEX CREATE EDGE INDEX \u8bf4\u660e \uff1a\u9ed8\u8ba4\u5fc3\u8df3\u5468\u671f\u662f10\u79d2\u3002\u4fee\u6539\u5fc3\u8df3\u5468\u671f\uff0c\u8bf7\u53c2\u89c1\u8c03\u6574\u5fc3\u8df3\u5468\u671f\uff08TODO: doc\uff09\u3002 \u4e3a\u786e\u4fdd\u6570\u636e\u540c\u6b65\uff0c\u540e\u7eed\u64cd\u4f5c\u80fd\u987a\u5229\u8fdb\u884c\uff0c\u53ef\u91c7\u53d6\u4ee5\u4e0b\u65b9\u6cd5\u4e4b\u4e00\uff1a \u6267\u884c SHOW \u6216 DESCRIBE \u547d\u4ee4\u68c0\u67e5\u76f8\u5e94\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u786e\u4fdd\u521b\u5efa\u6216\u4fee\u6539\u5df2\u5b8c\u6210\u3002\u5982\u679c\u6ca1\u6709\u5b8c\u6210\uff0c\u8bf7\u7b49\u5f85\u51e0\u79d2\u91cd\u8bd5\u3002 \u7b49\u5f852\u4e2a\u5fc3\u8df3\u5468\u671f\uff0820\u79d2\uff09\u3002 \u521b\u5efa\u548c\u9009\u62e9\u56fe\u7a7a\u95f4 \u00b6 nGQL\u8bed\u6cd5 \u00b6 \u521b\u5efa\u56fe\u7a7a\u95f4 CREATE SPACE [IF NOT EXISTS] <graph_space_name> [(partition_num = <partition_number>, replica_factor = <replica_number>, vid_type = {FIXED_STRING(<N>)) | INT64}]; \u53c2\u6570 \u8bf4\u660e partition_num \u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u5206\u7247\u6570\u91cf\u3002\u5efa\u8bae\u8bbe\u7f6e\u4e3a5\u500d\u7684\u96c6\u7fa4\u786c\u76d8\u6570\u91cf\u3002\u4f8b\u5982\u96c6\u7fa4\u4e2d\u67093\u4e2a\u786c\u76d8\uff0c\u5efa\u8bae\u8bbe\u7f6e15\u4e2a\u5206\u7247\u3002 replica_factor \u6307\u5b9a\u6bcf\u4e2a\u5206\u7247\u7684\u526f\u672c\u6570\u91cf\u3002\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8bbe\u7f6e\u4e3a3\uff0c\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u8bbe\u7f6e\u4e3a1\u3002\u7531\u4e8e\u9700\u8981\u8fdb\u884c\u57fa\u4e8equorum\u7684\u9009\u4e3e\uff0c\u526f\u672c\u6570\u91cf\u5fc5\u987b\u662f \u5947\u6570 \u3002 vid_type \u6307\u5b9a\u70b9ID\u7684\u6570\u636e\u7c7b\u578b\u3002\u53ef\u9009\u503c\u4e3a FIXED_STRING(<N>) \u548c INT64 \u3002 FIXED_STRING(<N>) \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff0c\u6700\u5927\u957f\u5ea6\u4e3a N \uff0c\u8d85\u51fa\u957f\u5ea6\u4f1a\u62a5\u9519\uff1b INT64 \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a\u6574\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a FIXED_STRING(8) \u3002 \u5217\u51fa\u521b\u5efa\u6210\u529f\u7684\u56fe\u7a7a\u95f4 nebula> SHOW SPACES; \u9009\u62e9\u6570\u636e\u5e93 USE <graph_space_name>; \u793a\u4f8b \u00b6 \u6267\u884c\u5982\u4e0b\u8bed\u53e5\u521b\u5efa\u540d\u4e3a nba \u7684\u56fe\u7a7a\u95f4\u3002 ngql nebula> CREATE SPACE nba(partition_num=15, replica_factor=1, vid_type=fixed_string(30)); Execution succeeded (time spent 2817/3280 us) \u6267\u884c\u547d\u4ee4 SHOW HOSTS \u68c0\u67e5\u5206\u7247\u7684\u5206\u5e03\u60c5\u51b5\uff0c\u786e\u4fdd\u5e73\u8861\u5206\u5e03\u3002 nebula> SHOW HOSTS; +-------------+-----------+-----------+--------------+---------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-------------+-----------+-----------+--------------+---------------------+------------------------+ | \"storaged0\" | 9779 | \"ONLINE\" | 5 | \"nba:5\" | \"nba:5\" | +-------------+-----------+-----------+--------------+---------------------+------------------------+ | \"storaged1\" | 9779 | \"ONLINE\" | 5 | \"nba:5\" | \"nba:5\" | +-------------+-----------+-----------+--------------+---------------------+------------------------+ | \"storaged2\" | 9779 | \"ONLINE\" | 5 | \"nba:5\" | \"nba:5\" | +-------------+-----------+-----------+--------------+---------------------+------------------------+ | \"Total\" | __EMPTY__ | __EMPTY__ | 15 | \"nba:15\" | \"nba:15\" | +-------------+-----------+-----------+--------------+---------------------+------------------------+ Got 4 rows (time spent 1633/2867 us) \u5982\u679c Leader distribution \u5206\u5e03\u4e0d\u5747\u5300\uff0c\u8bf7\u6267\u884c\u547d\u4ee4 BALANCE LEADER \u91cd\u65b0\u5206\u914d\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1BALANCE\uff08TODO: doc\uff09\u3002 \u9009\u62e9\u56fe\u7a7a\u95f4 nba \u3002 nebula[(none)]> USE nba; Execution succeeded (time spent 1229/2318 us) \u60a8\u53ef\u4ee5\u6267\u884c\u547d\u4ee4 SHOW SPACES \u67e5\u770b\u521b\u5efa\u7684\u56fe\u7a7a\u95f4\u3002 nebula> SHOW SPACES; +-------+ | Name | +-------+ | \"nba\" | +-------+ Got 1 rows (time spent 977/2000 us) \u521b\u5efa\u6807\u7b7e\u548c\u8fb9\u7c7b\u578b \u00b6 nGQL\u8bed\u6cd5 \u00b6 CREATE {TAG | EDGE} {<tag_name> | <edge_type>}(<property_name> <data_type> [, <property_name> <data_type> ...]); \u793a\u4f8b \u00b6 \u521b\u5efa\u6807\u7b7e player \u548c team \uff0c\u4ee5\u53ca\u8fb9\u7c7b\u578b follow \u548c serve \u3002\u8bf4\u660e\u5982\u4e0b\u8868\u3002 \u540d\u79f0 \u7c7b\u578b \u5c5e\u6027 player Tag name (string), age (int) team Tag name (string) follow Edge type degree (int) serve Edge type start_year (int), end_year (int) nebula> CREATE TAG player(name string, age int); Execution succeeded (time spent 20708/22071 us) Wed, 24 Feb 2021 03:47:01 EST nebula> CREATE TAG team(name string); Execution succeeded (time spent 5643/6810 us) Wed, 24 Feb 2021 03:47:59 EST nebula> CREATE EDGE follow(degree int); Execution succeeded (time spent 12665/13934 us) Wed, 24 Feb 2021 03:48:07 EST nebula> CREATE EDGE serve(start_year int, end_year int); Execution succeeded (time spent 5858/6870 us) Wed, 24 Feb 2021 03:48:16 EST \u63d2\u5165\u70b9\u548c\u8fb9 \u00b6 \u60a8\u53ef\u4ee5\u4f7f\u7528 INSERT \u8bed\u53e5\uff0c\u57fa\u4e8e\u73b0\u6709\u7684\u6807\u7b7e\u63d2\u5165\u70b9\uff0c\u6216\u8005\u57fa\u4e8e\u73b0\u6709\u7684\u8fb9\u7c7b\u578b\u63d2\u5165\u8fb9\u3002 nGQL\u8bed\u6cd5 \u00b6 \u63d2\u5165\u70b9 INSERT VERTEX <tag_name> (<property_name>[, <property_name>...]) [, <tag_name> (<property_name>[, <property_name>...]), ...] {VALUES | VALUE} <vid>: (<property_value>[, <property_value>...]) [, <vid>: (<property_value>[, <property_value>...]; VID \u662fVertex ID\u7684\u7f29\u5199\uff0c VID \u5728\u4e00\u4e2a\u56fe\u7a7a\u95f4\u4e2d\u662f\u552f\u4e00\u7684\u3002 \u63d2\u5165\u8fb9 INSERT EDGE <edge_type> (<property_name>[, <property_name>...]) {VALUES | VALUE} <src_vid> -> <dst_vid>[@<rank>] : (<property_value>[, <property_value>...]) [, <src_vid> -> <dst_vid>[@<rank> : (<property_name>[, <property_name>...]), ...]; \u793a\u4f8b \u00b6 \u63d2\u5165\u4ee3\u8868NBA\u7403\u5458\u548c\u7403\u961f\u7684\u70b9\u3002 nebula> INSERT VERTEX player(name, age) VALUES \"player100\":(\"Tim Duncan\", 42); Execution succeeded (time spent 28196/30896 us) Wed, 24 Feb 2021 03:55:08 EST nebula> INSERT VERTEX player(name, age) VALUES \"player101\":(\"Tony Parker\", 36); Execution succeeded (time spent 2708/3834 us) Wed, 24 Feb 2021 03:55:20 EST nebula> INSERT VERTEX player(name, age) VALUES \"player102\":(\"LaMarcus Aldridge\", 33); Execution succeeded (time spent 1945/3294 us) Wed, 24 Feb 2021 03:55:32 EST nebula> INSERT VERTEX team(name) VALUES \"team200\":(\"Warriors\"), \"team201\":(\"Nuggets\"); Execution succeeded (time spent 2269/3310 us) Wed, 24 Feb 2021 03:55:47 EST \u63d2\u5165\u4ee3\u8868NBA\u7403\u5458\u548c\u7403\u961f\u4e4b\u95f4\u5173\u7cfb\u7684\u8fb9\u3002 nebula> INSERT EDGE follow(degree) VALUES \"player100\" -> \"player101\":(95); Execution succeeded (time spent 3362/4542 us) Wed, 24 Feb 2021 03:57:36 EST nebula> INSERT EDGE follow(degree) VALUES \"player100\" -> \"player102\":(90); Execution succeeded (time spent 2974/4274 us) Wed, 24 Feb 2021 03:57:44 EST nebula> INSERT EDGE follow(degree) VALUES \"player102\" -> \"player101\":(75); Execution succeeded (time spent 1891/3096 us) Wed, 24 Feb 2021 03:57:52 EST nebula> INSERT EDGE serve(start_year, end_year) VALUES \"player100\" -> \"team200\":(1997, 2016), \"player101\" -> \"team201\":(1999, 2018); Execution succeeded (time spent 6064/7104 us) Wed, 24 Feb 2021 03:58:01 EST \u67e5\u8be2\u6570\u636e \u00b6 GO \u8bed\u53e5\u53ef\u4ee5\u6839\u636e\u6307\u5b9a\u7684\u6761\u4ef6\u904d\u5386\u6570\u636e\u5e93\u3002 GO \u8bed\u53e5\u4ece\u4e00\u4e2a\u6216\u591a\u4e2a\u70b9\u5f00\u59cb\uff0c\u6cbf\u7740\u4e00\u6761\u6216\u591a\u6761\u8fb9\u904d\u5386\uff0c\u8fd4\u56de YIELD \u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u4fe1\u606f\u3002 FETCH \u8bed\u53e5\u53ef\u4ee5\u83b7\u5f97\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 LOOKUP \u8bed\u53e5\u662f\u57fa\u4e8e \u7d22\u5f15 \u7684\uff0c\u548c WHERE \u5b50\u53e5\u4e00\u8d77\u4f7f\u7528\uff0c\u67e5\u627e\u7b26\u5408\u7279\u5b9a\u6761\u4ef6\u7684\u6570\u636e\u3002 MATCH \u8bed\u53e5\u662f\u67e5\u8be2\u56fe\u6570\u636e\u6700\u5e38\u7528\u7684\uff0c\u4f46\u662f\u5b83\u4f9d\u8d56 \u7d22\u5f15 \u53bb\u5339\u914dNebula Graph\u4e2d\u7684\u6570\u636e\u6a21\u578b\u3002 nGQL\u8bed\u6cd5 \u00b6 GO GO [[<M> TO] <N> STEPS ] FROM <vertex_list> OVER <edge_type_list> [REVERSELY] [BIDIRECT] [WHERE <expression> [AND | OR expression ...])] YIELD [DISTINCT] <return_list>; FETCH \u67e5\u8be2\u6807\u7b7e\u5c5e\u6027 FETCH PROP ON {<tag_name> | <tag_name_list> | *} <vid_list> [YIELD [DISTINCT] <return_list>]; \u67e5\u8be2\u8fb9\u5c5e\u6027 FETCH PROP ON <edge_type> <src_vid> -> <dst_vid>[@<rank>] [, <src_vid> -> <dst_vid> ...] [YIELD [DISTINCT] <return_list>]; LOOKUP LOOKUP ON {<tag_name> | <edge_type>} WHERE <expression> [AND expression ...])] [YIELD <return_list>]; MATCH MATCH <pattern> [<WHERE clause>] RETURN <output>; GO \u8bed\u53e5\u793a\u4f8b \u00b6 \u4eceVID\u4e3a player100 \u7684\u7403\u5458\u5f00\u59cb\uff0c\u6cbf\u7740\u8fb9 follow \u627e\u5230\u8fde\u63a5\u7684\u7403\u5458\u3002 nebula> GO FROM \"player100\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ Got 2 rows (time spent 12097/14220 us) \u4eceVID\u4e3a player100 \u7684\u7403\u5458\u5f00\u59cb\uff0c\u6cbf\u7740\u8fb9 follow \u67e5\u627e\u5e74\u9f84\u5927\u4e8e\u6216\u7b49\u4e8e35\u5c81\u7684\u7403\u5458\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u59d3\u540d\u548c\u5e74\u9f84\uff0c\u540c\u65f6\u91cd\u547d\u540d\u5bf9\u5e94\u7684\u5217\u3002 nebula> GO FROM \"player100\" OVER follow WHERE $$.player.age >= 35 \\ -> YIELD $$.player.name AS Teammate, $$.player.age AS Age; +---------------+-----+ | Teammate | Age | +---------------+-----+ | \"Tony Parker\" | 36 | +---------------+-----+ Got 1 rows (time spent 8206/9335 us) \u5b50\u53e5/\u7b26\u53f7 \u8bf4\u660e YIELD \u6307\u5b9a\u8be5\u67e5\u8be2\u9700\u8981\u8fd4\u56de\u7684\u503c\u6216\u7ed3\u679c\u3002 $$ \u8868\u793a\u8fb9\u7684\u7ec8\u70b9\u3002 \\ \u8868\u793a\u6362\u884c\u7ee7\u7eed\u8f93\u5165\u3002 \u4eceVID\u4e3a player100 \u7684\u7403\u5458\u5f00\u59cb\uff0c\u6cbf\u7740\u8fb9 follow \u67e5\u627e\u8fde\u63a5\u7684\u7403\u5458\uff0c\u7136\u540e\u68c0\u7d22\u8fd9\u4e9b\u7403\u5458\u7684\u7403\u961f\u3002\u4e3a\u4e86\u5408\u5e76\u8fd9\u4e24\u4e2a\u67e5\u8be2\u8bf7\u6c42\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ba1\u9053\u7b26\u6216\u4e34\u65f6\u53d8\u91cf\u3002 \u4f7f\u7528\u7ba1\u9053\u7b26 nebula> GO FROM \"player100\" OVER follow YIELD follow._dst AS id | \\ GO FROM $-.id OVER serve YIELD $$.team.name AS Team, \\ $^.player.name AS Player; +-----------+---------------+ | Team | Player | +-----------+---------------+ | \"Nuggets\" | \"Tony Parker\" | +-----------+---------------+ Got 1 rows (time spent 5055/8203 us) \u5b50\u53e5/\u7b26\u53f7 \u8bf4\u660e $^ \u8868\u793a\u8fb9\u7684\u8d77\u70b9\u3002 \\| \u7ec4\u5408\u591a\u4e2a\u67e5\u8be2\u7684\u7ba1\u9053\u7b26\uff0c\u5c06\u524d\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u7528\u4e8e\u540e\u4e00\u4e2a\u67e5\u8be2\u3002 $- \u8868\u793a\u7ba1\u9053\u7b26\u524d\u9762\u7684\u67e5\u8be2\u8f93\u51fa\u7684\u7ed3\u679c\u96c6\u3002 \u4f7f\u7528\u4e34\u65f6\u53d8\u91cf \u8bf4\u660e \uff1a\u5f53\u590d\u5408\u8bed\u53e5\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\u65f6\uff0c\u5176\u4e2d\u7684\u4e34\u65f6\u53d8\u91cf\u4f1a\u5728\u8bed\u53e5\u7ed3\u675f\u65f6\u88ab\u91ca\u653e\u3002 ngql nebula> $var = GO FROM \"player100\" OVER follow YIELD follow._dst AS id; \\ GO FROM $var.id OVER serve YIELD $$.team.name AS Team, \\ $^.player.name AS Player; +---------+-------------+ | Team | Player | +---------+-------------+ | Nuggets | Tony Parker | +---------+-------------+ Got 1 rows (time spent 3103/3711 us) FETCH \u8bed\u53e5\u793a\u4f8b \u00b6 \u67e5\u8be2VID\u4e3a player100 \u7684\u7403\u5458\u7684\u5c5e\u6027\u3002 nebula> FETCH PROP ON player \"player100\"; +----------------------------------------------------+ | vertices_ | +----------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------+ Got 1 rows (time spent 2006/2406 us) \u8bf4\u660e \uff1a LOOKUP \u548c MATCH \u7684\u793a\u4f8b\u5728\u4e0b\u6587\u7684 \u7d22\u5f15 \u90e8\u5206\u67e5\u770b\u3002 \u4fee\u6539\u70b9\u548c\u8fb9 \u00b6 \u60a8\u53ef\u4ee5\u4f7f\u7528 UPDATE \u8bed\u53e5\u6216 UPSERT \u8bed\u53e5\u4fee\u6539\u73b0\u6709\u6570\u636e\u3002 UPSERT \u662f UPDATE \u548c INSERT \u7684\u7ed3\u5408\u4f53\u3002\u5f53\u60a8\u4f7f\u7528 UPSERT \u66f4\u65b0\u4e00\u4e2a\u70b9\u6216\u8fb9\uff0c\u5982\u679c\u5b83\u4e0d\u5b58\u5728\uff0c\u6570\u636e\u5e93\u4f1a\u81ea\u52a8\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u70b9\u6216\u8fb9\u3002 \u8bf4\u660e \uff1a UPSERT \u64cd\u4f5c\u662f\u57fa\u4e8eNebula Graph\u7684\u5206\u533a\u8fdb\u884c\u4e32\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u6267\u884c\u901f\u5ea6\u6bd4\u5355\u72ec\u6267\u884c INSERT \u6216 UPDATE \u6162\u3002 nGQL\u8bed\u6cd5 \u00b6 UPDATE \u70b9 UPDATE VERTEX <vid> SET <properties to be updated> [WHEN <condition>] [YIELD <columns>]; UPDATE \u8fb9 UPDATE EDGE <source vid> -> <destination vid> [@rank] OF <edge_type> SET <properties to be updated> [WHEN <condition>] [YIELD <columns to be output>]; UPSERT \u70b9\u6216\u8fb9 UPSERT {VERTEX <vid> | EDGE <edge_type>} SET <update_columns> [WHEN <condition>] [YIELD <columns>]; \u793a\u4f8b \u00b6 \u7528 UPDATE \u4fee\u6539VID\u4e3a player100 \u7684\u7403\u5458\u7684 name \u5c5e\u6027\uff0c\u7136\u540e\u7528 FETCH \u8bed\u53e5\u68c0\u67e5\u7ed3\u679c\u3002 ```ngql nebula> UPDATE VERTEX \"player100\" SET player.name = \"Tim\"; Execution succeeded (time spent 3483/3914 us) Wed, 21 Oct 2020 10:53:14 UTC nebula> FETCH PROP ON player \"player100\"; +---------------------------------------------+ | vertices_ | +---------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim\"}) | +---------------------------------------------+ Got 1 rows (time spent 2463/3042 us) ``` \u7528 UPDATE \u4fee\u6539\u67d0\u6761\u8fb9\u7684 degree \u5c5e\u6027\uff0c\u7136\u540e\u7528 FETCH \u68c0\u67e5\u7ed3\u679c\u3002 nebula> UPDATE EDGE \"player100\" -> \"player101\" OF follow SET degree = 96; Execution succeeded (time spent 3932/4432 us) nebula> FETCH PROP ON follow \"player100\" -> \"player101\"; +----------------------------------------------------+ | edges_ | +----------------------------------------------------+ | [:follow \"player100\"->\"player101\" @0 {degree: 96}] | +----------------------------------------------------+ Got 1 rows (time spent 2205/2800 us) \u7528 UPSERT \u63d2\u5165\u4e00\u4e2aVID\u4e3a player111 \u7684\u70b9\u3002 nebula> INSERT VERTEX player(name, age) VALUES \"player111\":(\"Ben Simmons\", 22); Execution succeeded (time spent 2115/2900 us) Wed, 21 Oct 2020 11:11:50 UTC nebula> UPSERT VERTEX \"player111\" SET player.name = \"Dwight Howard\", player.age = $^.player.age + 11 \\ WHEN $^.player.name == \"Ben Simmons\" AND $^.player.age > 20 \\ YIELD $^.player.name AS Name, $^.player.age AS Age; +---------------+-----+ | Name | Age | +---------------+-----+ | Dwight Howard | 33 | +---------------+-----+ Got 1 rows (time spent 1815/2329 us) \u5220\u9664\u70b9\u548c\u8fb9 \u00b6 nGQL\u8bed\u6cd5 \u00b6 \u5220\u9664\u70b9 DELETE VERTEX <vid1>[, <vid2>...] \u5220\u9664\u8fb9 DELETE EDGE <edge_type> <src_vid> -> <dst_vid>[@<rank>] [, <src_vid> -> <dst_vid>...] \u793a\u4f8b \u00b6 \u5220\u9664\u70b9 nebula> DELETE VERTEX \"team1\", \"team2\"; Execution succeeded (time spent 4337/4782 us) \u5220\u9664\u8fb9 nebula> DELETE EDGE follow \"team1\" -> \"team2\"; Execution succeeded (time spent 3700/4101 us) \u7d22\u5f15 \u00b6 \u60a8\u53ef\u4ee5\u901a\u8fc7 CREATE INDEX \u8bed\u53e5\u4e3a\u6807\u7b7e\uff08tag\uff09\u548c\u8fb9\u7c7b\u578b\uff08edge type\uff09\u589e\u52a0\u7d22\u5f15\u3002 \u4f7f\u7528\u7d22\u5f15\u5fc5\u8bfb \u00b6 MATCH \u548c LOOKUP \u8bed\u53e5\u7684\u6267\u884c\u90fd\u4f9d\u8d56\u7d22\u5f15\uff0c\u4f46\u662f\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5199\u6027\u80fd\u5927\u5e45\u964d\u4f4e\uff08\u964d\u4f4e90%\u751a\u81f3\u66f4\u591a\uff09\u3002\u8bf7 \u4e0d\u8981\u968f\u610f \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u7d22\u5f15\uff0c\u9664\u975e\u60a8\u5f88\u6e05\u695a\u4f7f\u7528\u7d22\u5f15\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002 \u60a8 \u5fc5\u987b \u4e3a\u5df2\u5b58\u5728\u7684\u6570\u636e\u91cd\u5efa\u7d22\u5f15\uff0c\u5426\u5219\u4e0d\u80fd\u7d22\u5f15\u5df2\u5b58\u5728\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u65e0\u6cd5\u5728 MATCH \u548c LOOKUP \u8bed\u53e5\u4e2d\u8fd4\u56de\u8fd9\u4e9b\u6570\u636e\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u91cd\u5efa\u7d22\u5f15 \u3002 nGQL\u8bed\u6cd5 \u00b6 \u521b\u5efa\u7d22\u5f15 CREATE {TAG | EDGE} INDEX [IF NOT EXISTS] <index_name> ON {<tag_name> | <edge_name>} (prop_name_list); \u91cd\u5efa\u7d22\u5f15 REBUILD {TAG | EDGE} INDEX <index_name>; \u793a\u4f8b \u00b6 \u4e3a\u6807\u7b7e player \u7684\u5c5e\u6027 name \u521b\u5efa\u7d22\u5f15\uff0c\u5e76\u4e14\u91cd\u5efa\u7d22\u5f15\u3002 nebula> CREATE TAG INDEX player_index_0 on player(name(20)); nebula> REBUILD TAG INDEX player_index_0; \u8bf4\u660e \uff1a\u4e3a\u6ca1\u6709\u6307\u5b9a\u957f\u5ea6\u7684\u53d8\u91cf\u5c5e\u6027\u521b\u5efa\u7d22\u5f15\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u7d22\u5f15\u957f\u5ea6\u3002\u5728utf-8\u7f16\u7801\u4e2d\uff0c\u4e00\u4e2a\u4e2d\u6587\u5b57\u7b26\u53603\u5b57\u8282\uff0c\u8bf7\u6839\u636e\u53d8\u91cf\u5c5e\u6027\u957f\u5ea6\u8bbe\u7f6e\u5408\u9002\u7684\u7d22\u5f15\u957f\u5ea6\u3002\u4f8b\u598210\u4e2a\u4e2d\u6587\u5b57\u7b26\uff0c\u7d22\u5f15\u957f\u5ea6\u9700\u8981\u4e3a30\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u521b\u5efa\u7d22\u5f15 \u3002 \u57fa\u4e8e\u7d22\u5f15\u7684 LOOKUP \u548c MATCH \u793a\u4f8b \u00b6 \u786e\u4fdd LOOKUP \u6216 MATCH \u6709\u4e00\u4e2a\u7d22\u5f15\u53ef\u7528\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u5148\u521b\u5efa\u7d22\u5f15\u3002 \u627e\u5230\u6807\u7b7e\u4e3a player \u7684\u70b9\u7684\u4fe1\u606f\uff0c\u5b83\u7684 name \u5c5e\u6027\u503c\u4e3a Tony Parker \u3002 // \u4e3aname\u5c5e\u6027\u521b\u5efa\u7d22\u5f15player_name_0\u3002 nebula> CREATE TAG INDEX player_name_0 on player(name(10)); Execution succeeded (time spent 3465/4150 us) // \u91cd\u5efa\u7d22\u5f15\u786e\u4fdd\u80fd\u5bf9\u5df2\u5b58\u5728\u6570\u636e\u751f\u6548\u3002 nebula> REBUILD TAG INDEX player_name_0 +------------+ | New Job Id | +------------+ | 31 | +------------+ Got 1 rows (time spent 2379/3033 us) // \u4f7f\u7528LOOKUP\u8bed\u53e5\u68c0\u7d22\u70b9\u7684\u5c5e\u6027\u3002 nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\" \\ YIELD player.name, player.age; +-------------+---------------+------------+ | VertexID | player.name | player.age | +-------------+---------------+------------+ | \"player101\" | \"Tony Parker\" | 36 | +-------------+---------------+------------+ // \u4f7f\u7528MATCH\u8bed\u53e5\u68c0\u7d22\u70b9\u7684\u5c5e\u6027\u3002 nebula> MATCH (v:player{name:\"Tony Parker\"}) RETURN v; +-----------------------------------------------------+ | v | +-----------------------------------------------------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +-----------------------------------------------------+ Got 1 rows (time spent 5132/6246 us)","title":"Nebula\u00a0Graph CRUD"},{"location":"2.quick-start/4.nebula-graph-crud/#_1","text":"\u672c\u6587\u4ecb\u7ecdNebula Graph\u57fa\u7840\u64cd\u4f5c\u7684\u8bed\u6cd5\u3002","title":"\u57fa\u7840\u64cd\u4f5c\u8bed\u6cd5"},{"location":"2.quick-start/4.nebula-graph-crud/#schema","text":"\u4e00\u4e2aNebula Graph\u5b9e\u4f8b\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u56fe\u7a7a\u95f4\u7ec4\u6210\u3002\u6bcf\u4e2a\u56fe\u7a7a\u95f4\u90fd\u662f\u7269\u7406\u9694\u79bb\u7684\uff0c\u60a8\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u5b9e\u4f8b\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u56fe\u7a7a\u95f4\u5b58\u50a8\u4e0d\u540c\u7684\u6570\u636e\u96c6\u3002 \u4e3a\u4e86\u5728\u56fe\u7a7a\u95f4\u4e2d\u63d2\u5165\u6570\u636e\uff0c\u9700\u8981\u4e3a\u56fe\u6570\u636e\u5e93\u5b9a\u4e49\u4e00\u4e2aSchema\u3002Nebula Graph\u7684Schema\u662f\u7531\u5982\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\u3002 \u7ec4\u6210\u90e8\u5206 \u8bf4\u660e \u70b9\uff08vertex\uff09 \u8868\u793a\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5b9e\u4f53\u3002\u4e00\u4e2a\u70b9\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\u3002 \u6807\u7b7e\uff08tag\uff09 \u70b9\u7684\u7c7b\u578b\uff0c\u5b9a\u4e49\u4e86\u4e00\u7ec4\u63cf\u8ff0\u70b9\u7c7b\u578b\u7684\u5c5e\u6027\u3002 \u8fb9\uff08edge\uff09 \u8868\u793a\u4e24\u4e2a\u70b9\u4e4b\u95f4 \u6709\u65b9\u5411 \u7684\u5173\u7cfb\u3002 \u8fb9\u7c7b\u578b\uff08edge type\uff09 \u8fb9\u7684\u7c7b\u578b\uff0c\u5b9a\u4e49\u4e86\u4e00\u7ec4\u63cf\u8ff0\u8fb9\u7c7b\u578b\u7684\u5c5e\u6027\u3002 \u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1Nebula Graph Schema\uff08TODO: doc\uff09\u3002 \u672c\u6587\u5c06\u4f7f\u7528\u4e0b\u56fe\u7684\u6570\u636e\u96c6\u6f14\u793a\u57fa\u7840\u64cd\u4f5c\u7684\u8bed\u6cd5\u3002","title":"\u56fe\u7a7a\u95f4\u548cSchema"},{"location":"2.quick-start/4.nebula-graph-crud/#nebula_graph","text":"\u9996\u5148\u5efa\u8bae\u60a8\u68c0\u67e5\u673a\u5668\u72b6\u6001\uff0c\u786e\u4fdd\u6240\u6709\u7684Storage\u670d\u52a1\u8fde\u63a5\u5230\u4e86Meta\u670d\u52a1\u3002\u6267\u884c\u547d\u4ee4 SHOW HOSTS \u67e5\u770b\u673a\u5668\u72b6\u6001\u3002 nebula> SHOW HOSTS; +-------------+-----------+-----------+--------------+----------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-------------+-----------+-----------+--------------+----------------------+------------------------+ | \"storaged0\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+-----------+-----------+--------------+----------------------+------------------------+ | \"storaged1\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+-----------+-----------+--------------+----------------------+------------------------+ | \"storaged2\" | 9779 | \"ONLINE\" | 0 | \"No valid partition\" | \"No valid partition\" | +-------------+-----------+-----------+--------------+----------------------+------------------------+ | \"Total\" | __EMPTY__ | __EMPTY__ | 0 | __EMPTY__ | __EMPTY__ | +-------------+-----------+-----------+--------------+----------------------+------------------------+ Got 4 rows (time spent 1061/2251 us) \u5728\u8fd4\u56de\u7ed3\u679c\u4e2d\uff0c\u67e5\u770b Status \u5217\uff0c\u53ef\u4ee5\u770b\u5230\u6240\u6709Storage\u670d\u52a1\u90fd\u5728\u7ebf\u3002","title":"\u68c0\u67e5Nebula Graph\u96c6\u7fa4\u7684\u673a\u5668\u72b6\u6001"},{"location":"2.quick-start/4.nebula-graph-crud/#_2","text":"Nebula Graph\u4e2d\u6267\u884c\u5982\u4e0b\u521b\u5efa\u548c\u4fee\u6539\u64cd\u4f5c\uff0c\u662f\u5f02\u6b65\u5b9e\u73b0\u7684\uff0c\u9700\u8981\u5728\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u624d\u540c\u6b65\u6570\u636e\u3002 CREATE SPACE CREATE TAG CREATE EDGE ALTER TAG ALTER EDGE CREATE TAG INDEX CREATE EDGE INDEX \u8bf4\u660e \uff1a\u9ed8\u8ba4\u5fc3\u8df3\u5468\u671f\u662f10\u79d2\u3002\u4fee\u6539\u5fc3\u8df3\u5468\u671f\uff0c\u8bf7\u53c2\u89c1\u8c03\u6574\u5fc3\u8df3\u5468\u671f\uff08TODO: doc\uff09\u3002 \u4e3a\u786e\u4fdd\u6570\u636e\u540c\u6b65\uff0c\u540e\u7eed\u64cd\u4f5c\u80fd\u987a\u5229\u8fdb\u884c\uff0c\u53ef\u91c7\u53d6\u4ee5\u4e0b\u65b9\u6cd5\u4e4b\u4e00\uff1a \u6267\u884c SHOW \u6216 DESCRIBE \u547d\u4ee4\u68c0\u67e5\u76f8\u5e94\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u786e\u4fdd\u521b\u5efa\u6216\u4fee\u6539\u5df2\u5b8c\u6210\u3002\u5982\u679c\u6ca1\u6709\u5b8c\u6210\uff0c\u8bf7\u7b49\u5f85\u51e0\u79d2\u91cd\u8bd5\u3002 \u7b49\u5f852\u4e2a\u5fc3\u8df3\u5468\u671f\uff0820\u79d2\uff09\u3002","title":"\u5f02\u6b65\u5b9e\u73b0\u521b\u5efa\u548c\u4fee\u6539"},{"location":"2.quick-start/4.nebula-graph-crud/#_3","text":"","title":"\u521b\u5efa\u548c\u9009\u62e9\u56fe\u7a7a\u95f4"},{"location":"2.quick-start/4.nebula-graph-crud/#ngql","text":"\u521b\u5efa\u56fe\u7a7a\u95f4 CREATE SPACE [IF NOT EXISTS] <graph_space_name> [(partition_num = <partition_number>, replica_factor = <replica_number>, vid_type = {FIXED_STRING(<N>)) | INT64}]; \u53c2\u6570 \u8bf4\u660e partition_num \u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u5206\u7247\u6570\u91cf\u3002\u5efa\u8bae\u8bbe\u7f6e\u4e3a5\u500d\u7684\u96c6\u7fa4\u786c\u76d8\u6570\u91cf\u3002\u4f8b\u5982\u96c6\u7fa4\u4e2d\u67093\u4e2a\u786c\u76d8\uff0c\u5efa\u8bae\u8bbe\u7f6e15\u4e2a\u5206\u7247\u3002 replica_factor \u6307\u5b9a\u6bcf\u4e2a\u5206\u7247\u7684\u526f\u672c\u6570\u91cf\u3002\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8bbe\u7f6e\u4e3a3\uff0c\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u8bbe\u7f6e\u4e3a1\u3002\u7531\u4e8e\u9700\u8981\u8fdb\u884c\u57fa\u4e8equorum\u7684\u9009\u4e3e\uff0c\u526f\u672c\u6570\u91cf\u5fc5\u987b\u662f \u5947\u6570 \u3002 vid_type \u6307\u5b9a\u70b9ID\u7684\u6570\u636e\u7c7b\u578b\u3002\u53ef\u9009\u503c\u4e3a FIXED_STRING(<N>) \u548c INT64 \u3002 FIXED_STRING(<N>) \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff0c\u6700\u5927\u957f\u5ea6\u4e3a N \uff0c\u8d85\u51fa\u957f\u5ea6\u4f1a\u62a5\u9519\uff1b INT64 \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a\u6574\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a FIXED_STRING(8) \u3002 \u5217\u51fa\u521b\u5efa\u6210\u529f\u7684\u56fe\u7a7a\u95f4 nebula> SHOW SPACES; \u9009\u62e9\u6570\u636e\u5e93 USE <graph_space_name>;","title":"nGQL\u8bed\u6cd5"},{"location":"2.quick-start/4.nebula-graph-crud/#_4","text":"\u6267\u884c\u5982\u4e0b\u8bed\u53e5\u521b\u5efa\u540d\u4e3a nba \u7684\u56fe\u7a7a\u95f4\u3002 ngql nebula> CREATE SPACE nba(partition_num=15, replica_factor=1, vid_type=fixed_string(30)); Execution succeeded (time spent 2817/3280 us) \u6267\u884c\u547d\u4ee4 SHOW HOSTS \u68c0\u67e5\u5206\u7247\u7684\u5206\u5e03\u60c5\u51b5\uff0c\u786e\u4fdd\u5e73\u8861\u5206\u5e03\u3002 nebula> SHOW HOSTS; +-------------+-----------+-----------+--------------+---------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-------------+-----------+-----------+--------------+---------------------+------------------------+ | \"storaged0\" | 9779 | \"ONLINE\" | 5 | \"nba:5\" | \"nba:5\" | +-------------+-----------+-----------+--------------+---------------------+------------------------+ | \"storaged1\" | 9779 | \"ONLINE\" | 5 | \"nba:5\" | \"nba:5\" | +-------------+-----------+-----------+--------------+---------------------+------------------------+ | \"storaged2\" | 9779 | \"ONLINE\" | 5 | \"nba:5\" | \"nba:5\" | +-------------+-----------+-----------+--------------+---------------------+------------------------+ | \"Total\" | __EMPTY__ | __EMPTY__ | 15 | \"nba:15\" | \"nba:15\" | +-------------+-----------+-----------+--------------+---------------------+------------------------+ Got 4 rows (time spent 1633/2867 us) \u5982\u679c Leader distribution \u5206\u5e03\u4e0d\u5747\u5300\uff0c\u8bf7\u6267\u884c\u547d\u4ee4 BALANCE LEADER \u91cd\u65b0\u5206\u914d\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1BALANCE\uff08TODO: doc\uff09\u3002 \u9009\u62e9\u56fe\u7a7a\u95f4 nba \u3002 nebula[(none)]> USE nba; Execution succeeded (time spent 1229/2318 us) \u60a8\u53ef\u4ee5\u6267\u884c\u547d\u4ee4 SHOW SPACES \u67e5\u770b\u521b\u5efa\u7684\u56fe\u7a7a\u95f4\u3002 nebula> SHOW SPACES; +-------+ | Name | +-------+ | \"nba\" | +-------+ Got 1 rows (time spent 977/2000 us)","title":"\u793a\u4f8b"},{"location":"2.quick-start/4.nebula-graph-crud/#_5","text":"","title":"\u521b\u5efa\u6807\u7b7e\u548c\u8fb9\u7c7b\u578b"},{"location":"2.quick-start/4.nebula-graph-crud/#ngql_1","text":"CREATE {TAG | EDGE} {<tag_name> | <edge_type>}(<property_name> <data_type> [, <property_name> <data_type> ...]);","title":"nGQL\u8bed\u6cd5"},{"location":"2.quick-start/4.nebula-graph-crud/#_6","text":"\u521b\u5efa\u6807\u7b7e player \u548c team \uff0c\u4ee5\u53ca\u8fb9\u7c7b\u578b follow \u548c serve \u3002\u8bf4\u660e\u5982\u4e0b\u8868\u3002 \u540d\u79f0 \u7c7b\u578b \u5c5e\u6027 player Tag name (string), age (int) team Tag name (string) follow Edge type degree (int) serve Edge type start_year (int), end_year (int) nebula> CREATE TAG player(name string, age int); Execution succeeded (time spent 20708/22071 us) Wed, 24 Feb 2021 03:47:01 EST nebula> CREATE TAG team(name string); Execution succeeded (time spent 5643/6810 us) Wed, 24 Feb 2021 03:47:59 EST nebula> CREATE EDGE follow(degree int); Execution succeeded (time spent 12665/13934 us) Wed, 24 Feb 2021 03:48:07 EST nebula> CREATE EDGE serve(start_year int, end_year int); Execution succeeded (time spent 5858/6870 us) Wed, 24 Feb 2021 03:48:16 EST","title":"\u793a\u4f8b"},{"location":"2.quick-start/4.nebula-graph-crud/#_7","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528 INSERT \u8bed\u53e5\uff0c\u57fa\u4e8e\u73b0\u6709\u7684\u6807\u7b7e\u63d2\u5165\u70b9\uff0c\u6216\u8005\u57fa\u4e8e\u73b0\u6709\u7684\u8fb9\u7c7b\u578b\u63d2\u5165\u8fb9\u3002","title":"\u63d2\u5165\u70b9\u548c\u8fb9"},{"location":"2.quick-start/4.nebula-graph-crud/#ngql_2","text":"\u63d2\u5165\u70b9 INSERT VERTEX <tag_name> (<property_name>[, <property_name>...]) [, <tag_name> (<property_name>[, <property_name>...]), ...] {VALUES | VALUE} <vid>: (<property_value>[, <property_value>...]) [, <vid>: (<property_value>[, <property_value>...]; VID \u662fVertex ID\u7684\u7f29\u5199\uff0c VID \u5728\u4e00\u4e2a\u56fe\u7a7a\u95f4\u4e2d\u662f\u552f\u4e00\u7684\u3002 \u63d2\u5165\u8fb9 INSERT EDGE <edge_type> (<property_name>[, <property_name>...]) {VALUES | VALUE} <src_vid> -> <dst_vid>[@<rank>] : (<property_value>[, <property_value>...]) [, <src_vid> -> <dst_vid>[@<rank> : (<property_name>[, <property_name>...]), ...];","title":"nGQL\u8bed\u6cd5"},{"location":"2.quick-start/4.nebula-graph-crud/#_8","text":"\u63d2\u5165\u4ee3\u8868NBA\u7403\u5458\u548c\u7403\u961f\u7684\u70b9\u3002 nebula> INSERT VERTEX player(name, age) VALUES \"player100\":(\"Tim Duncan\", 42); Execution succeeded (time spent 28196/30896 us) Wed, 24 Feb 2021 03:55:08 EST nebula> INSERT VERTEX player(name, age) VALUES \"player101\":(\"Tony Parker\", 36); Execution succeeded (time spent 2708/3834 us) Wed, 24 Feb 2021 03:55:20 EST nebula> INSERT VERTEX player(name, age) VALUES \"player102\":(\"LaMarcus Aldridge\", 33); Execution succeeded (time spent 1945/3294 us) Wed, 24 Feb 2021 03:55:32 EST nebula> INSERT VERTEX team(name) VALUES \"team200\":(\"Warriors\"), \"team201\":(\"Nuggets\"); Execution succeeded (time spent 2269/3310 us) Wed, 24 Feb 2021 03:55:47 EST \u63d2\u5165\u4ee3\u8868NBA\u7403\u5458\u548c\u7403\u961f\u4e4b\u95f4\u5173\u7cfb\u7684\u8fb9\u3002 nebula> INSERT EDGE follow(degree) VALUES \"player100\" -> \"player101\":(95); Execution succeeded (time spent 3362/4542 us) Wed, 24 Feb 2021 03:57:36 EST nebula> INSERT EDGE follow(degree) VALUES \"player100\" -> \"player102\":(90); Execution succeeded (time spent 2974/4274 us) Wed, 24 Feb 2021 03:57:44 EST nebula> INSERT EDGE follow(degree) VALUES \"player102\" -> \"player101\":(75); Execution succeeded (time spent 1891/3096 us) Wed, 24 Feb 2021 03:57:52 EST nebula> INSERT EDGE serve(start_year, end_year) VALUES \"player100\" -> \"team200\":(1997, 2016), \"player101\" -> \"team201\":(1999, 2018); Execution succeeded (time spent 6064/7104 us) Wed, 24 Feb 2021 03:58:01 EST","title":"\u793a\u4f8b"},{"location":"2.quick-start/4.nebula-graph-crud/#_9","text":"GO \u8bed\u53e5\u53ef\u4ee5\u6839\u636e\u6307\u5b9a\u7684\u6761\u4ef6\u904d\u5386\u6570\u636e\u5e93\u3002 GO \u8bed\u53e5\u4ece\u4e00\u4e2a\u6216\u591a\u4e2a\u70b9\u5f00\u59cb\uff0c\u6cbf\u7740\u4e00\u6761\u6216\u591a\u6761\u8fb9\u904d\u5386\uff0c\u8fd4\u56de YIELD \u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u4fe1\u606f\u3002 FETCH \u8bed\u53e5\u53ef\u4ee5\u83b7\u5f97\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 LOOKUP \u8bed\u53e5\u662f\u57fa\u4e8e \u7d22\u5f15 \u7684\uff0c\u548c WHERE \u5b50\u53e5\u4e00\u8d77\u4f7f\u7528\uff0c\u67e5\u627e\u7b26\u5408\u7279\u5b9a\u6761\u4ef6\u7684\u6570\u636e\u3002 MATCH \u8bed\u53e5\u662f\u67e5\u8be2\u56fe\u6570\u636e\u6700\u5e38\u7528\u7684\uff0c\u4f46\u662f\u5b83\u4f9d\u8d56 \u7d22\u5f15 \u53bb\u5339\u914dNebula Graph\u4e2d\u7684\u6570\u636e\u6a21\u578b\u3002","title":"\u67e5\u8be2\u6570\u636e"},{"location":"2.quick-start/4.nebula-graph-crud/#ngql_3","text":"GO GO [[<M> TO] <N> STEPS ] FROM <vertex_list> OVER <edge_type_list> [REVERSELY] [BIDIRECT] [WHERE <expression> [AND | OR expression ...])] YIELD [DISTINCT] <return_list>; FETCH \u67e5\u8be2\u6807\u7b7e\u5c5e\u6027 FETCH PROP ON {<tag_name> | <tag_name_list> | *} <vid_list> [YIELD [DISTINCT] <return_list>]; \u67e5\u8be2\u8fb9\u5c5e\u6027 FETCH PROP ON <edge_type> <src_vid> -> <dst_vid>[@<rank>] [, <src_vid> -> <dst_vid> ...] [YIELD [DISTINCT] <return_list>]; LOOKUP LOOKUP ON {<tag_name> | <edge_type>} WHERE <expression> [AND expression ...])] [YIELD <return_list>]; MATCH MATCH <pattern> [<WHERE clause>] RETURN <output>;","title":"nGQL\u8bed\u6cd5"},{"location":"2.quick-start/4.nebula-graph-crud/#go","text":"\u4eceVID\u4e3a player100 \u7684\u7403\u5458\u5f00\u59cb\uff0c\u6cbf\u7740\u8fb9 follow \u627e\u5230\u8fde\u63a5\u7684\u7403\u5458\u3002 nebula> GO FROM \"player100\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ Got 2 rows (time spent 12097/14220 us) \u4eceVID\u4e3a player100 \u7684\u7403\u5458\u5f00\u59cb\uff0c\u6cbf\u7740\u8fb9 follow \u67e5\u627e\u5e74\u9f84\u5927\u4e8e\u6216\u7b49\u4e8e35\u5c81\u7684\u7403\u5458\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u59d3\u540d\u548c\u5e74\u9f84\uff0c\u540c\u65f6\u91cd\u547d\u540d\u5bf9\u5e94\u7684\u5217\u3002 nebula> GO FROM \"player100\" OVER follow WHERE $$.player.age >= 35 \\ -> YIELD $$.player.name AS Teammate, $$.player.age AS Age; +---------------+-----+ | Teammate | Age | +---------------+-----+ | \"Tony Parker\" | 36 | +---------------+-----+ Got 1 rows (time spent 8206/9335 us) \u5b50\u53e5/\u7b26\u53f7 \u8bf4\u660e YIELD \u6307\u5b9a\u8be5\u67e5\u8be2\u9700\u8981\u8fd4\u56de\u7684\u503c\u6216\u7ed3\u679c\u3002 $$ \u8868\u793a\u8fb9\u7684\u7ec8\u70b9\u3002 \\ \u8868\u793a\u6362\u884c\u7ee7\u7eed\u8f93\u5165\u3002 \u4eceVID\u4e3a player100 \u7684\u7403\u5458\u5f00\u59cb\uff0c\u6cbf\u7740\u8fb9 follow \u67e5\u627e\u8fde\u63a5\u7684\u7403\u5458\uff0c\u7136\u540e\u68c0\u7d22\u8fd9\u4e9b\u7403\u5458\u7684\u7403\u961f\u3002\u4e3a\u4e86\u5408\u5e76\u8fd9\u4e24\u4e2a\u67e5\u8be2\u8bf7\u6c42\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ba1\u9053\u7b26\u6216\u4e34\u65f6\u53d8\u91cf\u3002 \u4f7f\u7528\u7ba1\u9053\u7b26 nebula> GO FROM \"player100\" OVER follow YIELD follow._dst AS id | \\ GO FROM $-.id OVER serve YIELD $$.team.name AS Team, \\ $^.player.name AS Player; +-----------+---------------+ | Team | Player | +-----------+---------------+ | \"Nuggets\" | \"Tony Parker\" | +-----------+---------------+ Got 1 rows (time spent 5055/8203 us) \u5b50\u53e5/\u7b26\u53f7 \u8bf4\u660e $^ \u8868\u793a\u8fb9\u7684\u8d77\u70b9\u3002 \\| \u7ec4\u5408\u591a\u4e2a\u67e5\u8be2\u7684\u7ba1\u9053\u7b26\uff0c\u5c06\u524d\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u7528\u4e8e\u540e\u4e00\u4e2a\u67e5\u8be2\u3002 $- \u8868\u793a\u7ba1\u9053\u7b26\u524d\u9762\u7684\u67e5\u8be2\u8f93\u51fa\u7684\u7ed3\u679c\u96c6\u3002 \u4f7f\u7528\u4e34\u65f6\u53d8\u91cf \u8bf4\u660e \uff1a\u5f53\u590d\u5408\u8bed\u53e5\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\u65f6\uff0c\u5176\u4e2d\u7684\u4e34\u65f6\u53d8\u91cf\u4f1a\u5728\u8bed\u53e5\u7ed3\u675f\u65f6\u88ab\u91ca\u653e\u3002 ngql nebula> $var = GO FROM \"player100\" OVER follow YIELD follow._dst AS id; \\ GO FROM $var.id OVER serve YIELD $$.team.name AS Team, \\ $^.player.name AS Player; +---------+-------------+ | Team | Player | +---------+-------------+ | Nuggets | Tony Parker | +---------+-------------+ Got 1 rows (time spent 3103/3711 us)","title":"GO\u8bed\u53e5\u793a\u4f8b"},{"location":"2.quick-start/4.nebula-graph-crud/#fetch","text":"\u67e5\u8be2VID\u4e3a player100 \u7684\u7403\u5458\u7684\u5c5e\u6027\u3002 nebula> FETCH PROP ON player \"player100\"; +----------------------------------------------------+ | vertices_ | +----------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------+ Got 1 rows (time spent 2006/2406 us) \u8bf4\u660e \uff1a LOOKUP \u548c MATCH \u7684\u793a\u4f8b\u5728\u4e0b\u6587\u7684 \u7d22\u5f15 \u90e8\u5206\u67e5\u770b\u3002","title":"FETCH\u8bed\u53e5\u793a\u4f8b"},{"location":"2.quick-start/4.nebula-graph-crud/#_10","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528 UPDATE \u8bed\u53e5\u6216 UPSERT \u8bed\u53e5\u4fee\u6539\u73b0\u6709\u6570\u636e\u3002 UPSERT \u662f UPDATE \u548c INSERT \u7684\u7ed3\u5408\u4f53\u3002\u5f53\u60a8\u4f7f\u7528 UPSERT \u66f4\u65b0\u4e00\u4e2a\u70b9\u6216\u8fb9\uff0c\u5982\u679c\u5b83\u4e0d\u5b58\u5728\uff0c\u6570\u636e\u5e93\u4f1a\u81ea\u52a8\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u70b9\u6216\u8fb9\u3002 \u8bf4\u660e \uff1a UPSERT \u64cd\u4f5c\u662f\u57fa\u4e8eNebula Graph\u7684\u5206\u533a\u8fdb\u884c\u4e32\u884c\u64cd\u4f5c\uff0c\u6240\u4ee5\u6267\u884c\u901f\u5ea6\u6bd4\u5355\u72ec\u6267\u884c INSERT \u6216 UPDATE \u6162\u3002","title":"\u4fee\u6539\u70b9\u548c\u8fb9"},{"location":"2.quick-start/4.nebula-graph-crud/#ngql_4","text":"UPDATE \u70b9 UPDATE VERTEX <vid> SET <properties to be updated> [WHEN <condition>] [YIELD <columns>]; UPDATE \u8fb9 UPDATE EDGE <source vid> -> <destination vid> [@rank] OF <edge_type> SET <properties to be updated> [WHEN <condition>] [YIELD <columns to be output>]; UPSERT \u70b9\u6216\u8fb9 UPSERT {VERTEX <vid> | EDGE <edge_type>} SET <update_columns> [WHEN <condition>] [YIELD <columns>];","title":"nGQL\u8bed\u6cd5"},{"location":"2.quick-start/4.nebula-graph-crud/#_11","text":"\u7528 UPDATE \u4fee\u6539VID\u4e3a player100 \u7684\u7403\u5458\u7684 name \u5c5e\u6027\uff0c\u7136\u540e\u7528 FETCH \u8bed\u53e5\u68c0\u67e5\u7ed3\u679c\u3002 ```ngql nebula> UPDATE VERTEX \"player100\" SET player.name = \"Tim\"; Execution succeeded (time spent 3483/3914 us) Wed, 21 Oct 2020 10:53:14 UTC nebula> FETCH PROP ON player \"player100\"; +---------------------------------------------+ | vertices_ | +---------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim\"}) | +---------------------------------------------+ Got 1 rows (time spent 2463/3042 us) ``` \u7528 UPDATE \u4fee\u6539\u67d0\u6761\u8fb9\u7684 degree \u5c5e\u6027\uff0c\u7136\u540e\u7528 FETCH \u68c0\u67e5\u7ed3\u679c\u3002 nebula> UPDATE EDGE \"player100\" -> \"player101\" OF follow SET degree = 96; Execution succeeded (time spent 3932/4432 us) nebula> FETCH PROP ON follow \"player100\" -> \"player101\"; +----------------------------------------------------+ | edges_ | +----------------------------------------------------+ | [:follow \"player100\"->\"player101\" @0 {degree: 96}] | +----------------------------------------------------+ Got 1 rows (time spent 2205/2800 us) \u7528 UPSERT \u63d2\u5165\u4e00\u4e2aVID\u4e3a player111 \u7684\u70b9\u3002 nebula> INSERT VERTEX player(name, age) VALUES \"player111\":(\"Ben Simmons\", 22); Execution succeeded (time spent 2115/2900 us) Wed, 21 Oct 2020 11:11:50 UTC nebula> UPSERT VERTEX \"player111\" SET player.name = \"Dwight Howard\", player.age = $^.player.age + 11 \\ WHEN $^.player.name == \"Ben Simmons\" AND $^.player.age > 20 \\ YIELD $^.player.name AS Name, $^.player.age AS Age; +---------------+-----+ | Name | Age | +---------------+-----+ | Dwight Howard | 33 | +---------------+-----+ Got 1 rows (time spent 1815/2329 us)","title":"\u793a\u4f8b"},{"location":"2.quick-start/4.nebula-graph-crud/#_12","text":"","title":"\u5220\u9664\u70b9\u548c\u8fb9"},{"location":"2.quick-start/4.nebula-graph-crud/#ngql_5","text":"\u5220\u9664\u70b9 DELETE VERTEX <vid1>[, <vid2>...] \u5220\u9664\u8fb9 DELETE EDGE <edge_type> <src_vid> -> <dst_vid>[@<rank>] [, <src_vid> -> <dst_vid>...]","title":"nGQL\u8bed\u6cd5"},{"location":"2.quick-start/4.nebula-graph-crud/#_13","text":"\u5220\u9664\u70b9 nebula> DELETE VERTEX \"team1\", \"team2\"; Execution succeeded (time spent 4337/4782 us) \u5220\u9664\u8fb9 nebula> DELETE EDGE follow \"team1\" -> \"team2\"; Execution succeeded (time spent 3700/4101 us)","title":"\u793a\u4f8b"},{"location":"2.quick-start/4.nebula-graph-crud/#_14","text":"\u60a8\u53ef\u4ee5\u901a\u8fc7 CREATE INDEX \u8bed\u53e5\u4e3a\u6807\u7b7e\uff08tag\uff09\u548c\u8fb9\u7c7b\u578b\uff08edge type\uff09\u589e\u52a0\u7d22\u5f15\u3002","title":"\u7d22\u5f15"},{"location":"2.quick-start/4.nebula-graph-crud/#_15","text":"MATCH \u548c LOOKUP \u8bed\u53e5\u7684\u6267\u884c\u90fd\u4f9d\u8d56\u7d22\u5f15\uff0c\u4f46\u662f\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5199\u6027\u80fd\u5927\u5e45\u964d\u4f4e\uff08\u964d\u4f4e90%\u751a\u81f3\u66f4\u591a\uff09\u3002\u8bf7 \u4e0d\u8981\u968f\u610f \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u7d22\u5f15\uff0c\u9664\u975e\u60a8\u5f88\u6e05\u695a\u4f7f\u7528\u7d22\u5f15\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002 \u60a8 \u5fc5\u987b \u4e3a\u5df2\u5b58\u5728\u7684\u6570\u636e\u91cd\u5efa\u7d22\u5f15\uff0c\u5426\u5219\u4e0d\u80fd\u7d22\u5f15\u5df2\u5b58\u5728\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u65e0\u6cd5\u5728 MATCH \u548c LOOKUP \u8bed\u53e5\u4e2d\u8fd4\u56de\u8fd9\u4e9b\u6570\u636e\u3002\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 \u91cd\u5efa\u7d22\u5f15 \u3002","title":"\u4f7f\u7528\u7d22\u5f15\u5fc5\u8bfb"},{"location":"2.quick-start/4.nebula-graph-crud/#ngql_6","text":"\u521b\u5efa\u7d22\u5f15 CREATE {TAG | EDGE} INDEX [IF NOT EXISTS] <index_name> ON {<tag_name> | <edge_name>} (prop_name_list); \u91cd\u5efa\u7d22\u5f15 REBUILD {TAG | EDGE} INDEX <index_name>;","title":"nGQL\u8bed\u6cd5"},{"location":"2.quick-start/4.nebula-graph-crud/#_16","text":"\u4e3a\u6807\u7b7e player \u7684\u5c5e\u6027 name \u521b\u5efa\u7d22\u5f15\uff0c\u5e76\u4e14\u91cd\u5efa\u7d22\u5f15\u3002 nebula> CREATE TAG INDEX player_index_0 on player(name(20)); nebula> REBUILD TAG INDEX player_index_0; \u8bf4\u660e \uff1a\u4e3a\u6ca1\u6709\u6307\u5b9a\u957f\u5ea6\u7684\u53d8\u91cf\u5c5e\u6027\u521b\u5efa\u7d22\u5f15\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u7d22\u5f15\u957f\u5ea6\u3002\u5728utf-8\u7f16\u7801\u4e2d\uff0c\u4e00\u4e2a\u4e2d\u6587\u5b57\u7b26\u53603\u5b57\u8282\uff0c\u8bf7\u6839\u636e\u53d8\u91cf\u5c5e\u6027\u957f\u5ea6\u8bbe\u7f6e\u5408\u9002\u7684\u7d22\u5f15\u957f\u5ea6\u3002\u4f8b\u598210\u4e2a\u4e2d\u6587\u5b57\u7b26\uff0c\u7d22\u5f15\u957f\u5ea6\u9700\u8981\u4e3a30\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u521b\u5efa\u7d22\u5f15 \u3002","title":"\u793a\u4f8b"},{"location":"2.quick-start/4.nebula-graph-crud/#lookupmatch","text":"\u786e\u4fdd LOOKUP \u6216 MATCH \u6709\u4e00\u4e2a\u7d22\u5f15\u53ef\u7528\u3002\u5982\u679c\u6ca1\u6709\uff0c\u8bf7\u5148\u521b\u5efa\u7d22\u5f15\u3002 \u627e\u5230\u6807\u7b7e\u4e3a player \u7684\u70b9\u7684\u4fe1\u606f\uff0c\u5b83\u7684 name \u5c5e\u6027\u503c\u4e3a Tony Parker \u3002 // \u4e3aname\u5c5e\u6027\u521b\u5efa\u7d22\u5f15player_name_0\u3002 nebula> CREATE TAG INDEX player_name_0 on player(name(10)); Execution succeeded (time spent 3465/4150 us) // \u91cd\u5efa\u7d22\u5f15\u786e\u4fdd\u80fd\u5bf9\u5df2\u5b58\u5728\u6570\u636e\u751f\u6548\u3002 nebula> REBUILD TAG INDEX player_name_0 +------------+ | New Job Id | +------------+ | 31 | +------------+ Got 1 rows (time spent 2379/3033 us) // \u4f7f\u7528LOOKUP\u8bed\u53e5\u68c0\u7d22\u70b9\u7684\u5c5e\u6027\u3002 nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\" \\ YIELD player.name, player.age; +-------------+---------------+------------+ | VertexID | player.name | player.age | +-------------+---------------+------------+ | \"player101\" | \"Tony Parker\" | 36 | +-------------+---------------+------------+ // \u4f7f\u7528MATCH\u8bed\u53e5\u68c0\u7d22\u70b9\u7684\u5c5e\u6027\u3002 nebula> MATCH (v:player{name:\"Tony Parker\"}) RETURN v; +-----------------------------------------------------+ | v | +-----------------------------------------------------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +-----------------------------------------------------+ Got 1 rows (time spent 5132/6246 us)","title":"\u57fa\u4e8e\u7d22\u5f15\u7684LOOKUP\u548cMATCH\u793a\u4f8b"},{"location":"2.quick-start/5.start-stop-service/","text":"\u7ba1\u7406Nebula Graph\u670d\u52a1 \u00b6 Nebula Graph\u4f7f\u7528\u811a\u672c nebula.service \u7ba1\u7406\u670d\u52a1\uff0c\u5305\u62ec\u542f\u52a8\u3001\u505c\u6b62\u3001\u91cd\u542f\u3001\u4e2d\u6b62\u548c\u67e5\u770b\u3002 nebula.service \u7684\u9ed8\u8ba4\u8def\u5f84\u662f /usr/local/nebula/scripts \uff0c\u5982\u679c\u4fee\u6539\u8fc7\u5b89\u88c5\u8def\u5f84\uff0c\u8bf7\u4f7f\u7528\u5b9e\u9645\u8def\u5f84\u3002 \u8bed\u6cd5 \u00b6 $ sudo /usr/local/nebula/scripts/nebula.service [ -v ] [ -c <config_file_path> ] <start | stop | restart | kill | status> <metad | graphd | storaged | all> \u53c2\u6570 \u8bf4\u660e -v \u663e\u793a\u8be6\u7ec6\u8c03\u8bd5\u4fe1\u606f\u3002 -c \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u9ed8\u8ba4\u8def\u5f84\u4e3a /usr/local/nebula/etc/ \u3002 start \u542f\u52a8\u670d\u52a1\u3002 stop \u505c\u6b62\u670d\u52a1\u3002 restart \u91cd\u542f\u670d\u52a1\u3002 kill \u4e2d\u6b62\u670d\u52a1\u3002 status \u67e5\u770b\u670d\u52a1\u72b6\u6001\u3002 metad \u7ba1\u7406Meta\u670d\u52a1\u3002 graphd \u7ba1\u7406Graph\u670d\u52a1\u3002 storaged \u7ba1\u7406Storage\u670d\u52a1\u3002 all \u7ba1\u7406\u6240\u6709\u670d\u52a1\u3002 \u542f\u52a8Nebula Graph\u670d\u52a1 \u00b6 \u975e\u5bb9\u5668\u90e8\u7f72 \u00b6 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u542f\u52a8Nebula Graph\u670d\u52a1\uff1a $ sudo /usr/local/nebula/scripts/nebula.service start all [ INFO ] Starting nebula-metad... [ INFO ] Done [ INFO ] Starting nebula-graphd... [ INFO ] Done [ INFO ] Starting nebula-storaged... [ INFO ] Done \u5bb9\u5668\u90e8\u7f72 \u00b6 \u5728 nebula-docker-compose/ \u76ee\u5f55\u5185\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u542f\u52a8Nebula Graph\u670d\u52a1\uff1a nebula-docker-compose ] $ docker-compose up -d Building with native build. Learn about native build in Compose here: https://docs.docker.com/go/compose-native-build/ Creating network \"nebula-docker-compose_nebula-net\" with the default driver Creating nebula-docker-compose_metad0_1 ... done Creating nebula-docker-compose_metad2_1 ... done Creating nebula-docker-compose_metad1_1 ... done Creating nebula-docker-compose_storaged2_1 ... done Creating nebula-docker-compose_graphd1_1 ... done Creating nebula-docker-compose_storaged1_1 ... done Creating nebula-docker-compose_storaged0_1 ... done Creating nebula-docker-compose_graphd2_1 ... done Creating nebula-docker-compose_graphd_1 ... done \u505c\u6b62Nebula Graph\u670d\u52a1 \u00b6 \u7981\u6b62 \uff1a\u8bf7\u52ff\u4f7f\u7528 kill -9 \u547d\u4ee4\u5f3a\u5236\u7ec8\u6b62\u8fdb\u7a0b\uff0c\u5426\u5219\u53ef\u80fd\u8f83\u5c0f\u6982\u7387\u51fa\u73b0\u6570\u636e\u4e22\u5931\u3002 \u975e\u5bb9\u5668\u90e8\u7f72 \u00b6 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u505c\u6b62Nebula Graph\u670d\u52a1\uff1a $ sudo /usr/local/nebula/scripts/nebula.service stop all [ INFO ] Stopping nebula-metad... [ INFO ] Done [ INFO ] Stopping nebula-graphd... [ INFO ] Done [ INFO ] Stopping nebula-storaged... [ INFO ] Done \u5bb9\u5668\u90e8\u7f72 \u00b6 \u5728 nebula-docker-compose/ \u76ee\u5f55\u5185\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u505c\u6b62Nebula Graph\u670d\u52a1\uff1a nebula-docker-compose ] $ docker-compose down Stopping nebula-docker-compose_graphd_1 ... done Stopping nebula-docker-compose_graphd2_1 ... done Stopping nebula-docker-compose_storaged0_1 ... done Stopping nebula-docker-compose_storaged1_1 ... done Stopping nebula-docker-compose_graphd1_1 ... done Stopping nebula-docker-compose_storaged2_1 ... done Stopping nebula-docker-compose_metad1_1 ... done Stopping nebula-docker-compose_metad2_1 ... done Stopping nebula-docker-compose_metad0_1 ... done Removing nebula-docker-compose_graphd_1 ... done Removing nebula-docker-compose_graphd2_1 ... done Removing nebula-docker-compose_storaged0_1 ... done Removing nebula-docker-compose_storaged1_1 ... done Removing nebula-docker-compose_graphd1_1 ... done Removing nebula-docker-compose_storaged2_1 ... done Removing nebula-docker-compose_metad1_1 ... done Removing nebula-docker-compose_metad2_1 ... done Removing nebula-docker-compose_metad0_1 ... done Removing network nebula-docker-compose_nebula-net \u8bf4\u660e \uff1a\u547d\u4ee4 docker-compose down -v \u5c06\u4f1a \u5220\u9664 \u6240\u6709\u672c\u5730Nebula Graph\u7684\u6570\u636e\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fdeveloping\u6216nightly\u7248\u672c\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u8fd9\u4e2a\u547d\u4ee4\u3002 \u67e5\u770bNebula Graph\u670d\u52a1 \u00b6 \u975e\u5bb9\u5668\u90e8\u7f72 \u00b6 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u67e5\u770bNebula Graph\u670d\u52a1\u72b6\u6001\uff1a $ sudo /usr/local/nebula/scripts/nebula.service status all \u5982\u679c\u8fd4\u56de\u5982\u4e0b\u7ed3\u679c\uff0c\u8868\u793aNebula Graph\u670d\u52a1\u6b63\u5e38\u8fd0\u884c\u3002 [ INFO ] nebula-metad: Running as 26601 , Listening on 9559 [ INFO ] nebula-graphd: Running as 26644 , Listening on 9669 [ INFO ] nebula-storaged: Running as 26709 , Listening on 9779 \u5982\u679c\u8fd4\u56de\u7c7b\u4f3c\u5982\u4e0b\u7ed3\u679c\uff0c\u8868\u793aNebula Graph\u670d\u52a1\u5f02\u5e38\uff0c\u53ef\u4ee5\u6839\u636e\u5f02\u5e38\u670d\u52a1\u4fe1\u606f\u8fdb\u4e00\u6b65\u6392\u67e5\uff0c\u6216\u8005\u5728 Nebula Graph\u793e\u533a \u5bfb\u6c42\u5e2e\u52a9\u3002 [ INFO ] nebula-metad: Running as 25600 , Listening on 9559 [ INFO ] nebula-graphd: Exited [ INFO ] nebula-storaged: Running as 25646 , Listening on 9779 Nebula Graph\u670d\u52a1\u7531Meta\u670d\u52a1\u3001Graph\u670d\u52a1\u548cStorage\u670d\u52a1\u5171\u540c\u63d0\u4f9b\uff0c\u8fd9\u4e09\u79cd\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u90fd\u4fdd\u5b58\u5728\u5b89\u88c5\u76ee\u5f55\u7684 etc \u76ee\u5f55\u5185\uff0c\u9ed8\u8ba4\u8def\u5f84\u4e3a /usr/local/nebula/etc/ \uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u6392\u67e5\u95ee\u9898\u3002 \u5bb9\u5668\u90e8\u7f72 \u00b6 \u5728 nebula-docker-compose \u76ee\u5f55\u5185\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u67e5\u770bNebula Graph\u670d\u52a1\u72b6\u6001\uff1a nebula-docker-compose ] $ docker-compose ps Name Command State Ports --------------------------------------------------------------------------------------------------------------------------------------------------------------------- nebula-docker-compose_graphd1_1 /usr/local/nebula/bin/nebu ... Up ( healthy ) 0 .0.0.0:49223->19669/tcp, 0 .0.0.0:49222->19670/tcp, 0 .0.0.0:49224->9669/tcp nebula-docker-compose_graphd2_1 /usr/local/nebula/bin/nebu ... Up ( healthy ) 0 .0.0.0:49229->19669/tcp, 0 .0.0.0:49228->19670/tcp, 0 .0.0.0:49230->9669/tcp nebula-docker-compose_graphd_1 /usr/local/nebula/bin/nebu ... Up ( healthy ) 0 .0.0.0:49221->19669/tcp, 0 .0.0.0:49220->19670/tcp, 0 .0.0.0:9669->9669/tcp nebula-docker-compose_metad0_1 ./bin/nebula-metad --flagf ... Up ( healthy ) 0 .0.0.0:49212->19559/tcp, 0 .0.0.0:49211->19560/tcp, 0 .0.0.0:49213->9559/tcp, 9560 /tcp nebula-docker-compose_metad1_1 ./bin/nebula-metad --flagf ... Up ( healthy ) 0 .0.0.0:49209->19559/tcp, 0 .0.0.0:49208->19560/tcp, 0 .0.0.0:49210->9559/tcp, 9560 /tcp nebula-docker-compose_metad2_1 ./bin/nebula-metad --flagf ... Up ( healthy ) 0 .0.0.0:49206->19559/tcp, 0 .0.0.0:49205->19560/tcp, 0 .0.0.0:49207->9559/tcp, 9560 /tcp nebula-docker-compose_storaged0_1 ./bin/nebula-storaged --fl ... Up ( healthy ) 0 .0.0.0:49218->19779/tcp, 0 .0.0.0:49217->19780/tcp, 9777 /tcp, 9778 /tcp, 0 .0.0.0:49219->9779/tcp, 9780 /tcp nebula-docker-compose_storaged1_1 ./bin/nebula-storaged --fl ... Up ( healthy ) 0 .0.0.0:49215->19779/tcp, 0 .0.0.0:49214->19780/tcp, 9777 /tcp, 9778 /tcp, 0 .0.0.0:49216->9779/tcp, 9780 /tcp nebula-docker-compose_storaged2_1 ./bin/nebula-storaged --fl ... Up ( healthy ) 0 .0.0.0:49226->19779/tcp, 0 .0.0.0:49225->19780/tcp, 9777 /tcp, 9778 /tcp, 0 .0.0.0:49227->9779/tcp, 9780 /tcp \u5982\u679c\u670d\u52a1\u6709\u5f02\u5e38\uff0c\u60a8\u53ef\u4ee5\u5148\u786e\u8ba4\u5f02\u5e38\u7684\u5bb9\u5668\u540d\u79f0\uff08\u4f8b\u5982 nebula-docker-compose_graphd2_1 \uff09\uff0c\u7136\u540e\u6267\u884c docker ps \u67e5\u770b\u5bf9\u5e94\u7684 CONTAINER ID (\u793a\u4f8b\u4e3a 2a6c56c405f5 )\uff0c\u6700\u540e\u767b\u5f55\u5bb9\u5668\u6392\u67e5\u95ee\u9898\u3002 nebula-docker-compose ] $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2a6c56c405f5 vesoft/nebula-graphd:v2-nightly \"/usr/local/nebula/b\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 0 .0.0.0:49230->9669/tcp, 0 .0.0.0:49229->19669/tcp, 0 .0.0.0:49228->19670/tcp nebula-docker-compose_graphd2_1 7042e0a8e83d vesoft/nebula-storaged:v2-nightly \"./bin/nebula-storag\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9777 -9778/tcp, 9780 /tcp, 0 .0.0.0:49227->9779/tcp, 0 .0.0.0:49226->19779/tcp, 0 .0.0.0:49225->19780/tcp nebula-docker-compose_storaged2_1 18e3ea63ad65 vesoft/nebula-storaged:v2-nightly \"./bin/nebula-storag\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9777 -9778/tcp, 9780 /tcp, 0 .0.0.0:49219->9779/tcp, 0 .0.0.0:49218->19779/tcp, 0 .0.0.0:49217->19780/tcp nebula-docker-compose_storaged0_1 4dcabfe8677a vesoft/nebula-graphd:v2-nightly \"/usr/local/nebula/b\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 0 .0.0.0:49224->9669/tcp, 0 .0.0.0:49223->19669/tcp, 0 .0.0.0:49222->19670/tcp nebula-docker-compose_graphd1_1 a74054c6ae25 vesoft/nebula-graphd:v2-nightly \"/usr/local/nebula/b\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 0 .0.0.0:9669->9669/tcp, 0 .0.0.0:49221->19669/tcp, 0 .0.0.0:49220->19670/tcp nebula-docker-compose_graphd_1 880025a3858c vesoft/nebula-storaged:v2-nightly \"./bin/nebula-storag\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9777 -9778/tcp, 9780 /tcp, 0 .0.0.0:49216->9779/tcp, 0 .0.0.0:49215->19779/tcp, 0 .0.0.0:49214->19780/tcp nebula-docker-compose_storaged1_1 45736a32a23a vesoft/nebula-metad:v2-nightly \"./bin/nebula-metad \u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9560 /tcp, 0 .0.0.0:49213->9559/tcp, 0 .0.0.0:49212->19559/tcp, 0 .0.0.0:49211->19560/tcp nebula-docker-compose_metad0_1 3b2c90eb073e vesoft/nebula-metad:v2-nightly \"./bin/nebula-metad \u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9560 /tcp, 0 .0.0.0:49207->9559/tcp, 0 .0.0.0:49206->19559/tcp, 0 .0.0.0:49205->19560/tcp nebula-docker-compose_metad2_1 7bb31b7a5b3f vesoft/nebula-metad:v2-nightly \"./bin/nebula-metad \u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9560 /tcp, 0 .0.0.0:49210->9559/tcp, 0 .0.0.0:49209->19559/tcp, 0 .0.0.0:49208->19560/tcp nebula-docker-compose_metad1_1 nebula-docker-compose ] $ docker exec -it 2a6c56c405f5 bash [ root@2a6c56c405f5 nebula ] #","title":"Manage Nebula Graph services"},{"location":"2.quick-start/5.start-stop-service/#nebula_graph","text":"Nebula Graph\u4f7f\u7528\u811a\u672c nebula.service \u7ba1\u7406\u670d\u52a1\uff0c\u5305\u62ec\u542f\u52a8\u3001\u505c\u6b62\u3001\u91cd\u542f\u3001\u4e2d\u6b62\u548c\u67e5\u770b\u3002 nebula.service \u7684\u9ed8\u8ba4\u8def\u5f84\u662f /usr/local/nebula/scripts \uff0c\u5982\u679c\u4fee\u6539\u8fc7\u5b89\u88c5\u8def\u5f84\uff0c\u8bf7\u4f7f\u7528\u5b9e\u9645\u8def\u5f84\u3002","title":"\u7ba1\u7406Nebula Graph\u670d\u52a1"},{"location":"2.quick-start/5.start-stop-service/#_1","text":"$ sudo /usr/local/nebula/scripts/nebula.service [ -v ] [ -c <config_file_path> ] <start | stop | restart | kill | status> <metad | graphd | storaged | all> \u53c2\u6570 \u8bf4\u660e -v \u663e\u793a\u8be6\u7ec6\u8c03\u8bd5\u4fe1\u606f\u3002 -c \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u9ed8\u8ba4\u8def\u5f84\u4e3a /usr/local/nebula/etc/ \u3002 start \u542f\u52a8\u670d\u52a1\u3002 stop \u505c\u6b62\u670d\u52a1\u3002 restart \u91cd\u542f\u670d\u52a1\u3002 kill \u4e2d\u6b62\u670d\u52a1\u3002 status \u67e5\u770b\u670d\u52a1\u72b6\u6001\u3002 metad \u7ba1\u7406Meta\u670d\u52a1\u3002 graphd \u7ba1\u7406Graph\u670d\u52a1\u3002 storaged \u7ba1\u7406Storage\u670d\u52a1\u3002 all \u7ba1\u7406\u6240\u6709\u670d\u52a1\u3002","title":"\u8bed\u6cd5"},{"location":"2.quick-start/5.start-stop-service/#nebula_graph_1","text":"","title":"\u542f\u52a8Nebula Graph\u670d\u52a1"},{"location":"2.quick-start/5.start-stop-service/#_2","text":"\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u542f\u52a8Nebula Graph\u670d\u52a1\uff1a $ sudo /usr/local/nebula/scripts/nebula.service start all [ INFO ] Starting nebula-metad... [ INFO ] Done [ INFO ] Starting nebula-graphd... [ INFO ] Done [ INFO ] Starting nebula-storaged... [ INFO ] Done","title":"\u975e\u5bb9\u5668\u90e8\u7f72"},{"location":"2.quick-start/5.start-stop-service/#_3","text":"\u5728 nebula-docker-compose/ \u76ee\u5f55\u5185\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u542f\u52a8Nebula Graph\u670d\u52a1\uff1a nebula-docker-compose ] $ docker-compose up -d Building with native build. Learn about native build in Compose here: https://docs.docker.com/go/compose-native-build/ Creating network \"nebula-docker-compose_nebula-net\" with the default driver Creating nebula-docker-compose_metad0_1 ... done Creating nebula-docker-compose_metad2_1 ... done Creating nebula-docker-compose_metad1_1 ... done Creating nebula-docker-compose_storaged2_1 ... done Creating nebula-docker-compose_graphd1_1 ... done Creating nebula-docker-compose_storaged1_1 ... done Creating nebula-docker-compose_storaged0_1 ... done Creating nebula-docker-compose_graphd2_1 ... done Creating nebula-docker-compose_graphd_1 ... done","title":"\u5bb9\u5668\u90e8\u7f72"},{"location":"2.quick-start/5.start-stop-service/#nebula_graph_2","text":"\u7981\u6b62 \uff1a\u8bf7\u52ff\u4f7f\u7528 kill -9 \u547d\u4ee4\u5f3a\u5236\u7ec8\u6b62\u8fdb\u7a0b\uff0c\u5426\u5219\u53ef\u80fd\u8f83\u5c0f\u6982\u7387\u51fa\u73b0\u6570\u636e\u4e22\u5931\u3002","title":"\u505c\u6b62Nebula Graph\u670d\u52a1"},{"location":"2.quick-start/5.start-stop-service/#_4","text":"\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u505c\u6b62Nebula Graph\u670d\u52a1\uff1a $ sudo /usr/local/nebula/scripts/nebula.service stop all [ INFO ] Stopping nebula-metad... [ INFO ] Done [ INFO ] Stopping nebula-graphd... [ INFO ] Done [ INFO ] Stopping nebula-storaged... [ INFO ] Done","title":"\u975e\u5bb9\u5668\u90e8\u7f72"},{"location":"2.quick-start/5.start-stop-service/#_5","text":"\u5728 nebula-docker-compose/ \u76ee\u5f55\u5185\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u505c\u6b62Nebula Graph\u670d\u52a1\uff1a nebula-docker-compose ] $ docker-compose down Stopping nebula-docker-compose_graphd_1 ... done Stopping nebula-docker-compose_graphd2_1 ... done Stopping nebula-docker-compose_storaged0_1 ... done Stopping nebula-docker-compose_storaged1_1 ... done Stopping nebula-docker-compose_graphd1_1 ... done Stopping nebula-docker-compose_storaged2_1 ... done Stopping nebula-docker-compose_metad1_1 ... done Stopping nebula-docker-compose_metad2_1 ... done Stopping nebula-docker-compose_metad0_1 ... done Removing nebula-docker-compose_graphd_1 ... done Removing nebula-docker-compose_graphd2_1 ... done Removing nebula-docker-compose_storaged0_1 ... done Removing nebula-docker-compose_storaged1_1 ... done Removing nebula-docker-compose_graphd1_1 ... done Removing nebula-docker-compose_storaged2_1 ... done Removing nebula-docker-compose_metad1_1 ... done Removing nebula-docker-compose_metad2_1 ... done Removing nebula-docker-compose_metad0_1 ... done Removing network nebula-docker-compose_nebula-net \u8bf4\u660e \uff1a\u547d\u4ee4 docker-compose down -v \u5c06\u4f1a \u5220\u9664 \u6240\u6709\u672c\u5730Nebula Graph\u7684\u6570\u636e\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fdeveloping\u6216nightly\u7248\u672c\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u8bf7\u5c1d\u8bd5\u8fd9\u4e2a\u547d\u4ee4\u3002","title":"\u5bb9\u5668\u90e8\u7f72"},{"location":"2.quick-start/5.start-stop-service/#nebula_graph_3","text":"","title":"\u67e5\u770bNebula Graph\u670d\u52a1"},{"location":"2.quick-start/5.start-stop-service/#_6","text":"\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u67e5\u770bNebula Graph\u670d\u52a1\u72b6\u6001\uff1a $ sudo /usr/local/nebula/scripts/nebula.service status all \u5982\u679c\u8fd4\u56de\u5982\u4e0b\u7ed3\u679c\uff0c\u8868\u793aNebula Graph\u670d\u52a1\u6b63\u5e38\u8fd0\u884c\u3002 [ INFO ] nebula-metad: Running as 26601 , Listening on 9559 [ INFO ] nebula-graphd: Running as 26644 , Listening on 9669 [ INFO ] nebula-storaged: Running as 26709 , Listening on 9779 \u5982\u679c\u8fd4\u56de\u7c7b\u4f3c\u5982\u4e0b\u7ed3\u679c\uff0c\u8868\u793aNebula Graph\u670d\u52a1\u5f02\u5e38\uff0c\u53ef\u4ee5\u6839\u636e\u5f02\u5e38\u670d\u52a1\u4fe1\u606f\u8fdb\u4e00\u6b65\u6392\u67e5\uff0c\u6216\u8005\u5728 Nebula Graph\u793e\u533a \u5bfb\u6c42\u5e2e\u52a9\u3002 [ INFO ] nebula-metad: Running as 25600 , Listening on 9559 [ INFO ] nebula-graphd: Exited [ INFO ] nebula-storaged: Running as 25646 , Listening on 9779 Nebula Graph\u670d\u52a1\u7531Meta\u670d\u52a1\u3001Graph\u670d\u52a1\u548cStorage\u670d\u52a1\u5171\u540c\u63d0\u4f9b\uff0c\u8fd9\u4e09\u79cd\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u90fd\u4fdd\u5b58\u5728\u5b89\u88c5\u76ee\u5f55\u7684 etc \u76ee\u5f55\u5185\uff0c\u9ed8\u8ba4\u8def\u5f84\u4e3a /usr/local/nebula/etc/ \uff0c\u60a8\u53ef\u4ee5\u68c0\u67e5\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u6392\u67e5\u95ee\u9898\u3002","title":"\u975e\u5bb9\u5668\u90e8\u7f72"},{"location":"2.quick-start/5.start-stop-service/#_7","text":"\u5728 nebula-docker-compose \u76ee\u5f55\u5185\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u67e5\u770bNebula Graph\u670d\u52a1\u72b6\u6001\uff1a nebula-docker-compose ] $ docker-compose ps Name Command State Ports --------------------------------------------------------------------------------------------------------------------------------------------------------------------- nebula-docker-compose_graphd1_1 /usr/local/nebula/bin/nebu ... Up ( healthy ) 0 .0.0.0:49223->19669/tcp, 0 .0.0.0:49222->19670/tcp, 0 .0.0.0:49224->9669/tcp nebula-docker-compose_graphd2_1 /usr/local/nebula/bin/nebu ... Up ( healthy ) 0 .0.0.0:49229->19669/tcp, 0 .0.0.0:49228->19670/tcp, 0 .0.0.0:49230->9669/tcp nebula-docker-compose_graphd_1 /usr/local/nebula/bin/nebu ... Up ( healthy ) 0 .0.0.0:49221->19669/tcp, 0 .0.0.0:49220->19670/tcp, 0 .0.0.0:9669->9669/tcp nebula-docker-compose_metad0_1 ./bin/nebula-metad --flagf ... Up ( healthy ) 0 .0.0.0:49212->19559/tcp, 0 .0.0.0:49211->19560/tcp, 0 .0.0.0:49213->9559/tcp, 9560 /tcp nebula-docker-compose_metad1_1 ./bin/nebula-metad --flagf ... Up ( healthy ) 0 .0.0.0:49209->19559/tcp, 0 .0.0.0:49208->19560/tcp, 0 .0.0.0:49210->9559/tcp, 9560 /tcp nebula-docker-compose_metad2_1 ./bin/nebula-metad --flagf ... Up ( healthy ) 0 .0.0.0:49206->19559/tcp, 0 .0.0.0:49205->19560/tcp, 0 .0.0.0:49207->9559/tcp, 9560 /tcp nebula-docker-compose_storaged0_1 ./bin/nebula-storaged --fl ... Up ( healthy ) 0 .0.0.0:49218->19779/tcp, 0 .0.0.0:49217->19780/tcp, 9777 /tcp, 9778 /tcp, 0 .0.0.0:49219->9779/tcp, 9780 /tcp nebula-docker-compose_storaged1_1 ./bin/nebula-storaged --fl ... Up ( healthy ) 0 .0.0.0:49215->19779/tcp, 0 .0.0.0:49214->19780/tcp, 9777 /tcp, 9778 /tcp, 0 .0.0.0:49216->9779/tcp, 9780 /tcp nebula-docker-compose_storaged2_1 ./bin/nebula-storaged --fl ... Up ( healthy ) 0 .0.0.0:49226->19779/tcp, 0 .0.0.0:49225->19780/tcp, 9777 /tcp, 9778 /tcp, 0 .0.0.0:49227->9779/tcp, 9780 /tcp \u5982\u679c\u670d\u52a1\u6709\u5f02\u5e38\uff0c\u60a8\u53ef\u4ee5\u5148\u786e\u8ba4\u5f02\u5e38\u7684\u5bb9\u5668\u540d\u79f0\uff08\u4f8b\u5982 nebula-docker-compose_graphd2_1 \uff09\uff0c\u7136\u540e\u6267\u884c docker ps \u67e5\u770b\u5bf9\u5e94\u7684 CONTAINER ID (\u793a\u4f8b\u4e3a 2a6c56c405f5 )\uff0c\u6700\u540e\u767b\u5f55\u5bb9\u5668\u6392\u67e5\u95ee\u9898\u3002 nebula-docker-compose ] $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2a6c56c405f5 vesoft/nebula-graphd:v2-nightly \"/usr/local/nebula/b\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 0 .0.0.0:49230->9669/tcp, 0 .0.0.0:49229->19669/tcp, 0 .0.0.0:49228->19670/tcp nebula-docker-compose_graphd2_1 7042e0a8e83d vesoft/nebula-storaged:v2-nightly \"./bin/nebula-storag\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9777 -9778/tcp, 9780 /tcp, 0 .0.0.0:49227->9779/tcp, 0 .0.0.0:49226->19779/tcp, 0 .0.0.0:49225->19780/tcp nebula-docker-compose_storaged2_1 18e3ea63ad65 vesoft/nebula-storaged:v2-nightly \"./bin/nebula-storag\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9777 -9778/tcp, 9780 /tcp, 0 .0.0.0:49219->9779/tcp, 0 .0.0.0:49218->19779/tcp, 0 .0.0.0:49217->19780/tcp nebula-docker-compose_storaged0_1 4dcabfe8677a vesoft/nebula-graphd:v2-nightly \"/usr/local/nebula/b\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 0 .0.0.0:49224->9669/tcp, 0 .0.0.0:49223->19669/tcp, 0 .0.0.0:49222->19670/tcp nebula-docker-compose_graphd1_1 a74054c6ae25 vesoft/nebula-graphd:v2-nightly \"/usr/local/nebula/b\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 0 .0.0.0:9669->9669/tcp, 0 .0.0.0:49221->19669/tcp, 0 .0.0.0:49220->19670/tcp nebula-docker-compose_graphd_1 880025a3858c vesoft/nebula-storaged:v2-nightly \"./bin/nebula-storag\u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9777 -9778/tcp, 9780 /tcp, 0 .0.0.0:49216->9779/tcp, 0 .0.0.0:49215->19779/tcp, 0 .0.0.0:49214->19780/tcp nebula-docker-compose_storaged1_1 45736a32a23a vesoft/nebula-metad:v2-nightly \"./bin/nebula-metad \u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9560 /tcp, 0 .0.0.0:49213->9559/tcp, 0 .0.0.0:49212->19559/tcp, 0 .0.0.0:49211->19560/tcp nebula-docker-compose_metad0_1 3b2c90eb073e vesoft/nebula-metad:v2-nightly \"./bin/nebula-metad \u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9560 /tcp, 0 .0.0.0:49207->9559/tcp, 0 .0.0.0:49206->19559/tcp, 0 .0.0.0:49205->19560/tcp nebula-docker-compose_metad2_1 7bb31b7a5b3f vesoft/nebula-metad:v2-nightly \"./bin/nebula-metad \u2026\" 36 minutes ago Up 36 minutes ( healthy ) 9560 /tcp, 0 .0.0.0:49210->9559/tcp, 0 .0.0.0:49209->19559/tcp, 0 .0.0.0:49208->19560/tcp nebula-docker-compose_metad1_1 nebula-docker-compose ] $ docker exec -it 2a6c56c405f5 bash [ root@2a6c56c405f5 nebula ] #","title":"\u5bb9\u5668\u90e8\u7f72"},{"location":"2.quick-start/6.useful-links/","text":"\u5e38\u7528\u94fe\u63a5 \u00b6 API \u00b6 \u94fe\u63a5 commit id C++ 7305c72 Go 542ed24 Python cb48e8a \u4ee5\u4e0b\u9879\u76ee v2.0.0 \u8fd8\u672a\u53d1\u5e03. (TODO Mar. 23 2021): Java Client Rust Client Node.js Client HTTP Client \u5de5\u5177 \u00b6 \u94fe\u63a5 commit id \u547d\u4ee4\u884c 1f32236 \u4ee5\u4e0b\u9879\u76ee v2.0.0 \u8fd8\u672a\u53d1\u5e03. (TODO Mar. 23 2021): Studio Dashboard [Graph Computing TODO] \u5927\u6570\u636e\u5bf9\u63a5 \u00b6 \u94fe\u63a5 commit id csv (importer) 1d87c7b Spark af3fdf4 nebula-docker-compose 2c2549a \u4ee5\u4e0b\u9879\u76ee v2.0.0 \u8fd8\u672a\u53d1\u5e03. (TODO Mar. 23 2021): Flink Promethus ElasticSearch \u6027\u80fd\u3001\u6d4b\u8bd5\u3001\u5907\u4efd\u4e0e\u6062\u590d \u00b6 \u4ee5\u4e0b\u9879\u76ee v2.0.0 \u8fd8\u672a\u53d1\u5e03. (TODO Mar. 23 2021): Benchmark Chaos Test Backup&Restore \u5176\u4ed6 \u00b6 \u94fe\u63a5 commit id Nebula Graph 1.2 (\u5df2\u8fc7\u671f) 53f56b6 \u793e\u533a","title":"Useful Links"},{"location":"2.quick-start/6.useful-links/#_1","text":"","title":"\u5e38\u7528\u94fe\u63a5"},{"location":"2.quick-start/6.useful-links/#api","text":"\u94fe\u63a5 commit id C++ 7305c72 Go 542ed24 Python cb48e8a \u4ee5\u4e0b\u9879\u76ee v2.0.0 \u8fd8\u672a\u53d1\u5e03. (TODO Mar. 23 2021): Java Client Rust Client Node.js Client HTTP Client","title":"API"},{"location":"2.quick-start/6.useful-links/#_2","text":"\u94fe\u63a5 commit id \u547d\u4ee4\u884c 1f32236 \u4ee5\u4e0b\u9879\u76ee v2.0.0 \u8fd8\u672a\u53d1\u5e03. (TODO Mar. 23 2021): Studio Dashboard [Graph Computing TODO]","title":"\u5de5\u5177"},{"location":"2.quick-start/6.useful-links/#_3","text":"\u94fe\u63a5 commit id csv (importer) 1d87c7b Spark af3fdf4 nebula-docker-compose 2c2549a \u4ee5\u4e0b\u9879\u76ee v2.0.0 \u8fd8\u672a\u53d1\u5e03. (TODO Mar. 23 2021): Flink Promethus ElasticSearch","title":"\u5927\u6570\u636e\u5bf9\u63a5"},{"location":"2.quick-start/6.useful-links/#_4","text":"\u4ee5\u4e0b\u9879\u76ee v2.0.0 \u8fd8\u672a\u53d1\u5e03. (TODO Mar. 23 2021): Benchmark Chaos Test Backup&Restore","title":"\u6027\u80fd\u3001\u6d4b\u8bd5\u3001\u5907\u4efd\u4e0e\u6062\u590d"},{"location":"2.quick-start/6.useful-links/#_5","text":"\u94fe\u63a5 commit id Nebula Graph 1.2 (\u5df2\u8fc7\u671f) 53f56b6 \u793e\u533a","title":"\u5176\u4ed6"},{"location":"3.ngql-guide/1.nGQL-overview/1.overview/","text":"Nebula Graph\u67e5\u8be2\u8bed\u8a00\uff08nGQL\uff09 \u00b6 \u672c\u6587\u4ecb\u7ecdNebula Graph\u4f7f\u7528\u7684\u67e5\u8be2\u8bed\u8a00nGQL\uff08Nebula Graph Query Language\uff09\u3002 \u4ec0\u4e48\u662fnGQL \u00b6 nGQL\u662fNebula Graph\u4f7f\u7528\u7684\u7684\u58f0\u660e\u5f0f\u56fe\u67e5\u8be2\u8bed\u8a00\uff0c\u652f\u6301\u7075\u6d3b\u9ad8\u6548\u7684 \u56fe\u6a21\u5f0f \uff0c\u800c\u4e14nGQL\u662f\u4e3a\u5f00\u53d1\u548c\u8fd0\u7ef4\u4eba\u5458\u8bbe\u8ba1\u7684\u7c7bSQL\u67e5\u8be2\u8bed\u8a00\uff0c\u6613\u4e8e\u5b66\u4e60\u3002 nGQL\u662f\u4e00\u4e2a\u8fdb\u884c\u4e2d\u7684\u9879\u76ee\uff0c\u4f1a\u6301\u7eed\u53d1\u5e03\u65b0\u7279\u6027\u548c\u4f18\u5316\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u51fa\u73b0\u8bed\u6cd5\u548c\u5b9e\u9645\u64cd\u4f5c\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\uff0c\u5982\u679c\u9047\u5230\u6b64\u7c7b\u95ee\u9898\uff0c\u8bf7\u63d0\u4ea4 issue \u901a\u77e5Nebula Graph\u56e2\u961f\u3002Nebula Graph 2.0\u53ca\u66f4\u65b0\u7248\u672c\u5c06\u652f\u6301 openCypher 9 \u3002 nGQL\u53ef\u4ee5\u505a\u4ec0\u4e48 \u00b6 \u652f\u6301\u56fe\u904d\u5386 \u652f\u6301\u6a21\u5f0f\u5339\u914d \u652f\u6301\u805a\u5408 \u652f\u6301\u4fee\u6539\u56fe \u652f\u6301\u8bbf\u95ee\u63a7\u5236 \u652f\u6301\u805a\u5408\u67e5\u8be2 \u652f\u6301\u7d22\u5f15 \u652f\u6301\u5927\u90e8\u5206openCypher 9\u56fe\u67e5\u8be2\u8bed\u6cd5\uff08\u4e0d\u652f\u6301\u4fee\u6539\u548c\u63a7\u5236\u8bed\u6cd5\uff09 \u793a\u4f8b\u6570\u636e \u00b6 \u60a8\u53ef\u4ee5\u4e0b\u8f7dNebula Graph\u793a\u4f8b\u6570\u636e \u811a\u672c \uff0c\u7136\u540e\u4f7f\u7528 Nebula Graph Console \uff0c\u4f7f\u7528\u9009\u9879 -f \u6267\u884c\u811a\u672c\u3002 \u5360\u4f4d\u6807\u8bc6\u7b26\u548c\u5360\u4f4d\u7b26\u503c \u00b6 Nebula Graph\u67e5\u8be2\u8bed\u8a00nGQL\u53c2\u7167\u4ee5\u4e0b\u6807\u51c6\u8bbe\u8ba1\uff1a ISO/IEC 10646 ISO/IEC 39075 ISO/IEC NP 39075 (Draft) OpenCypher 9 \u5728\u6a21\u677f\u4ee3\u7801\u4e2d\uff0c\u4efb\u4f55\u975e\u5173\u952e\u5b57\u3001\u5b57\u9762\u503c\u6216\u6807\u70b9\u7b26\u53f7\u7684\u6807\u8bb0\u90fd\u662f\u5360\u4f4d\u7b26\u6807\u8bc6\u7b26\u6216\u5360\u4f4d\u7b26\u503c\u3002 nGQL\u7684\u7b26\u53f7\u8bf4\u660e\u5982\u4e0b\u3002 \u7b26\u53f7 \u542b\u4e49 < > \u8bed\u6cd5\u5143\u7d20\u7684\u540d\u79f0\u3002 ::= \u5b9a\u4e49\u5143\u7d20\u7684\u516c\u5f0f\u3002 [ ] \u53ef\u9009\u5143\u7d20\u3002 { } \u663e\u793a\u6307\u5b9a\u5143\u7d20\u3002 | \u6240\u6709\u53ef\u9009\u7684\u5143\u7d20\u3002 ... \u53ef\u4ee5\u91cd\u590d\u591a\u6b21\u3002 \u4f8b\u5982\u521b\u5efa\u70b9\u6216\u8fb9\u7684nGQL\u8bed\u6cd5\uff1a CREATE {TAG | EDGE} {<tag_name> | <edge_type>}(<property_name> <data_type> [, <property_name> <data_type> ...]); \u793a\u4f8b\u8bed\u53e5\uff1a nebula> CREATE TAG player(name string, age int);","title":"Overview"},{"location":"3.ngql-guide/1.nGQL-overview/1.overview/#nebula_graphngql","text":"\u672c\u6587\u4ecb\u7ecdNebula Graph\u4f7f\u7528\u7684\u67e5\u8be2\u8bed\u8a00nGQL\uff08Nebula Graph Query Language\uff09\u3002","title":"Nebula Graph\u67e5\u8be2\u8bed\u8a00\uff08nGQL\uff09"},{"location":"3.ngql-guide/1.nGQL-overview/1.overview/#ngql","text":"nGQL\u662fNebula Graph\u4f7f\u7528\u7684\u7684\u58f0\u660e\u5f0f\u56fe\u67e5\u8be2\u8bed\u8a00\uff0c\u652f\u6301\u7075\u6d3b\u9ad8\u6548\u7684 \u56fe\u6a21\u5f0f \uff0c\u800c\u4e14nGQL\u662f\u4e3a\u5f00\u53d1\u548c\u8fd0\u7ef4\u4eba\u5458\u8bbe\u8ba1\u7684\u7c7bSQL\u67e5\u8be2\u8bed\u8a00\uff0c\u6613\u4e8e\u5b66\u4e60\u3002 nGQL\u662f\u4e00\u4e2a\u8fdb\u884c\u4e2d\u7684\u9879\u76ee\uff0c\u4f1a\u6301\u7eed\u53d1\u5e03\u65b0\u7279\u6027\u548c\u4f18\u5316\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u51fa\u73b0\u8bed\u6cd5\u548c\u5b9e\u9645\u64cd\u4f5c\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\uff0c\u5982\u679c\u9047\u5230\u6b64\u7c7b\u95ee\u9898\uff0c\u8bf7\u63d0\u4ea4 issue \u901a\u77e5Nebula Graph\u56e2\u961f\u3002Nebula Graph 2.0\u53ca\u66f4\u65b0\u7248\u672c\u5c06\u652f\u6301 openCypher 9 \u3002","title":"\u4ec0\u4e48\u662fnGQL"},{"location":"3.ngql-guide/1.nGQL-overview/1.overview/#ngql_1","text":"\u652f\u6301\u56fe\u904d\u5386 \u652f\u6301\u6a21\u5f0f\u5339\u914d \u652f\u6301\u805a\u5408 \u652f\u6301\u4fee\u6539\u56fe \u652f\u6301\u8bbf\u95ee\u63a7\u5236 \u652f\u6301\u805a\u5408\u67e5\u8be2 \u652f\u6301\u7d22\u5f15 \u652f\u6301\u5927\u90e8\u5206openCypher 9\u56fe\u67e5\u8be2\u8bed\u6cd5\uff08\u4e0d\u652f\u6301\u4fee\u6539\u548c\u63a7\u5236\u8bed\u6cd5\uff09","title":"nGQL\u53ef\u4ee5\u505a\u4ec0\u4e48"},{"location":"3.ngql-guide/1.nGQL-overview/1.overview/#_1","text":"\u60a8\u53ef\u4ee5\u4e0b\u8f7dNebula Graph\u793a\u4f8b\u6570\u636e \u811a\u672c \uff0c\u7136\u540e\u4f7f\u7528 Nebula Graph Console \uff0c\u4f7f\u7528\u9009\u9879 -f \u6267\u884c\u811a\u672c\u3002","title":"\u793a\u4f8b\u6570\u636e"},{"location":"3.ngql-guide/1.nGQL-overview/1.overview/#_2","text":"Nebula Graph\u67e5\u8be2\u8bed\u8a00nGQL\u53c2\u7167\u4ee5\u4e0b\u6807\u51c6\u8bbe\u8ba1\uff1a ISO/IEC 10646 ISO/IEC 39075 ISO/IEC NP 39075 (Draft) OpenCypher 9 \u5728\u6a21\u677f\u4ee3\u7801\u4e2d\uff0c\u4efb\u4f55\u975e\u5173\u952e\u5b57\u3001\u5b57\u9762\u503c\u6216\u6807\u70b9\u7b26\u53f7\u7684\u6807\u8bb0\u90fd\u662f\u5360\u4f4d\u7b26\u6807\u8bc6\u7b26\u6216\u5360\u4f4d\u7b26\u503c\u3002 nGQL\u7684\u7b26\u53f7\u8bf4\u660e\u5982\u4e0b\u3002 \u7b26\u53f7 \u542b\u4e49 < > \u8bed\u6cd5\u5143\u7d20\u7684\u540d\u79f0\u3002 ::= \u5b9a\u4e49\u5143\u7d20\u7684\u516c\u5f0f\u3002 [ ] \u53ef\u9009\u5143\u7d20\u3002 { } \u663e\u793a\u6307\u5b9a\u5143\u7d20\u3002 | \u6240\u6709\u53ef\u9009\u7684\u5143\u7d20\u3002 ... \u53ef\u4ee5\u91cd\u590d\u591a\u6b21\u3002 \u4f8b\u5982\u521b\u5efa\u70b9\u6216\u8fb9\u7684nGQL\u8bed\u6cd5\uff1a CREATE {TAG | EDGE} {<tag_name> | <edge_type>}(<property_name> <data_type> [, <property_name> <data_type> ...]); \u793a\u4f8b\u8bed\u53e5\uff1a nebula> CREATE TAG player(name string, age int);","title":"\u5360\u4f4d\u6807\u8bc6\u7b26\u548c\u5360\u4f4d\u7b26\u503c"},{"location":"3.ngql-guide/1.nGQL-overview/2.graph-modeling/","text":"\u56fe\u5efa\u6a21 \u00b6 \u672c\u6587\u4ecb\u7ecd\u5728Nebula Graph\u9879\u76ee\u4e2d\u6210\u529f\u5e94\u7528\u7684\u4e00\u4e9b\u56fe\u5efa\u6a21\u901a\u7528\u5efa\u8bae\u3002 \u8bf4\u660e \uff1a\u672c\u6587\u5efa\u8bae\u662f\u901a\u7528\u7684\uff0c\u5728\u7279\u5b9a\u9886\u57df\u6709\u4f8b\u5916\uff0c\u8bf7\u7ed3\u5408\u5b9e\u9645\u4e1a\u52a1\u60c5\u51b5\u8fdb\u884c\u56fe\u5efa\u6a21\u3002 \u4ee5\u6027\u80fd\u4e3a\u76ee\u6807\u8fdb\u884c\u5efa\u6a21 \u00b6 \u76ee\u524dNebula Graph\u6ca1\u6709\u5b8c\u7f8e\u7684\u5efa\u6a21\u65b9\u6cd5\uff0c\u5982\u4f55\u5efa\u6a21\u53d6\u51b3\u4e8e\u60a8\u60f3\u4ece\u6570\u636e\u4e2d\u6316\u6398\u7684\u5185\u5bb9\u3002\u5206\u6790\u6570\u636e\u5e76\u6839\u636e\u4e1a\u52a1\u6a21\u578b\u521b\u5efa\u65b9\u4fbf\u76f4\u89c2\u7684\u6570\u636e\u6a21\u578b\uff0c\u6d4b\u8bd5\u6a21\u578b\u5e76\u4f18\u5316\uff0c\u9010\u6e10\u9002\u5e94\u4e1a\u52a1\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u6027\u80fd\uff0c\u60a8\u53ef\u4ee5\u591a\u6b21\u66f4\u6539\u6216\u91cd\u65b0\u8bbe\u8ba1\u6a21\u578b\u3002 \u5408\u7406\u8bbe\u7f6e\u8fb9\u5c5e\u6027 \u00b6 \u6df1\u5ea6\u56fe\u904d\u5386\u7684\u6027\u80fd\u8f83\u4f4e\uff0c\u4e3a\u4e86\u51cf\u5c11\u904d\u5386\u6df1\u5ea6\uff0c\u8bf7\u4f7f\u7528\u70b9\u5c5e\u6027\u4ee3\u66ff\u8fb9\u3002\u4f8b\u5982\uff0c\u6a21\u578ba\u5305\u62ec\u59d3\u540d\u3001\u5e74\u9f84\u3001\u773c\u775b\u989c\u8272\u4e09\u79cd\u5c5e\u6027\uff0c\u5efa\u8bae\u60a8\u521b\u5efa\u4e00\u4e2a\u6807\u7b7e person \uff0c\u7136\u540e\u4e3a\u5b83\u6dfb\u52a0\u59d3\u540d\u3001\u5e74\u9f84\u3001\u773c\u775b\u989c\u8272\u7684\u5c5e\u6027\u3002\u5982\u679c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u773c\u775b\u989c\u8272\u7684\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u7c7b\u578b has \uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u8fb9\u7528\u6765\u8868\u793a\u4eba\u62e5\u6709\u7684\u773c\u775b\u989c\u8272\uff0c\u8fd9\u79cd\u5efa\u6a21\u65b9\u6cd5\u4f1a\u964d\u4f4e\u904d\u5386\u6027\u80fd\u3002 \u4e3a\u8fb9\u521b\u5efa\u5c5e\u6027\u65f6\u8bf7\u52ff\u4f7f\u7528\u957f\u5b57\u7b26\u4e32\uff0cNebula Graph\u652f\u6301\u5728\u8fb9\u4e0a\u5b58\u50a8\u957f\u5b57\u7b26\u4e32\u5c5e\u6027\uff0c\u4f46\u662f\u8fd9\u4e9b\u5c5e\u6027\u4f1a\u540c\u65f6\u4fdd\u5b58\u5728\u51fa\u8fb9\u548c\u5165\u8fb9\uff0c\u8bf7\u5c0f\u5fc3\u5199\u5165\u653e\u5927\uff08write amplification\uff09\u3002 \u5408\u7406\u8bbe\u7f6e\u6807\u7b7e\u5c5e\u6027 \u00b6 \u5728\u56fe\u5efa\u6a21\u4e2d\uff0c\u8bf7\u5c06\u4e00\u7ec4\u7c7b\u4f3c\u7684\u5e73\u7ea7\u5c5e\u6027\u653e\u5165\u540c\u4e00\u4e2a\u6807\u7b7e\uff0c\u5373\u6309\u4e0d\u540c\u6982\u5ff5\u8fdb\u884c\u5206\u7ec4\u3002 \u6b63\u786e\u4f7f\u7528\u7d22\u5f15 \u00b6 \u6b63\u786e\u4f7f\u7528\u7d22\u5f15\u53ef\u4ee5\u52a0\u901f\u67e5\u8be2\uff0c\u4f46\u662f\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5199\u6027\u80fd\u4e0b\u964d90%\u751a\u81f3\u66f4\u591a\uff0c\u53ea\u6709\u5728\u6839\u636e\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u5b9a\u4f4d\u70b9\u6216\u8fb9\u65f6\u624d\u4f7f\u7528\u7d22\u5f15\u3002 \u6ce8\u610f \uff1a\u8bf7 \u4e0d\u8981\u968f\u610f \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u7d22\u5f15\uff0c\u9664\u975e\u60a8\u5f88\u6e05\u695a\u4f7f\u7528\u7d22\u5f15\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002","title":"\u56fe\u5efa\u6a21"},{"location":"3.ngql-guide/1.nGQL-overview/2.graph-modeling/#_1","text":"\u672c\u6587\u4ecb\u7ecd\u5728Nebula Graph\u9879\u76ee\u4e2d\u6210\u529f\u5e94\u7528\u7684\u4e00\u4e9b\u56fe\u5efa\u6a21\u901a\u7528\u5efa\u8bae\u3002 \u8bf4\u660e \uff1a\u672c\u6587\u5efa\u8bae\u662f\u901a\u7528\u7684\uff0c\u5728\u7279\u5b9a\u9886\u57df\u6709\u4f8b\u5916\uff0c\u8bf7\u7ed3\u5408\u5b9e\u9645\u4e1a\u52a1\u60c5\u51b5\u8fdb\u884c\u56fe\u5efa\u6a21\u3002","title":"\u56fe\u5efa\u6a21"},{"location":"3.ngql-guide/1.nGQL-overview/2.graph-modeling/#_2","text":"\u76ee\u524dNebula Graph\u6ca1\u6709\u5b8c\u7f8e\u7684\u5efa\u6a21\u65b9\u6cd5\uff0c\u5982\u4f55\u5efa\u6a21\u53d6\u51b3\u4e8e\u60a8\u60f3\u4ece\u6570\u636e\u4e2d\u6316\u6398\u7684\u5185\u5bb9\u3002\u5206\u6790\u6570\u636e\u5e76\u6839\u636e\u4e1a\u52a1\u6a21\u578b\u521b\u5efa\u65b9\u4fbf\u76f4\u89c2\u7684\u6570\u636e\u6a21\u578b\uff0c\u6d4b\u8bd5\u6a21\u578b\u5e76\u4f18\u5316\uff0c\u9010\u6e10\u9002\u5e94\u4e1a\u52a1\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u6027\u80fd\uff0c\u60a8\u53ef\u4ee5\u591a\u6b21\u66f4\u6539\u6216\u91cd\u65b0\u8bbe\u8ba1\u6a21\u578b\u3002","title":"\u4ee5\u6027\u80fd\u4e3a\u76ee\u6807\u8fdb\u884c\u5efa\u6a21"},{"location":"3.ngql-guide/1.nGQL-overview/2.graph-modeling/#_3","text":"\u6df1\u5ea6\u56fe\u904d\u5386\u7684\u6027\u80fd\u8f83\u4f4e\uff0c\u4e3a\u4e86\u51cf\u5c11\u904d\u5386\u6df1\u5ea6\uff0c\u8bf7\u4f7f\u7528\u70b9\u5c5e\u6027\u4ee3\u66ff\u8fb9\u3002\u4f8b\u5982\uff0c\u6a21\u578ba\u5305\u62ec\u59d3\u540d\u3001\u5e74\u9f84\u3001\u773c\u775b\u989c\u8272\u4e09\u79cd\u5c5e\u6027\uff0c\u5efa\u8bae\u60a8\u521b\u5efa\u4e00\u4e2a\u6807\u7b7e person \uff0c\u7136\u540e\u4e3a\u5b83\u6dfb\u52a0\u59d3\u540d\u3001\u5e74\u9f84\u3001\u773c\u775b\u989c\u8272\u7684\u5c5e\u6027\u3002\u5982\u679c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u773c\u775b\u989c\u8272\u7684\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u7c7b\u578b has \uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u8fb9\u7528\u6765\u8868\u793a\u4eba\u62e5\u6709\u7684\u773c\u775b\u989c\u8272\uff0c\u8fd9\u79cd\u5efa\u6a21\u65b9\u6cd5\u4f1a\u964d\u4f4e\u904d\u5386\u6027\u80fd\u3002 \u4e3a\u8fb9\u521b\u5efa\u5c5e\u6027\u65f6\u8bf7\u52ff\u4f7f\u7528\u957f\u5b57\u7b26\u4e32\uff0cNebula Graph\u652f\u6301\u5728\u8fb9\u4e0a\u5b58\u50a8\u957f\u5b57\u7b26\u4e32\u5c5e\u6027\uff0c\u4f46\u662f\u8fd9\u4e9b\u5c5e\u6027\u4f1a\u540c\u65f6\u4fdd\u5b58\u5728\u51fa\u8fb9\u548c\u5165\u8fb9\uff0c\u8bf7\u5c0f\u5fc3\u5199\u5165\u653e\u5927\uff08write amplification\uff09\u3002","title":"\u5408\u7406\u8bbe\u7f6e\u8fb9\u5c5e\u6027"},{"location":"3.ngql-guide/1.nGQL-overview/2.graph-modeling/#_4","text":"\u5728\u56fe\u5efa\u6a21\u4e2d\uff0c\u8bf7\u5c06\u4e00\u7ec4\u7c7b\u4f3c\u7684\u5e73\u7ea7\u5c5e\u6027\u653e\u5165\u540c\u4e00\u4e2a\u6807\u7b7e\uff0c\u5373\u6309\u4e0d\u540c\u6982\u5ff5\u8fdb\u884c\u5206\u7ec4\u3002","title":"\u5408\u7406\u8bbe\u7f6e\u6807\u7b7e\u5c5e\u6027"},{"location":"3.ngql-guide/1.nGQL-overview/2.graph-modeling/#_5","text":"\u6b63\u786e\u4f7f\u7528\u7d22\u5f15\u53ef\u4ee5\u52a0\u901f\u67e5\u8be2\uff0c\u4f46\u662f\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5199\u6027\u80fd\u4e0b\u964d90%\u751a\u81f3\u66f4\u591a\uff0c\u53ea\u6709\u5728\u6839\u636e\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u5b9a\u4f4d\u70b9\u6216\u8fb9\u65f6\u624d\u4f7f\u7528\u7d22\u5f15\u3002 \u6ce8\u610f \uff1a\u8bf7 \u4e0d\u8981\u968f\u610f \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u7d22\u5f15\uff0c\u9664\u975e\u60a8\u5f88\u6e05\u695a\u4f7f\u7528\u7d22\u5f15\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002","title":"\u6b63\u786e\u4f7f\u7528\u7d22\u5f15"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/","text":"\u6a21\u5f0f \u00b6 \u6a21\u5f0f\uff08pattern\uff09\u548c\u56fe\u6a21\u5f0f\u5339\u914d\uff0c\u662f\u56fe\u67e5\u8be2\u8bed\u8a00\u7684\u6838\u5fc3\uff0c\u672c\u6587\u4ecb\u7ecdNebula Graph\u7684\u5404\u79cd\u6a21\u5f0f\u3002 \u5355\u70b9\u6a21\u5f0f \u00b6 \u70b9\u7528\u4e00\u5bf9\u62ec\u53f7\u6765\u63cf\u8ff0\uff0c\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u540d\u79f0\u3002\u4f8b\u5982\uff1a (a) \u793a\u4f8b\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u5f0f\uff0c\u63cf\u8ff0\u4e86\u5355\u4e2a\u70b9\uff0c\u5e76\u4f7f\u7528\u53d8\u91cf a \u547d\u540d\u8be5\u70b9\u3002 \u591a\u70b9\u5173\u8054\u6a21\u5f0f \u00b6 \u591a\u4e2a\u70b9\u901a\u8fc7\u8fb9\u76f8\u8fde\u662f\u5e38\u89c1\u7684\u7ed3\u6784\uff0c\u6a21\u5f0f\u7528\u7bad\u5934\u6765\u63cf\u8ff0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u3002\u4f8b\u5982\uff1a (a)-[]->(b) \u793a\u4f8b\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\uff1a\u4e24\u4e2a\u70b9\u548c\u4e00\u6761\u8fde\u63a5\u4e24\u4e2a\u70b9\u7684\u8fb9\uff0c\u4e24\u4e2a\u70b9\u5206\u522b\u4e3a a \u548c b \uff0c\u8fb9\u662f\u6709\u65b9\u5411\u7684\uff0c\u4ece a \u5230 b \u3002 \u8fd9\u79cd\u63cf\u8ff0\u70b9\u548c\u8fb9\u7684\u65b9\u5f0f\u53ef\u4ee5\u6269\u5c55\u5230\u4efb\u610f\u6570\u91cf\u7684\u70b9\u548c\u8fb9\uff0c\u4f8b\u5982\uff1a (a)-[]->(b)<-[]-(c) \u8fd9\u6837\u7684\u4e00\u7cfb\u5217\u70b9\u548c\u8fb9\u79f0\u4e3a \u8def\u5f84 \uff08path\uff09\u3002 \u53ea\u6709\u5728\u6d89\u53ca\u67d0\u4e2a\u70b9\u65f6\uff0c\u624d\u9700\u8981\u547d\u540d\u8fd9\u4e2a\u70b9\u3002\u5982\u679c\u4e0d\u6d89\u53ca\u8fd9\u4e2a\u70b9\uff0c\u5219\u53ef\u4ee5\u7701\u7565\u540d\u79f0\uff0c\u4f8b\u5982\uff1a (a)-[]->()<-[]-(c) \u6807\u7b7e\u6a21\u5f0f \u00b6 \u8bf4\u660e \uff1anGQL\u4e2d\u7684 tag \u6982\u5ff5\u4e0eopenCypher\u4e2d\u7684 label \u6709\u4e00\u4e9b\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u60a8\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a tag \u4e4b\u540e\u624d\u80fd\u4f7f\u7528\u5b83\uff0c\u800c\u4e14 tag \u8fd8\u5b9a\u4e49\u4e86\u5c5e\u6027\u7684\u7c7b\u578b\u3002 \u6a21\u5f0f\u9664\u4e86\u7b80\u5355\u5730\u63cf\u8ff0\u56fe\u4e2d\u7684\u70b9\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u63cf\u8ff0\u70b9\u7684\u6807\u7b7e\u3002\u4f8b\u5982\uff1a (a:User)-[]->(b) \u6a21\u5f0f\u4e5f\u53ef\u4ee5\u63cf\u8ff0\u6709\u591a\u4e2a\u6807\u7b7e\u7684\u70b9\uff0c\u4f8b\u5982\uff1a (a:User:Admin)-[]->(b) \u5c5e\u6027\u6a21\u5f0f \u00b6 \u70b9\u548c\u8fb9\u662f\u56fe\u7684\u57fa\u672c\u7ed3\u6784\u3002nGQL\u5728\u8fd9\u4e24\u79cd\u7ed3\u6784\u4e0a\u90fd\u53ef\u4ee5\u589e\u52a0\u5c5e\u6027\uff0c\u65b9\u4fbf\u5b9e\u73b0\u66f4\u4e30\u5bcc\u7684\u6a21\u578b\u3002 \u5728\u6a21\u5f0f\u4e2d\uff0c\u5c5e\u6027\u7684\u8868\u793a\u65b9\u5f0f\u4e3a\uff1a\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u4e00\u4e9b\u952e\u503c\u5bf9\uff0c\u7528\u82f1\u6587\u9017\u53f7\u5206\u9694\u3002\u4f8b\u5982\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u5c5e\u6027\uff1a (a {name: 'Andres', sport: 'Brazilian Ju-Jitsu'}) \u5728\u8fd9\u4e2a\u70b9\u4e0a\u53ef\u4ee5\u6709\u4e00\u6761\u8fb9\u662f\uff1a (a)-[{blocked: false}]->(b) \u8fb9\u6a21\u5f0f \u00b6 \u63cf\u8ff0\u4e00\u6761\u8fb9\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u7bad\u5934\u8fde\u63a5\u4e24\u4e2a\u70b9\u3002 \u60a8\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u63cf\u8ff0\u8fb9\u4ee5\u53ca\u5b83\u7684\u65b9\u5411\u6027\u3002\u5982\u679c\u60a8\u4e0d\u5173\u5fc3\u8fb9\u7684\u65b9\u5411\uff0c\u53ef\u4ee5\u7701\u7565\u7bad\u5934\uff0c\u4f8b\u5982\uff1a (a)-[]-(b) \u548c\u70b9\u4e00\u6837\uff0c\u8fb9\u4e5f\u53ef\u4ee5\u547d\u540d\u3002\u4e00\u5bf9\u65b9\u62ec\u53f7\u7528\u4e8e\u5206\u9694\u7bad\u5934\uff0c\u53d8\u91cf\u653e\u5728\u4e24\u8005\u4e4b\u95f4\u3002\u4f8b\u5982\uff1a (a)-[r]->(b) \u548c\u70b9\u4e0a\u7684\u6807\u7b7e\u4e00\u6837\uff0c\u8fb9\u4e5f\u53ef\u4ee5\u6709\u7c7b\u578b\u3002\u63cf\u8ff0\u8fb9\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a (a)-[r:REL_TYPE]->(b) \u548c\u70b9\u4e0a\u7684\u6807\u7b7e\u4e0d\u540c\uff0c\u4e00\u6761\u8fb9\u53ea\u80fd\u6709\u4e00\u79cd\u8fb9\u7c7b\u578b\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u63cf\u8ff0\u591a\u4e2a\u53ef\u9009\u8fb9\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528\u7ba1\u9053\u7b26\u53f7\uff08|\uff09\u5c06\u53ef\u9009\u503c\u5206\u5f00\uff0c\u4f8b\u5982\uff1a (a)-[r:TYPE1|TYPE2]->(b) \u548c\u70b9\u4e00\u6837\uff0c\u8fb9\u7684\u540d\u79f0\u53ef\u4ee5\u7701\u7565\uff0c\u4f8b\u5982\uff1a (a)-[:REL_TYPE]->(b) \u53d8\u957f\u6a21\u5f0f \u00b6 \u5728\u56fe\u4e2d\u6307\u5b9a\u8fb9\u7684\u957f\u5ea6\u6765\u63cf\u8ff0\u591a\u6761\u8fb9\uff08\u4ee5\u53ca\u4e2d\u95f4\u7684\u70b9\uff09\u7ec4\u6210\u7684\u4e00\u6761\u957f\u8def\u5f84\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u591a\u4e2a\u70b9\u548c\u8fb9\u6765\u63cf\u8ff0\u3002\u4f8b\u5982\uff1a (a)-[*2]->(b) \u8be5\u6a21\u5f0f\u63cf\u8ff0\u4e863\u70b92\u8fb9\u7ec4\u6210\u7684\u56fe\uff0c\u5b83\u4eec\u90fd\u5728\u4e00\u6761\u8def\u5f84\u4e0a\uff08\u957f\u5ea6\u4e3a2\uff09\uff0c\u7b49\u4ef7\u4e8e: (a)-[]->()-[]->(b) \u4e5f\u53ef\u4ee5\u6307\u5b9a\u957f\u5ea6\u8303\u56f4\uff0c\u8fd9\u6837\u7684\u8fb9\u6a21\u5f0f\u79f0\u4e3a variable-length edges \uff0c\u4f8b\u5982\uff1a (a)-[*3..5]->(b) *3..5 \u8868\u793a\u6700\u5c0f\u957f\u5ea6\u4e3a3\uff0c\u6700\u5927\u957f\u5ea6\u4e3a5\u3002 \u8be5\u6a21\u5f0f\u63cf\u8ff0\u4e864\u70b93\u8fb9\u30015\u70b94\u8fb9\u62166\u70b95\u8fb9\u7ec4\u6210\u7684\u56fe\u3002 \u60a8\u4e5f\u53ef\u4ee5\u5ffd\u7565\u6700\u5c0f\u957f\u5ea6\uff0c\u53ea\u6307\u5b9a\u6700\u5927\u957f\u5ea6\uff0c\u4f8b\u5982\uff1a (a)-[*..5]->(b) \u8bf4\u660e \uff1a\u5fc5\u987b\u6307\u5b9a\u6700\u5927\u957f\u5ea6\uff0c \u4e0d\u652f\u6301 \u4ec5\u6307\u5b9a\u6700\u5c0f\u957f\u5ea6\uff08 (a)-[*3..]->(b) \uff09\u6216\u90fd\u4e0d\u6307\u5b9a\uff08 (a)-[*]->(b) \uff09\u3002 \u8def\u5f84\u53d8\u91cf \u00b6 \u4e00\u7cfb\u5217\u8fde\u63a5\u7684\u70b9\u548c\u8fb9\u79f0\u4e3a \u8def\u5f84 \u3002nGQL\u5141\u8bb8\u4f7f\u7528\u53d8\u91cf\u6765\u547d\u540d\u8def\u5f84\uff0c\u4f8b\u5982\uff1a p = (a)-[*3..5]->(b) \u60a8\u53ef\u4ee5\u5728MATCH\u8bed\u53e5\u4e2d\u4f7f\u7528\u8def\u5f84\u53d8\u91cf\u3002","title":"Graph patterns"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/#_1","text":"\u6a21\u5f0f\uff08pattern\uff09\u548c\u56fe\u6a21\u5f0f\u5339\u914d\uff0c\u662f\u56fe\u67e5\u8be2\u8bed\u8a00\u7684\u6838\u5fc3\uff0c\u672c\u6587\u4ecb\u7ecdNebula Graph\u7684\u5404\u79cd\u6a21\u5f0f\u3002","title":"\u6a21\u5f0f"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/#_2","text":"\u70b9\u7528\u4e00\u5bf9\u62ec\u53f7\u6765\u63cf\u8ff0\uff0c\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u540d\u79f0\u3002\u4f8b\u5982\uff1a (a) \u793a\u4f8b\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u5f0f\uff0c\u63cf\u8ff0\u4e86\u5355\u4e2a\u70b9\uff0c\u5e76\u4f7f\u7528\u53d8\u91cf a \u547d\u540d\u8be5\u70b9\u3002","title":"\u5355\u70b9\u6a21\u5f0f"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/#_3","text":"\u591a\u4e2a\u70b9\u901a\u8fc7\u8fb9\u76f8\u8fde\u662f\u5e38\u89c1\u7684\u7ed3\u6784\uff0c\u6a21\u5f0f\u7528\u7bad\u5934\u6765\u63cf\u8ff0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u3002\u4f8b\u5982\uff1a (a)-[]->(b) \u793a\u4f8b\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\uff1a\u4e24\u4e2a\u70b9\u548c\u4e00\u6761\u8fde\u63a5\u4e24\u4e2a\u70b9\u7684\u8fb9\uff0c\u4e24\u4e2a\u70b9\u5206\u522b\u4e3a a \u548c b \uff0c\u8fb9\u662f\u6709\u65b9\u5411\u7684\uff0c\u4ece a \u5230 b \u3002 \u8fd9\u79cd\u63cf\u8ff0\u70b9\u548c\u8fb9\u7684\u65b9\u5f0f\u53ef\u4ee5\u6269\u5c55\u5230\u4efb\u610f\u6570\u91cf\u7684\u70b9\u548c\u8fb9\uff0c\u4f8b\u5982\uff1a (a)-[]->(b)<-[]-(c) \u8fd9\u6837\u7684\u4e00\u7cfb\u5217\u70b9\u548c\u8fb9\u79f0\u4e3a \u8def\u5f84 \uff08path\uff09\u3002 \u53ea\u6709\u5728\u6d89\u53ca\u67d0\u4e2a\u70b9\u65f6\uff0c\u624d\u9700\u8981\u547d\u540d\u8fd9\u4e2a\u70b9\u3002\u5982\u679c\u4e0d\u6d89\u53ca\u8fd9\u4e2a\u70b9\uff0c\u5219\u53ef\u4ee5\u7701\u7565\u540d\u79f0\uff0c\u4f8b\u5982\uff1a (a)-[]->()<-[]-(c)","title":"\u591a\u70b9\u5173\u8054\u6a21\u5f0f"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/#_4","text":"\u8bf4\u660e \uff1anGQL\u4e2d\u7684 tag \u6982\u5ff5\u4e0eopenCypher\u4e2d\u7684 label \u6709\u4e00\u4e9b\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u60a8\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a tag \u4e4b\u540e\u624d\u80fd\u4f7f\u7528\u5b83\uff0c\u800c\u4e14 tag \u8fd8\u5b9a\u4e49\u4e86\u5c5e\u6027\u7684\u7c7b\u578b\u3002 \u6a21\u5f0f\u9664\u4e86\u7b80\u5355\u5730\u63cf\u8ff0\u56fe\u4e2d\u7684\u70b9\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u63cf\u8ff0\u70b9\u7684\u6807\u7b7e\u3002\u4f8b\u5982\uff1a (a:User)-[]->(b) \u6a21\u5f0f\u4e5f\u53ef\u4ee5\u63cf\u8ff0\u6709\u591a\u4e2a\u6807\u7b7e\u7684\u70b9\uff0c\u4f8b\u5982\uff1a (a:User:Admin)-[]->(b)","title":"\u6807\u7b7e\u6a21\u5f0f"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/#_5","text":"\u70b9\u548c\u8fb9\u662f\u56fe\u7684\u57fa\u672c\u7ed3\u6784\u3002nGQL\u5728\u8fd9\u4e24\u79cd\u7ed3\u6784\u4e0a\u90fd\u53ef\u4ee5\u589e\u52a0\u5c5e\u6027\uff0c\u65b9\u4fbf\u5b9e\u73b0\u66f4\u4e30\u5bcc\u7684\u6a21\u578b\u3002 \u5728\u6a21\u5f0f\u4e2d\uff0c\u5c5e\u6027\u7684\u8868\u793a\u65b9\u5f0f\u4e3a\uff1a\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u4e00\u4e9b\u952e\u503c\u5bf9\uff0c\u7528\u82f1\u6587\u9017\u53f7\u5206\u9694\u3002\u4f8b\u5982\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u5c5e\u6027\uff1a (a {name: 'Andres', sport: 'Brazilian Ju-Jitsu'}) \u5728\u8fd9\u4e2a\u70b9\u4e0a\u53ef\u4ee5\u6709\u4e00\u6761\u8fb9\u662f\uff1a (a)-[{blocked: false}]->(b)","title":"\u5c5e\u6027\u6a21\u5f0f"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/#_6","text":"\u63cf\u8ff0\u4e00\u6761\u8fb9\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u7bad\u5934\u8fde\u63a5\u4e24\u4e2a\u70b9\u3002 \u60a8\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u63cf\u8ff0\u8fb9\u4ee5\u53ca\u5b83\u7684\u65b9\u5411\u6027\u3002\u5982\u679c\u60a8\u4e0d\u5173\u5fc3\u8fb9\u7684\u65b9\u5411\uff0c\u53ef\u4ee5\u7701\u7565\u7bad\u5934\uff0c\u4f8b\u5982\uff1a (a)-[]-(b) \u548c\u70b9\u4e00\u6837\uff0c\u8fb9\u4e5f\u53ef\u4ee5\u547d\u540d\u3002\u4e00\u5bf9\u65b9\u62ec\u53f7\u7528\u4e8e\u5206\u9694\u7bad\u5934\uff0c\u53d8\u91cf\u653e\u5728\u4e24\u8005\u4e4b\u95f4\u3002\u4f8b\u5982\uff1a (a)-[r]->(b) \u548c\u70b9\u4e0a\u7684\u6807\u7b7e\u4e00\u6837\uff0c\u8fb9\u4e5f\u53ef\u4ee5\u6709\u7c7b\u578b\u3002\u63cf\u8ff0\u8fb9\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a (a)-[r:REL_TYPE]->(b) \u548c\u70b9\u4e0a\u7684\u6807\u7b7e\u4e0d\u540c\uff0c\u4e00\u6761\u8fb9\u53ea\u80fd\u6709\u4e00\u79cd\u8fb9\u7c7b\u578b\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u63cf\u8ff0\u591a\u4e2a\u53ef\u9009\u8fb9\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528\u7ba1\u9053\u7b26\u53f7\uff08|\uff09\u5c06\u53ef\u9009\u503c\u5206\u5f00\uff0c\u4f8b\u5982\uff1a (a)-[r:TYPE1|TYPE2]->(b) \u548c\u70b9\u4e00\u6837\uff0c\u8fb9\u7684\u540d\u79f0\u53ef\u4ee5\u7701\u7565\uff0c\u4f8b\u5982\uff1a (a)-[:REL_TYPE]->(b)","title":"\u8fb9\u6a21\u5f0f"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/#_7","text":"\u5728\u56fe\u4e2d\u6307\u5b9a\u8fb9\u7684\u957f\u5ea6\u6765\u63cf\u8ff0\u591a\u6761\u8fb9\uff08\u4ee5\u53ca\u4e2d\u95f4\u7684\u70b9\uff09\u7ec4\u6210\u7684\u4e00\u6761\u957f\u8def\u5f84\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u591a\u4e2a\u70b9\u548c\u8fb9\u6765\u63cf\u8ff0\u3002\u4f8b\u5982\uff1a (a)-[*2]->(b) \u8be5\u6a21\u5f0f\u63cf\u8ff0\u4e863\u70b92\u8fb9\u7ec4\u6210\u7684\u56fe\uff0c\u5b83\u4eec\u90fd\u5728\u4e00\u6761\u8def\u5f84\u4e0a\uff08\u957f\u5ea6\u4e3a2\uff09\uff0c\u7b49\u4ef7\u4e8e: (a)-[]->()-[]->(b) \u4e5f\u53ef\u4ee5\u6307\u5b9a\u957f\u5ea6\u8303\u56f4\uff0c\u8fd9\u6837\u7684\u8fb9\u6a21\u5f0f\u79f0\u4e3a variable-length edges \uff0c\u4f8b\u5982\uff1a (a)-[*3..5]->(b) *3..5 \u8868\u793a\u6700\u5c0f\u957f\u5ea6\u4e3a3\uff0c\u6700\u5927\u957f\u5ea6\u4e3a5\u3002 \u8be5\u6a21\u5f0f\u63cf\u8ff0\u4e864\u70b93\u8fb9\u30015\u70b94\u8fb9\u62166\u70b95\u8fb9\u7ec4\u6210\u7684\u56fe\u3002 \u60a8\u4e5f\u53ef\u4ee5\u5ffd\u7565\u6700\u5c0f\u957f\u5ea6\uff0c\u53ea\u6307\u5b9a\u6700\u5927\u957f\u5ea6\uff0c\u4f8b\u5982\uff1a (a)-[*..5]->(b) \u8bf4\u660e \uff1a\u5fc5\u987b\u6307\u5b9a\u6700\u5927\u957f\u5ea6\uff0c \u4e0d\u652f\u6301 \u4ec5\u6307\u5b9a\u6700\u5c0f\u957f\u5ea6\uff08 (a)-[*3..]->(b) \uff09\u6216\u90fd\u4e0d\u6307\u5b9a\uff08 (a)-[*]->(b) \uff09\u3002","title":"\u53d8\u957f\u6a21\u5f0f"},{"location":"3.ngql-guide/1.nGQL-overview/3.graph-patterns/#_8","text":"\u4e00\u7cfb\u5217\u8fde\u63a5\u7684\u70b9\u548c\u8fb9\u79f0\u4e3a \u8def\u5f84 \u3002nGQL\u5141\u8bb8\u4f7f\u7528\u53d8\u91cf\u6765\u547d\u540d\u8def\u5f84\uff0c\u4f8b\u5982\uff1a p = (a)-[*3..5]->(b) \u60a8\u53ef\u4ee5\u5728MATCH\u8bed\u53e5\u4e2d\u4f7f\u7528\u8def\u5f84\u53d8\u91cf\u3002","title":"\u8def\u5f84\u53d8\u91cf"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/","text":"CREATE TAG \u00b6 CREATE TAG \u8bed\u53e5\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u6807\u7b7e\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u6267\u884c CREATE TAG \u8bed\u53e5\u9700\u8981\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u62e5\u6709\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684 \u521b\u5efa\u6807\u7b7e\u6743\u9650 \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u8bed\u6cd5 \u00b6 \u521b\u5efa\u6807\u7b7e\u524d\uff0c\u9700\u8981\u5148\u7528 USE \u8bed\u53e5\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u3002 CREATE TAG [IF NOT EXISTS] <tag_name> ([<create_definition>, ...]) [tag_options]; <create_definition> ::= <prop_name> <data_type> [NULL | NOT NULL] <tag_options> ::= <option> [, <option> ...] <option> ::= TTL_DURATION [=] <ttl_duration> | TTL_COL [=] <prop_name> | DEFAULT <default_value> \u6807\u7b7e\u540d\u79f0 \u00b6 IF NOT EXISTS \uff1a\u60a8\u53ef\u4ee5\u4f7f\u7528 IF NOT EXISTS \u5173\u952e\u5b57\u68c0\u6d4b\u5f85\u521b\u5efa\u7684\u6807\u7b7e\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u521b\u5efa\u6807\u7b7e\u3002 \u8bf4\u660e \uff1a\u4ec5\u68c0\u6d4b\u6807\u7b7e\u7684\u540d\u79f0\uff0c\u4e0d\u4f1a\u68c0\u6d4b\u5177\u4f53\u5c5e\u6027\u3002 tag_name \uff1a\u6bcf\u4e2a\u56fe\u7a7a\u95f4\u5185\u7684\u6807\u7b7e\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u6807\u7b7e\u540d\u79f0\u8bbe\u7f6e\u540e\u65e0\u6cd5\u4fee\u6539\u3002\u5141\u8bb8\u7684\u6807\u7b7e\u540d\u79f0\u89c4\u5219\u4e0e\u56fe\u7a7a\u95f4\u540d\u79f0\u89c4\u5219\u76f8\u540c\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 \u3002 \u6807\u7b7e\u5c5e\u6027 \u00b6 prop_name \u5c5e\u6027\u540d\u79f0\u3002\u6bcf\u4e2a\u6807\u7b7e\u4e2d\u7684\u5c5e\u6027\u540d\u79f0\u5fc5\u987b\u552f\u4e00\u3002 data_type \u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u3002\u6570\u636e\u7c7b\u578b\u7684\u5b8c\u6574\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1 \u6570\u503c\u7c7b\u578b \u3001 \u5e03\u5c14 \u7b49\u6587\u6863\u3002 NULL | NOT NULL \u6307\u5b9a\u5c5e\u6027\u503c\u662f\u5426\u652f\u6301\u4e3a NULL \u3002\u9ed8\u8ba4\u503c\u4e3a NULL \u3002 DEFAULT \u6307\u5b9a\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u3002\u9ed8\u8ba4\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6587\u5b57\u503c\u6216Nebula Graph\u652f\u6301\u7684\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u63d2\u5165\u70b9\u65f6\u6ca1\u6709\u6307\u5b9a\u67d0\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 TTL\uff08Time-To-Live\uff09 \u00b6 TTL_DURATION \u6307\u5b9a\u5c5e\u6027\u5b58\u6d3b\u65f6\u95f4\u3002\u8d85\u65f6\u7684\u5c5e\u6027\u5c06\u4f1a\u8fc7\u671f\u3002\u5c5e\u6027\u503c\u548c\u65f6\u95f4\u6233\u5dee\u503c\u4e4b\u548c\u5982\u679c\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u6233\uff0c\u5c5e\u6027\u5c31\u4f1a\u8fc7\u671f\u3002\u9ed8\u8ba4\u503c\u4e3a 0 \uff0c\u8868\u793a\u5c5e\u6027\u6c38\u4e0d\u8fc7\u671f\u3002 TTL_COL \u6307\u5b9a\u8981\u8bbe\u7f6e\u5b58\u6d3b\u65f6\u95f4\u7684\u5c5e\u6027\u3002\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f int \u6216\u8005 timestamp \u3002 \u4e00\u4e2a\u6807\u7b7e\u53ea\u80fd\u6307\u5b9a\u4e00\u4e2a\u5b57\u6bb5\u4e3a TTL_COL \u3002\u66f4\u591aTTL\u7684\u4fe1\u606f\u8bf7\u53c2\u89c1 TTL \u3002 \u793a\u4f8b \u00b6 nebula> CREATE TAG player(name string, age int); # \u521b\u5efa\u6ca1\u6709\u5c5e\u6027\u7684\u6807\u7b7e\u3002 nebula> CREATE TAG no_property(); # \u521b\u5efa\u5305\u542b\u9ed8\u8ba4\u503c\u7684\u6807\u7b7e\u3002 nebula> CREATE TAG player_with_default(name string, age int DEFAULT 20); # \u5bf9\u5b57\u6bb5create_time\u8bbe\u7f6eTTL\u4e3a100\u79d2\u3002 nebula> CREATE TAG woman(name string, age int, \\ married bool, salary double, create_time timestamp) \\ TTL_DURATION = 100, TTL_COL = \"create_time\"; \u521b\u5efa\u6807\u7b7e\u8bf4\u660e \u00b6 \u5c1d\u8bd5\u4f7f\u7528\u65b0\u521b\u5efa\u7684\u6807\u7b7e\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3a\u521b\u5efa\u662f\u5f02\u6b65\u5b9e\u73b0\u7684\u3002 Nebula Graph\u5c06\u5728\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u5185\u5b8c\u6210\u6807\u7b7e\u7684\u521b\u5efa\uff0c\u4e3a\u4e86\u786e\u4fdd\u521b\u5efa\u6210\u529f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u4e4b\u4e00\uff1a \u5728 SHOW TAGS \u8bed\u53e5\u7684\u7ed3\u679c\u4e2d\u67e5\u627e\u65b0\u7684\u6807\u7b7e\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8bf7\u7b49\u5f85\u51e0\u79d2\u91cd\u8bd5\u3002 \u7b49\u5f85\u4e24\u4e2a\u5fc3\u8df3\u5468\u671f\uff0c\u4f8b\u598220\u79d2\u3002 \u5982\u679c\u9700\u8981\u4fee\u6539\u5fc3\u8df3\u95f4\u9694\uff0c\u8bf7\u4e3a \u6240\u6709\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539\u53c2\u6570 heartbeat_interval_secs \u3002","title":"CREATE TAG"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/#create_tag","text":"CREATE TAG \u8bed\u53e5\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u6807\u7b7e\u3002","title":"CREATE TAG"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/#_1","text":"\u6267\u884c CREATE TAG \u8bed\u53e5\u9700\u8981\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u62e5\u6709\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684 \u521b\u5efa\u6807\u7b7e\u6743\u9650 \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/#_2","text":"\u521b\u5efa\u6807\u7b7e\u524d\uff0c\u9700\u8981\u5148\u7528 USE \u8bed\u53e5\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u3002 CREATE TAG [IF NOT EXISTS] <tag_name> ([<create_definition>, ...]) [tag_options]; <create_definition> ::= <prop_name> <data_type> [NULL | NOT NULL] <tag_options> ::= <option> [, <option> ...] <option> ::= TTL_DURATION [=] <ttl_duration> | TTL_COL [=] <prop_name> | DEFAULT <default_value>","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/#_3","text":"IF NOT EXISTS \uff1a\u60a8\u53ef\u4ee5\u4f7f\u7528 IF NOT EXISTS \u5173\u952e\u5b57\u68c0\u6d4b\u5f85\u521b\u5efa\u7684\u6807\u7b7e\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u521b\u5efa\u6807\u7b7e\u3002 \u8bf4\u660e \uff1a\u4ec5\u68c0\u6d4b\u6807\u7b7e\u7684\u540d\u79f0\uff0c\u4e0d\u4f1a\u68c0\u6d4b\u5177\u4f53\u5c5e\u6027\u3002 tag_name \uff1a\u6bcf\u4e2a\u56fe\u7a7a\u95f4\u5185\u7684\u6807\u7b7e\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u6807\u7b7e\u540d\u79f0\u8bbe\u7f6e\u540e\u65e0\u6cd5\u4fee\u6539\u3002\u5141\u8bb8\u7684\u6807\u7b7e\u540d\u79f0\u89c4\u5219\u4e0e\u56fe\u7a7a\u95f4\u540d\u79f0\u89c4\u5219\u76f8\u540c\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 \u3002","title":"\u6807\u7b7e\u540d\u79f0"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/#_4","text":"prop_name \u5c5e\u6027\u540d\u79f0\u3002\u6bcf\u4e2a\u6807\u7b7e\u4e2d\u7684\u5c5e\u6027\u540d\u79f0\u5fc5\u987b\u552f\u4e00\u3002 data_type \u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u3002\u6570\u636e\u7c7b\u578b\u7684\u5b8c\u6574\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1 \u6570\u503c\u7c7b\u578b \u3001 \u5e03\u5c14 \u7b49\u6587\u6863\u3002 NULL | NOT NULL \u6307\u5b9a\u5c5e\u6027\u503c\u662f\u5426\u652f\u6301\u4e3a NULL \u3002\u9ed8\u8ba4\u503c\u4e3a NULL \u3002 DEFAULT \u6307\u5b9a\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u3002\u9ed8\u8ba4\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6587\u5b57\u503c\u6216Nebula Graph\u652f\u6301\u7684\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u63d2\u5165\u70b9\u65f6\u6ca1\u6709\u6307\u5b9a\u67d0\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002","title":"\u6807\u7b7e\u5c5e\u6027"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/#ttltime-to-live","text":"TTL_DURATION \u6307\u5b9a\u5c5e\u6027\u5b58\u6d3b\u65f6\u95f4\u3002\u8d85\u65f6\u7684\u5c5e\u6027\u5c06\u4f1a\u8fc7\u671f\u3002\u5c5e\u6027\u503c\u548c\u65f6\u95f4\u6233\u5dee\u503c\u4e4b\u548c\u5982\u679c\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u6233\uff0c\u5c5e\u6027\u5c31\u4f1a\u8fc7\u671f\u3002\u9ed8\u8ba4\u503c\u4e3a 0 \uff0c\u8868\u793a\u5c5e\u6027\u6c38\u4e0d\u8fc7\u671f\u3002 TTL_COL \u6307\u5b9a\u8981\u8bbe\u7f6e\u5b58\u6d3b\u65f6\u95f4\u7684\u5c5e\u6027\u3002\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f int \u6216\u8005 timestamp \u3002 \u4e00\u4e2a\u6807\u7b7e\u53ea\u80fd\u6307\u5b9a\u4e00\u4e2a\u5b57\u6bb5\u4e3a TTL_COL \u3002\u66f4\u591aTTL\u7684\u4fe1\u606f\u8bf7\u53c2\u89c1 TTL \u3002","title":"TTL\uff08Time-To-Live\uff09"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/#_5","text":"nebula> CREATE TAG player(name string, age int); # \u521b\u5efa\u6ca1\u6709\u5c5e\u6027\u7684\u6807\u7b7e\u3002 nebula> CREATE TAG no_property(); # \u521b\u5efa\u5305\u542b\u9ed8\u8ba4\u503c\u7684\u6807\u7b7e\u3002 nebula> CREATE TAG player_with_default(name string, age int DEFAULT 20); # \u5bf9\u5b57\u6bb5create_time\u8bbe\u7f6eTTL\u4e3a100\u79d2\u3002 nebula> CREATE TAG woman(name string, age int, \\ married bool, salary double, create_time timestamp) \\ TTL_DURATION = 100, TTL_COL = \"create_time\";","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/10.tag-statements/1.create-tag/#_6","text":"\u5c1d\u8bd5\u4f7f\u7528\u65b0\u521b\u5efa\u7684\u6807\u7b7e\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3a\u521b\u5efa\u662f\u5f02\u6b65\u5b9e\u73b0\u7684\u3002 Nebula Graph\u5c06\u5728\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u5185\u5b8c\u6210\u6807\u7b7e\u7684\u521b\u5efa\uff0c\u4e3a\u4e86\u786e\u4fdd\u521b\u5efa\u6210\u529f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u4e4b\u4e00\uff1a \u5728 SHOW TAGS \u8bed\u53e5\u7684\u7ed3\u679c\u4e2d\u67e5\u627e\u65b0\u7684\u6807\u7b7e\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8bf7\u7b49\u5f85\u51e0\u79d2\u91cd\u8bd5\u3002 \u7b49\u5f85\u4e24\u4e2a\u5fc3\u8df3\u5468\u671f\uff0c\u4f8b\u598220\u79d2\u3002 \u5982\u679c\u9700\u8981\u4fee\u6539\u5fc3\u8df3\u95f4\u9694\uff0c\u8bf7\u4e3a \u6240\u6709\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539\u53c2\u6570 heartbeat_interval_secs \u3002","title":"\u521b\u5efa\u6807\u7b7e\u8bf4\u660e"},{"location":"3.ngql-guide/10.tag-statements/2.drop-tag/","text":"DROP TAG \u00b6 DROP TAG \u8bed\u53e5\u53ef\u4ee5\u5220\u9664\u5f53\u524d\u5de5\u4f5c\u7a7a\u95f4\u5185\u7684\u6307\u5b9a\u6807\u7b7e\u3002 \u4e00\u4e2a\u70b9\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\u3002 \u5982\u679c\u70b9\u53ea\u6709\u4e00\u4e2a\u6807\u7b7e\uff0c\u5220\u9664\u8fd9\u4e2a\u6807\u7b7e\u540e\uff0c\u60a8\u5c31 \u65e0\u6cd5\u8bbf\u95ee \u8fd9\u4e2a\u70b9\uff0c\u4e0b\u6b21Compaction\u64cd\u4f5c\u65f6\u4f1a\u5220\u9664\u8be5\u70b9\u3002\u70b9\u4e0a\u7684\u8fb9\u4ecd\u7136\u5b58\u5728\u3002 \u5982\u679c\u70b9\u6709\u591a\u4e2a\u6807\u7b7e\uff0c\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\u6807\u7b7e\uff0c\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u70b9\uff0c\u4f46\u662f \u65e0\u6cd5\u8bbf\u95ee \u5df2\u5220\u9664\u6807\u7b7e\u5b9a\u4e49\u7684\u6240\u6709\u5c5e\u6027\u3002 \u5220\u9664\u6807\u7b7e\u64cd\u4f5c\u4ec5\u5220\u9664Schema\u6570\u636e\uff0c\u786c\u76d8\u4e0a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u4e0d\u4f1a\u7acb\u523b\u5220\u9664\uff0c\u800c\u662f\u5728\u4e0b\u4e00\u6b21Compaction\u64cd\u4f5c\u65f6\u5220\u9664\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u60a8\u767b\u5f55\u7684\u7528\u6237\u5fc5\u987b\u62e5\u6709\u5bf9\u5e94\u6743\u9650\u624d\u80fd\u6267\u884c DROP TAG \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u89d2\u8272\u6743\u9650 \u3002 \u786e\u4fdd\u6807\u7b7e\u4e0d\u5305\u542b\u4efb\u4f55\u7d22\u5f15\uff0c\u5426\u5219 DROP TAG \u65f6\u4f1a\u62a5\u51b2\u7a81\u9519\u8bef [ERROR (-8)]: Conflict! \u3002\u5220\u9664\u7d22\u5f15\u8bf7\u53c2\u89c1 drop index \u3002 \u8bed\u6cd5 \u00b6 DROP TAG [IF EXISTS] <tag_name>; IF NOT EXISTS \uff1a\u68c0\u6d4b\u5f85\u5220\u9664\u7684\u6807\u7b7e\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u5220\u9664\u6807\u7b7e\u3002 tag_name \uff1a\u6307\u5b9a\u8981\u5220\u9664\u7684\u6807\u7b7e\u540d\u79f0\u3002\u4e00\u6b21\u53ea\u80fd\u5220\u9664\u4e00\u4e2a\u6807\u7b7e\u3002 \u793a\u4f8b \u00b6 nebula> CREATE TAG test(p1 string, p2 int); nebula> DROP TAG test;","title":"DROP TAGS"},{"location":"3.ngql-guide/10.tag-statements/2.drop-tag/#drop_tag","text":"DROP TAG \u8bed\u53e5\u53ef\u4ee5\u5220\u9664\u5f53\u524d\u5de5\u4f5c\u7a7a\u95f4\u5185\u7684\u6307\u5b9a\u6807\u7b7e\u3002 \u4e00\u4e2a\u70b9\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\u3002 \u5982\u679c\u70b9\u53ea\u6709\u4e00\u4e2a\u6807\u7b7e\uff0c\u5220\u9664\u8fd9\u4e2a\u6807\u7b7e\u540e\uff0c\u60a8\u5c31 \u65e0\u6cd5\u8bbf\u95ee \u8fd9\u4e2a\u70b9\uff0c\u4e0b\u6b21Compaction\u64cd\u4f5c\u65f6\u4f1a\u5220\u9664\u8be5\u70b9\u3002\u70b9\u4e0a\u7684\u8fb9\u4ecd\u7136\u5b58\u5728\u3002 \u5982\u679c\u70b9\u6709\u591a\u4e2a\u6807\u7b7e\uff0c\u5220\u9664\u5176\u4e2d\u4e00\u4e2a\u6807\u7b7e\uff0c\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u70b9\uff0c\u4f46\u662f \u65e0\u6cd5\u8bbf\u95ee \u5df2\u5220\u9664\u6807\u7b7e\u5b9a\u4e49\u7684\u6240\u6709\u5c5e\u6027\u3002 \u5220\u9664\u6807\u7b7e\u64cd\u4f5c\u4ec5\u5220\u9664Schema\u6570\u636e\uff0c\u786c\u76d8\u4e0a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u4e0d\u4f1a\u7acb\u523b\u5220\u9664\uff0c\u800c\u662f\u5728\u4e0b\u4e00\u6b21Compaction\u64cd\u4f5c\u65f6\u5220\u9664\u3002","title":"DROP TAG"},{"location":"3.ngql-guide/10.tag-statements/2.drop-tag/#_1","text":"\u60a8\u767b\u5f55\u7684\u7528\u6237\u5fc5\u987b\u62e5\u6709\u5bf9\u5e94\u6743\u9650\u624d\u80fd\u6267\u884c DROP TAG \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u89d2\u8272\u6743\u9650 \u3002 \u786e\u4fdd\u6807\u7b7e\u4e0d\u5305\u542b\u4efb\u4f55\u7d22\u5f15\uff0c\u5426\u5219 DROP TAG \u65f6\u4f1a\u62a5\u51b2\u7a81\u9519\u8bef [ERROR (-8)]: Conflict! \u3002\u5220\u9664\u7d22\u5f15\u8bf7\u53c2\u89c1 drop index \u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/10.tag-statements/2.drop-tag/#_2","text":"DROP TAG [IF EXISTS] <tag_name>; IF NOT EXISTS \uff1a\u68c0\u6d4b\u5f85\u5220\u9664\u7684\u6807\u7b7e\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u5220\u9664\u6807\u7b7e\u3002 tag_name \uff1a\u6307\u5b9a\u8981\u5220\u9664\u7684\u6807\u7b7e\u540d\u79f0\u3002\u4e00\u6b21\u53ea\u80fd\u5220\u9664\u4e00\u4e2a\u6807\u7b7e\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/10.tag-statements/2.drop-tag/#_3","text":"nebula> CREATE TAG test(p1 string, p2 int); nebula> DROP TAG test;","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/10.tag-statements/3.alter-tag/","text":"ALTER TAG \u00b6 ALTER TAG \u8bed\u53e5\u53ef\u4ee5\u4fee\u6539\u6807\u7b7e\u7684\u7ed3\u6784\u3002\u4f8b\u5982\u589e\u5220\u5c5e\u6027\u3001\u4fee\u6539\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u5c5e\u6027\u8bbe\u7f6e\u3001\u4fee\u6539 TTL \uff08Time-To-Live\uff09\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u60a8\u767b\u5f55\u7684\u7528\u6237\u5fc5\u987b\u62e5\u6709\u5bf9\u5e94\u6743\u9650\u624d\u80fd\u6267\u884c ALTER TAG \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u89d2\u8272\u6743\u9650 \u3002 \u786e\u4fdd\u8981\u4fee\u6539\u7684\u5c5e\u6027\u4e0d\u5305\u542b\u7d22\u5f15\uff0c\u5426\u5219 ALTER TAG \u65f6\u4f1a\u62a5\u51b2\u7a81\u9519\u8bef [ERROR (-8)]: Conflict! \u3002\u5220\u9664\u7d22\u5f15\u8bf7\u53c2\u89c1 drop index \u3002 \u8bed\u6cd5 \u00b6 ALTER TAG <tag_name> <alter_definition> [, alter_definition] ...] [ttl_definition [, ttl_definition] ... ]; alter_definition: | ADD (prop_name data_type) | DROP (prop_name) | CHANGE (prop_name data_type) ttl_definition: TTL_DURATION = ttl_duration, TTL_COL = prop_name tag_name \uff1a\u6307\u5b9a\u8981\u4fee\u6539\u7684\u6807\u7b7e\u540d\u79f0\u3002\u4e00\u6b21\u53ea\u80fd\u4fee\u6539\u4e00\u4e2a\u6807\u7b7e\u3002\u8bf7\u786e\u4fdd\u8981\u4fee\u6539\u7684\u6807\u7b7e\u5728\u5f53\u524d\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u5b58\u5728\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u53ef\u4ee5\u5728\u4e00\u4e2a ALTER TAG \u8bed\u53e5\u4e2d\u4f7f\u7528\u591a\u4e2a ADD \u3001 DROP \u548c CHANGE \u5b50\u53e5\uff0c\u5b50\u53e5\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 \u793a\u4f8b \u00b6 nebula> CREATE TAG t1 (p1 string, p2 int); nebula> ALTER TAG t1 ADD (p3 int, p4 string); nebula> ALTER TAG t1 TTL_DURATION = 2, TTL_COL = \"p2\"; \u4fee\u6539\u6807\u7b7e\u8bf4\u660e \u00b6 \u5c1d\u8bd5\u4f7f\u7528\u521a\u4fee\u6539\u7684\u6807\u7b7e\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3a\u4fee\u6539\u662f\u5f02\u6b65\u5b9e\u73b0\u7684\u3002 Nebula Graph\u5c06\u5728\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u5185\u5b8c\u6210\u6807\u7b7e\u7684\u4fee\u6539\uff0c\u4e3a\u4e86\u786e\u4fdd\u4fee\u6539\u6210\u529f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u4e4b\u4e00\uff1a \u5728 DESCRIBE TAG \u8bed\u53e5\u7684\u7ed3\u679c\u4e2d\u67e5\u770b\u6807\u7b7e\u4fe1\u606f\uff0c\u786e\u8ba4\u4fee\u6539\u6210\u529f\u3002\u5982\u679c\u6ca1\u6709\u4fee\u6539\u6210\u529f\uff0c\u8bf7\u7b49\u5f85\u51e0\u79d2\u91cd\u8bd5\u3002 \u7b49\u5f85\u4e24\u4e2a\u5fc3\u8df3\u5468\u671f\uff0c\u4f8b\u598220\u79d2\u3002 \u5982\u679c\u9700\u8981\u4fee\u6539\u5fc3\u8df3\u95f4\u9694\uff0c\u8bf7\u4e3a \u6240\u6709\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539\u53c2\u6570 heartbeat_interval_secs \u3002","title":"ALTER TAG"},{"location":"3.ngql-guide/10.tag-statements/3.alter-tag/#alter_tag","text":"ALTER TAG \u8bed\u53e5\u53ef\u4ee5\u4fee\u6539\u6807\u7b7e\u7684\u7ed3\u6784\u3002\u4f8b\u5982\u589e\u5220\u5c5e\u6027\u3001\u4fee\u6539\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u5c5e\u6027\u8bbe\u7f6e\u3001\u4fee\u6539 TTL \uff08Time-To-Live\uff09\u3002","title":"ALTER TAG"},{"location":"3.ngql-guide/10.tag-statements/3.alter-tag/#_1","text":"\u60a8\u767b\u5f55\u7684\u7528\u6237\u5fc5\u987b\u62e5\u6709\u5bf9\u5e94\u6743\u9650\u624d\u80fd\u6267\u884c ALTER TAG \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u89d2\u8272\u6743\u9650 \u3002 \u786e\u4fdd\u8981\u4fee\u6539\u7684\u5c5e\u6027\u4e0d\u5305\u542b\u7d22\u5f15\uff0c\u5426\u5219 ALTER TAG \u65f6\u4f1a\u62a5\u51b2\u7a81\u9519\u8bef [ERROR (-8)]: Conflict! \u3002\u5220\u9664\u7d22\u5f15\u8bf7\u53c2\u89c1 drop index \u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/10.tag-statements/3.alter-tag/#_2","text":"ALTER TAG <tag_name> <alter_definition> [, alter_definition] ...] [ttl_definition [, ttl_definition] ... ]; alter_definition: | ADD (prop_name data_type) | DROP (prop_name) | CHANGE (prop_name data_type) ttl_definition: TTL_DURATION = ttl_duration, TTL_COL = prop_name tag_name \uff1a\u6307\u5b9a\u8981\u4fee\u6539\u7684\u6807\u7b7e\u540d\u79f0\u3002\u4e00\u6b21\u53ea\u80fd\u4fee\u6539\u4e00\u4e2a\u6807\u7b7e\u3002\u8bf7\u786e\u4fdd\u8981\u4fee\u6539\u7684\u6807\u7b7e\u5728\u5f53\u524d\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u5b58\u5728\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u53ef\u4ee5\u5728\u4e00\u4e2a ALTER TAG \u8bed\u53e5\u4e2d\u4f7f\u7528\u591a\u4e2a ADD \u3001 DROP \u548c CHANGE \u5b50\u53e5\uff0c\u5b50\u53e5\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/10.tag-statements/3.alter-tag/#_3","text":"nebula> CREATE TAG t1 (p1 string, p2 int); nebula> ALTER TAG t1 ADD (p3 int, p4 string); nebula> ALTER TAG t1 TTL_DURATION = 2, TTL_COL = \"p2\";","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/10.tag-statements/3.alter-tag/#_4","text":"\u5c1d\u8bd5\u4f7f\u7528\u521a\u4fee\u6539\u7684\u6807\u7b7e\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3a\u4fee\u6539\u662f\u5f02\u6b65\u5b9e\u73b0\u7684\u3002 Nebula Graph\u5c06\u5728\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u5185\u5b8c\u6210\u6807\u7b7e\u7684\u4fee\u6539\uff0c\u4e3a\u4e86\u786e\u4fdd\u4fee\u6539\u6210\u529f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u4e4b\u4e00\uff1a \u5728 DESCRIBE TAG \u8bed\u53e5\u7684\u7ed3\u679c\u4e2d\u67e5\u770b\u6807\u7b7e\u4fe1\u606f\uff0c\u786e\u8ba4\u4fee\u6539\u6210\u529f\u3002\u5982\u679c\u6ca1\u6709\u4fee\u6539\u6210\u529f\uff0c\u8bf7\u7b49\u5f85\u51e0\u79d2\u91cd\u8bd5\u3002 \u7b49\u5f85\u4e24\u4e2a\u5fc3\u8df3\u5468\u671f\uff0c\u4f8b\u598220\u79d2\u3002 \u5982\u679c\u9700\u8981\u4fee\u6539\u5fc3\u8df3\u95f4\u9694\uff0c\u8bf7\u4e3a \u6240\u6709\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539\u53c2\u6570 heartbeat_interval_secs \u3002","title":"\u4fee\u6539\u6807\u7b7e\u8bf4\u660e"},{"location":"3.ngql-guide/10.tag-statements/4.show-tags/","text":"SHOW TAGS \u00b6 SHOW TAGS \u8bed\u53e5\u663e\u793a\u5f53\u524d\u56fe\u7a7a\u95f4\u5185\u7684\u6240\u6709\u6807\u7b7e\u540d\u79f0\u3002 \u6267\u884c SHOW TAGS \u8bed\u53e5\u4e0d\u9700\u8981\u4efb\u4f55\u6743\u9650\uff0c\u4f46\u662f\u8fd4\u56de\u7ed3\u679c\u7531\u60a8\u767b\u5f55\u7684\u7528\u6237 \u6743\u9650 \u51b3\u5b9a\u3002 \u8bed\u6cd5 \u00b6 SHOW TAGS; \u793a\u4f8b \u00b6 nebula> SHOW TAGS; +----------+ | Name | +----------+ | \"player\" | +----------+ | \"team\" | +----------+","title":"SHOW TAGS"},{"location":"3.ngql-guide/10.tag-statements/4.show-tags/#show_tags","text":"SHOW TAGS \u8bed\u53e5\u663e\u793a\u5f53\u524d\u56fe\u7a7a\u95f4\u5185\u7684\u6240\u6709\u6807\u7b7e\u540d\u79f0\u3002 \u6267\u884c SHOW TAGS \u8bed\u53e5\u4e0d\u9700\u8981\u4efb\u4f55\u6743\u9650\uff0c\u4f46\u662f\u8fd4\u56de\u7ed3\u679c\u7531\u60a8\u767b\u5f55\u7684\u7528\u6237 \u6743\u9650 \u51b3\u5b9a\u3002","title":"SHOW TAGS"},{"location":"3.ngql-guide/10.tag-statements/4.show-tags/#_1","text":"SHOW TAGS;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/10.tag-statements/4.show-tags/#_2","text":"nebula> SHOW TAGS; +----------+ | Name | +----------+ | \"player\" | +----------+ | \"team\" | +----------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/10.tag-statements/5.describe-tag/","text":"DESCRIBE TAG \u00b6 DESCRIBE TAG \u663e\u793a\u6307\u5b9a\u6807\u7b7e\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\u5b57\u6bb5\u540d\u79f0\u3001\u6570\u636e\u7c7b\u578b\u7b49\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u60a8\u767b\u5f55\u7684\u7528\u6237\u5fc5\u987b\u62e5\u6709\u5bf9\u5e94\u6743\u9650\u624d\u80fd\u6267\u884c DESCRIBE TAG \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u89d2\u8272\u6743\u9650 \u3002 \u8bed\u6cd5 \u00b6 DESC[RIBE] TAG <tag_name>; DESCRIBE \u53ef\u4ee5\u7f29\u5199\u4e3a DESC \u3002 \u793a\u4f8b \u00b6 nebula> DESCRIBE TAG player; +--------+----------+-------+-----------+ | Field | Type | Null | Default | +--------+----------+-------+-----------+ | \"name\" | \"string\" | \"YES\" | __EMPTY__ | +--------+----------+-------+-----------+ | \"age\" | \"int64\" | \"YES\" | __EMPTY__ | +--------+----------+-------+-----------+","title":"DESCRIBE TAG"},{"location":"3.ngql-guide/10.tag-statements/5.describe-tag/#describe_tag","text":"DESCRIBE TAG \u663e\u793a\u6307\u5b9a\u6807\u7b7e\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\u5b57\u6bb5\u540d\u79f0\u3001\u6570\u636e\u7c7b\u578b\u7b49\u3002","title":"DESCRIBE TAG"},{"location":"3.ngql-guide/10.tag-statements/5.describe-tag/#_1","text":"\u60a8\u767b\u5f55\u7684\u7528\u6237\u5fc5\u987b\u62e5\u6709\u5bf9\u5e94\u6743\u9650\u624d\u80fd\u6267\u884c DESCRIBE TAG \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u89d2\u8272\u6743\u9650 \u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/10.tag-statements/5.describe-tag/#_2","text":"DESC[RIBE] TAG <tag_name>; DESCRIBE \u53ef\u4ee5\u7f29\u5199\u4e3a DESC \u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/10.tag-statements/5.describe-tag/#_3","text":"nebula> DESCRIBE TAG player; +--------+----------+-------+-----------+ | Field | Type | Null | Default | +--------+----------+-------+-----------+ | \"name\" | \"string\" | \"YES\" | __EMPTY__ | +--------+----------+-------+-----------+ | \"age\" | \"int64\" | \"YES\" | __EMPTY__ | +--------+----------+-------+-----------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/11.edge-type-statements/1.create-edge/","text":"CREATE EDGE \u00b6 CREATE EDGE \u8bed\u53e5\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u8fb9\u7c7b\u578b\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u6267\u884c CREATE EDGE \u8bed\u53e5\u9700\u8981\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u62e5\u6709\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684 \u521b\u5efa\u8fb9\u7c7b\u578b\u6743\u9650 \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u8bed\u6cd5 \u00b6 \u521b\u5efa\u8fb9\u7c7b\u578b\u524d\uff0c\u9700\u8981\u5148\u7528 USE \u8bed\u53e5\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u3002 CREATE EDGE [IF NOT EXISTS] <edge_type_name> ([<create_definition>, ...]) [edge_type_options] <create_definition> ::= <prop_name> <data_type> <edge_type_options> ::= <option> [, <option> ...] <option> ::= TTL_DURATION [=] <ttl_duration> | TTL_COL [=] <prop_name> | DEFAULT <default_value> \u8fb9\u7c7b\u578b\u540d\u79f0 \u00b6 IF NOT EXISTS \uff1a\u68c0\u6d4b\u5f85\u521b\u5efa\u7684\u8fb9\u7c7b\u578b\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u521b\u5efa\u8fb9\u7c7b\u578b\u3002 \u8bf4\u660e \uff1a\u4ec5\u68c0\u6d4b\u8fb9\u7c7b\u578b\u7684\u540d\u79f0\uff0c\u4e0d\u4f1a\u68c0\u6d4b\u5177\u4f53\u5c5e\u6027\u3002 - edge_type_name \uff1a\u6bcf\u4e2a\u56fe\u7a7a\u95f4\u5185\u7684\u8fb9\u7c7b\u578b\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u8fb9\u7c7b\u578b\u540d\u79f0\u8bbe\u7f6e\u540e\u65e0\u6cd5\u4fee\u6539\u3002\u5141\u8bb8\u7684\u8fb9\u7c7b\u578b\u540d\u79f0\u89c4\u5219\u4e0e\u56fe\u7a7a\u95f4\u540d\u79f0\u89c4\u5219\u76f8\u540c\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 \u3002 \u8fb9\u7c7b\u578b\u5c5e\u6027 \u00b6 prop_name \u5c5e\u6027\u540d\u79f0\u3002\u6bcf\u4e2a\u8fb9\u7c7b\u578b\u4e2d\u7684\u5c5e\u6027\u540d\u79f0\u5fc5\u987b\u552f\u4e00\u3002 data_type \u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u3002\u6570\u636e\u7c7b\u578b\u7684\u5b8c\u6574\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1 \u6570\u503c\u7c7b\u578b \u3001 \u5e03\u5c14 \u7b49\u6587\u6863\u3002 NULL | NOT NULL \u6307\u5b9a\u5c5e\u6027\u503c\u662f\u5426\u652f\u6301\u4e3a NULL \u3002\u9ed8\u8ba4\u503c\u4e3a NULL \u3002 DEFAULT \u6307\u5b9a\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u3002\u9ed8\u8ba4\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6587\u5b57\u503c\u6216Nebula Graph\u652f\u6301\u7684\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u63d2\u5165\u8fb9\u65f6\u6ca1\u6709\u6307\u5b9a\u67d0\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 TTL\uff08Time-To-Live\uff09 \u00b6 TTL_DURATION \u6307\u5b9a\u5c5e\u6027\u5b58\u6d3b\u65f6\u95f4\u3002\u8d85\u65f6\u7684\u5c5e\u6027\u5c06\u4f1a\u8fc7\u671f\u3002\u5c5e\u6027\u503c\u548c\u65f6\u95f4\u6233\u5dee\u503c\u4e4b\u548c\u5982\u679c\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u6233\uff0c\u5c5e\u6027\u5c31\u4f1a\u8fc7\u671f\u3002\u9ed8\u8ba4\u503c\u4e3a 0 \uff0c\u8868\u793a\u5c5e\u6027\u6c38\u4e0d\u8fc7\u671f\u3002 TTL_COL \u6307\u5b9a\u8981\u8bbe\u7f6e\u5b58\u6d3b\u65f6\u95f4\u7684\u5c5e\u6027\u3002\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f int \u6216\u8005 timestamp \u3002 \u4e00\u4e2a\u8fb9\u7c7b\u578b\u53ea\u80fd\u6307\u5b9a\u4e00\u4e2a\u5b57\u6bb5\u4e3a TTL_COL \u3002\u66f4\u591aTTL\u7684\u4fe1\u606f\u8bf7\u53c2\u89c1 TTL \u3002 \u793a\u4f8b \u00b6 nebula> CREATE EDGE follow(degree int); # \u521b\u5efa\u6ca1\u6709\u5c5e\u6027\u7684\u8fb9\u7c7b\u578b\u3002 nebula> CREATE EDGE no_property(); # \u521b\u5efa\u5305\u542b\u9ed8\u8ba4\u503c\u7684\u8fb9\u7c7b\u578b\u3002 nebula> CREATE EDGE follow_with_default(degree int DEFAULT 20); # \u5bf9\u5b57\u6bb5p2\u8bbe\u7f6eTTL\u4e3a100\u79d2\u3002 nebula> CREATE EDGE e1(p1 string, p2 int, p3 timestamp) \\ TTL_DURATION = 100, TTL_COL = \"p2\";","title":"CREATE EDGE"},{"location":"3.ngql-guide/11.edge-type-statements/1.create-edge/#create_edge","text":"CREATE EDGE \u8bed\u53e5\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u8fb9\u7c7b\u578b\u3002","title":"CREATE EDGE"},{"location":"3.ngql-guide/11.edge-type-statements/1.create-edge/#_1","text":"\u6267\u884c CREATE EDGE \u8bed\u53e5\u9700\u8981\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u62e5\u6709\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684 \u521b\u5efa\u8fb9\u7c7b\u578b\u6743\u9650 \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/11.edge-type-statements/1.create-edge/#_2","text":"\u521b\u5efa\u8fb9\u7c7b\u578b\u524d\uff0c\u9700\u8981\u5148\u7528 USE \u8bed\u53e5\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u3002 CREATE EDGE [IF NOT EXISTS] <edge_type_name> ([<create_definition>, ...]) [edge_type_options] <create_definition> ::= <prop_name> <data_type> <edge_type_options> ::= <option> [, <option> ...] <option> ::= TTL_DURATION [=] <ttl_duration> | TTL_COL [=] <prop_name> | DEFAULT <default_value>","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/11.edge-type-statements/1.create-edge/#_3","text":"IF NOT EXISTS \uff1a\u68c0\u6d4b\u5f85\u521b\u5efa\u7684\u8fb9\u7c7b\u578b\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u521b\u5efa\u8fb9\u7c7b\u578b\u3002 \u8bf4\u660e \uff1a\u4ec5\u68c0\u6d4b\u8fb9\u7c7b\u578b\u7684\u540d\u79f0\uff0c\u4e0d\u4f1a\u68c0\u6d4b\u5177\u4f53\u5c5e\u6027\u3002 - edge_type_name \uff1a\u6bcf\u4e2a\u56fe\u7a7a\u95f4\u5185\u7684\u8fb9\u7c7b\u578b\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u8fb9\u7c7b\u578b\u540d\u79f0\u8bbe\u7f6e\u540e\u65e0\u6cd5\u4fee\u6539\u3002\u5141\u8bb8\u7684\u8fb9\u7c7b\u578b\u540d\u79f0\u89c4\u5219\u4e0e\u56fe\u7a7a\u95f4\u540d\u79f0\u89c4\u5219\u76f8\u540c\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 \u3002","title":"\u8fb9\u7c7b\u578b\u540d\u79f0"},{"location":"3.ngql-guide/11.edge-type-statements/1.create-edge/#_4","text":"prop_name \u5c5e\u6027\u540d\u79f0\u3002\u6bcf\u4e2a\u8fb9\u7c7b\u578b\u4e2d\u7684\u5c5e\u6027\u540d\u79f0\u5fc5\u987b\u552f\u4e00\u3002 data_type \u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u3002\u6570\u636e\u7c7b\u578b\u7684\u5b8c\u6574\u8bf4\u660e\uff0c\u8bf7\u53c2\u89c1 \u6570\u503c\u7c7b\u578b \u3001 \u5e03\u5c14 \u7b49\u6587\u6863\u3002 NULL | NOT NULL \u6307\u5b9a\u5c5e\u6027\u503c\u662f\u5426\u652f\u6301\u4e3a NULL \u3002\u9ed8\u8ba4\u503c\u4e3a NULL \u3002 DEFAULT \u6307\u5b9a\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u3002\u9ed8\u8ba4\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u6587\u5b57\u503c\u6216Nebula Graph\u652f\u6301\u7684\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u63d2\u5165\u8fb9\u65f6\u6ca1\u6709\u6307\u5b9a\u67d0\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002","title":"\u8fb9\u7c7b\u578b\u5c5e\u6027"},{"location":"3.ngql-guide/11.edge-type-statements/1.create-edge/#ttltime-to-live","text":"TTL_DURATION \u6307\u5b9a\u5c5e\u6027\u5b58\u6d3b\u65f6\u95f4\u3002\u8d85\u65f6\u7684\u5c5e\u6027\u5c06\u4f1a\u8fc7\u671f\u3002\u5c5e\u6027\u503c\u548c\u65f6\u95f4\u6233\u5dee\u503c\u4e4b\u548c\u5982\u679c\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u6233\uff0c\u5c5e\u6027\u5c31\u4f1a\u8fc7\u671f\u3002\u9ed8\u8ba4\u503c\u4e3a 0 \uff0c\u8868\u793a\u5c5e\u6027\u6c38\u4e0d\u8fc7\u671f\u3002 TTL_COL \u6307\u5b9a\u8981\u8bbe\u7f6e\u5b58\u6d3b\u65f6\u95f4\u7684\u5c5e\u6027\u3002\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f int \u6216\u8005 timestamp \u3002 \u4e00\u4e2a\u8fb9\u7c7b\u578b\u53ea\u80fd\u6307\u5b9a\u4e00\u4e2a\u5b57\u6bb5\u4e3a TTL_COL \u3002\u66f4\u591aTTL\u7684\u4fe1\u606f\u8bf7\u53c2\u89c1 TTL \u3002","title":"TTL\uff08Time-To-Live\uff09"},{"location":"3.ngql-guide/11.edge-type-statements/1.create-edge/#_5","text":"nebula> CREATE EDGE follow(degree int); # \u521b\u5efa\u6ca1\u6709\u5c5e\u6027\u7684\u8fb9\u7c7b\u578b\u3002 nebula> CREATE EDGE no_property(); # \u521b\u5efa\u5305\u542b\u9ed8\u8ba4\u503c\u7684\u8fb9\u7c7b\u578b\u3002 nebula> CREATE EDGE follow_with_default(degree int DEFAULT 20); # \u5bf9\u5b57\u6bb5p2\u8bbe\u7f6eTTL\u4e3a100\u79d2\u3002 nebula> CREATE EDGE e1(p1 string, p2 int, p3 timestamp) \\ TTL_DURATION = 100, TTL_COL = \"p2\";","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/12.vertex-statements/1.insert-vertex/","text":"INSERT VERTEX \u00b6 INSERT VERTEX \u8bed\u53e5\u53ef\u4ee5\u5728Nebula Graph\u5b9e\u4f8b\u7684\u6307\u5b9a\u56fe\u7a7a\u95f4\u4e2d\u63d2\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u70b9\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u6267\u884c INSERT VERTEX \u8bed\u53e5\u9700\u8981\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u62e5\u6709\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684 \u63d2\u5165\u70b9\u6743\u9650 \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u8bed\u6cd5 \u00b6 INSERT VERTEX <tag_name> (<prop_name_list>) [, <tag_name> (<prop_name_list>), ...] {VALUES | VALUE} VID: (<prop_value_list>[, <prop_value_list>]) prop_name_list: [prop_name [, prop_name] ...] prop_value_list: [prop_value [, prop_value] ...] tag_name \uff1a\u70b9\u5173\u8054\u7684\u6807\u7b7e\uff08\u70b9\u7c7b\u578b\uff09\u3002\u6807\u7b7e\u5fc5\u987b\u63d0\u524d\u521b\u5efa\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 CREATE TAG \u3002 prop_name_list \uff1a\u9700\u8981\u8bbe\u7f6e\u7684\u5c5e\u6027\u540d\u79f0\u5217\u8868\u3002 VID \uff1a\u70b9ID\u3002\u5728Nebula Graph 2.0\u4e2d\u652f\u6301\u5b57\u7b26\u4e32\u548c\u6574\u6570\uff0c\u9700\u8981\u5728\u521b\u5efa\u56fe\u7a7a\u95f4\u65f6\u8bbe\u7f6e\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 CREATE SPACE \u3002 prop_value_list \uff1a\u6839\u636e prop_name_list \u586b\u5199\u5c5e\u6027\u503c\u3002\u5982\u679c\u5c5e\u6027\u503c\u548c\u6807\u7b7e\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u4f1a\u8fd4\u56de\u9519\u8bef\u3002\u5982\u679c\u6ca1\u6709\u586b\u5199\u5c5e\u6027\u503c\uff0c\u800c\u6807\u7b7e\u4e2d\u5bf9\u5e94\u7684\u5c5e\u6027\u8bbe\u7f6e\u4e3a NOT NULL \uff0c\u4e5f\u4f1a\u8fd4\u56de\u9519\u8bef\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 CREATE TAG \u3002 \u793a\u4f8b \u00b6 # \u63d2\u5165\u4e0d\u5305\u542b\u5c5e\u6027\u7684\u70b9\u3002 nebula> CREATE TAG t1(); nebula> INSERT VERTEX t1() VALUE \"10\":(); nebula> CREATE TAG t2 (name string, age int); nebula> INSERT VERTEX t2 (name, age) VALUES \"11\":(\"n1\", 12); # \u521b\u5efa\u5931\u8d25\uff0c\u56e0\u4e3a\"a13\"\u4e0d\u662fint\u7c7b\u578b\u3002 nebula> INSERT VERTEX t2 (name, age) VALUES \"12\":(\"n1\", \"a13\"); # \u4e00\u6b21\u63d2\u51652\u4e2a\u70b9\u3002 nebula> INSERT VERTEX t2 (name, age) VALUES \"13\":(\"n3\", 12), \"14\":(\"n4\", 8); nebula> CREATE TAG t3(p1 int); nebula> CREATE TAG t4(p2 string); # \u4e00\u6b21\u63d2\u5165\u4e24\u4e2a\u6807\u7b7e\u7684\u5c5e\u6027\u5230\u540c\u4e00\u4e2a\u70b9\u3002 nebula> INSERT VERTEX t3 (p1), t4(p2) VALUES \"21\": (321, \"hello\"); \u4e00\u4e2a\u70b9\u53ef\u4ee5\u591a\u6b21\u63d2\u5165\u5c5e\u6027\u503c\uff0c\u4ee5\u6700\u540e\u4e00\u6b21\u4e3a\u51c6\u3002 # \u591a\u6b21\u63d2\u5165\u5c5e\u6027\u503c\u3002 nebula> INSERT VERTEX t2 (name, age) VALUES \"11\":(\"n2\", 13); nebula> INSERT VERTEX t2 (name, age) VALUES \"11\":(\"n3\", 14); nebula> INSERT VERTEX t2 (name, age) VALUES \"11\":(\"n4\", 15); nebula> FETCH PROP ON t2 \"11\"; +---------------------------------+ | vertices_ | +---------------------------------+ | (\"11\" :t2{age: 15, name: \"n4\"}) | +---------------------------------+ nebula> CREATE TAG t5(p1 fixed_string(5) NOT NULL, p2 int, p3 int DEFAULT NULL); nebula> INSERT VERTEX t5(p1, p2, p3) VALUES \"001\":(\"Abe\", 2, 3); # \u63d2\u5165\u5931\u8d25\uff0c\u56e0\u4e3a\u5c5e\u6027p1\u4e0d\u80fd\u4e3aNULL\u3002 nebula> INSERT VERTEX t5(p1, p2, p3) VALUES \"002\":(NULL, 4, 5); [ERROR (-8)]: Storage Error: The not null field cannot be null. # \u5c5e\u6027p3\u4e3a\u9ed8\u8ba4\u503cNULL\u3002 nebula> INSERT VERTEX t5(p1, p2) VALUES \"003\":(\"cd\", 5); nebula> FETCH PROP ON t5 \"003\"; +--------------------------------------------+ | vertices_ | +--------------------------------------------+ | (\"003\" :t5{p1: \"cd\", p2: 5, p3: __NULL__}) | +--------------------------------------------+ # \u5c5e\u6027p1\u6700\u5927\u957f\u5ea6\u4e3a5\uff0c\u56e0\u6b64\u4f1a\u88ab\u622a\u65ad\u3002 nebula> INSERT VERTEX t5(p1, p2) VALUES \"004\":(\"shalalalala\", 4); nebula> FETCH PROP on t5 \"004\"; +-----------------------------------------------+ | vertices_ | +-----------------------------------------------+ | (\"004\" :t5{p1: \"shala\", p2: 4, p3: __NULL__}) | +-----------------------------------------------+","title":"INSERT VERTEX"},{"location":"3.ngql-guide/12.vertex-statements/1.insert-vertex/#insert_vertex","text":"INSERT VERTEX \u8bed\u53e5\u53ef\u4ee5\u5728Nebula Graph\u5b9e\u4f8b\u7684\u6307\u5b9a\u56fe\u7a7a\u95f4\u4e2d\u63d2\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u70b9\u3002","title":"INSERT VERTEX"},{"location":"3.ngql-guide/12.vertex-statements/1.insert-vertex/#_1","text":"\u6267\u884c INSERT VERTEX \u8bed\u53e5\u9700\u8981\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u62e5\u6709\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684 \u63d2\u5165\u70b9\u6743\u9650 \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/12.vertex-statements/1.insert-vertex/#_2","text":"INSERT VERTEX <tag_name> (<prop_name_list>) [, <tag_name> (<prop_name_list>), ...] {VALUES | VALUE} VID: (<prop_value_list>[, <prop_value_list>]) prop_name_list: [prop_name [, prop_name] ...] prop_value_list: [prop_value [, prop_value] ...] tag_name \uff1a\u70b9\u5173\u8054\u7684\u6807\u7b7e\uff08\u70b9\u7c7b\u578b\uff09\u3002\u6807\u7b7e\u5fc5\u987b\u63d0\u524d\u521b\u5efa\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 CREATE TAG \u3002 prop_name_list \uff1a\u9700\u8981\u8bbe\u7f6e\u7684\u5c5e\u6027\u540d\u79f0\u5217\u8868\u3002 VID \uff1a\u70b9ID\u3002\u5728Nebula Graph 2.0\u4e2d\u652f\u6301\u5b57\u7b26\u4e32\u548c\u6574\u6570\uff0c\u9700\u8981\u5728\u521b\u5efa\u56fe\u7a7a\u95f4\u65f6\u8bbe\u7f6e\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1 CREATE SPACE \u3002 prop_value_list \uff1a\u6839\u636e prop_name_list \u586b\u5199\u5c5e\u6027\u503c\u3002\u5982\u679c\u5c5e\u6027\u503c\u548c\u6807\u7b7e\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u4f1a\u8fd4\u56de\u9519\u8bef\u3002\u5982\u679c\u6ca1\u6709\u586b\u5199\u5c5e\u6027\u503c\uff0c\u800c\u6807\u7b7e\u4e2d\u5bf9\u5e94\u7684\u5c5e\u6027\u8bbe\u7f6e\u4e3a NOT NULL \uff0c\u4e5f\u4f1a\u8fd4\u56de\u9519\u8bef\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 CREATE TAG \u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/12.vertex-statements/1.insert-vertex/#_3","text":"# \u63d2\u5165\u4e0d\u5305\u542b\u5c5e\u6027\u7684\u70b9\u3002 nebula> CREATE TAG t1(); nebula> INSERT VERTEX t1() VALUE \"10\":(); nebula> CREATE TAG t2 (name string, age int); nebula> INSERT VERTEX t2 (name, age) VALUES \"11\":(\"n1\", 12); # \u521b\u5efa\u5931\u8d25\uff0c\u56e0\u4e3a\"a13\"\u4e0d\u662fint\u7c7b\u578b\u3002 nebula> INSERT VERTEX t2 (name, age) VALUES \"12\":(\"n1\", \"a13\"); # \u4e00\u6b21\u63d2\u51652\u4e2a\u70b9\u3002 nebula> INSERT VERTEX t2 (name, age) VALUES \"13\":(\"n3\", 12), \"14\":(\"n4\", 8); nebula> CREATE TAG t3(p1 int); nebula> CREATE TAG t4(p2 string); # \u4e00\u6b21\u63d2\u5165\u4e24\u4e2a\u6807\u7b7e\u7684\u5c5e\u6027\u5230\u540c\u4e00\u4e2a\u70b9\u3002 nebula> INSERT VERTEX t3 (p1), t4(p2) VALUES \"21\": (321, \"hello\"); \u4e00\u4e2a\u70b9\u53ef\u4ee5\u591a\u6b21\u63d2\u5165\u5c5e\u6027\u503c\uff0c\u4ee5\u6700\u540e\u4e00\u6b21\u4e3a\u51c6\u3002 # \u591a\u6b21\u63d2\u5165\u5c5e\u6027\u503c\u3002 nebula> INSERT VERTEX t2 (name, age) VALUES \"11\":(\"n2\", 13); nebula> INSERT VERTEX t2 (name, age) VALUES \"11\":(\"n3\", 14); nebula> INSERT VERTEX t2 (name, age) VALUES \"11\":(\"n4\", 15); nebula> FETCH PROP ON t2 \"11\"; +---------------------------------+ | vertices_ | +---------------------------------+ | (\"11\" :t2{age: 15, name: \"n4\"}) | +---------------------------------+ nebula> CREATE TAG t5(p1 fixed_string(5) NOT NULL, p2 int, p3 int DEFAULT NULL); nebula> INSERT VERTEX t5(p1, p2, p3) VALUES \"001\":(\"Abe\", 2, 3); # \u63d2\u5165\u5931\u8d25\uff0c\u56e0\u4e3a\u5c5e\u6027p1\u4e0d\u80fd\u4e3aNULL\u3002 nebula> INSERT VERTEX t5(p1, p2, p3) VALUES \"002\":(NULL, 4, 5); [ERROR (-8)]: Storage Error: The not null field cannot be null. # \u5c5e\u6027p3\u4e3a\u9ed8\u8ba4\u503cNULL\u3002 nebula> INSERT VERTEX t5(p1, p2) VALUES \"003\":(\"cd\", 5); nebula> FETCH PROP ON t5 \"003\"; +--------------------------------------------+ | vertices_ | +--------------------------------------------+ | (\"003\" :t5{p1: \"cd\", p2: 5, p3: __NULL__}) | +--------------------------------------------+ # \u5c5e\u6027p1\u6700\u5927\u957f\u5ea6\u4e3a5\uff0c\u56e0\u6b64\u4f1a\u88ab\u622a\u65ad\u3002 nebula> INSERT VERTEX t5(p1, p2) VALUES \"004\":(\"shalalalala\", 4); nebula> FETCH PROP on t5 \"004\"; +-----------------------------------------------+ | vertices_ | +-----------------------------------------------+ | (\"004\" :t5{p1: \"shala\", p2: 4, p3: __NULL__}) | +-----------------------------------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/14.native-index-statements/2.1.show-create-index/","text":"SHOW CREATE INDEX \u00b6 SHOW CREATE INDEX \u5c55\u793a\u521b\u5efa\u6807\u7b7e\u6216\u8005\u8fb9\u7c7b\u578b\u65f6\u4f7f\u7528\u7684nGQL\u8bed\u53e5,\u5176\u4e2d\u5305\u542b\u7d22\u5f15\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\u5176\u5173\u8054\u7684\u5c5e\u6027\u3002 \u8bed\u6cd5 \u00b6 SHOW CREATE {TAG | EDGE} INDEX <index_name>; \u793a\u4f8b \u00b6 \u60a8\u53ef\u4ee5\u5148\u8fd0\u884c SHOW TAG INDEXES \u67e5\u770b\u6709\u54ea\u4e9b\u6807\u7b7e\u7d22\u5f15\uff0c\u7136\u540e\u7528 SHOW CREATE TAG INDEX \u67e5\u770b\u6307\u5b9a\u7d22\u5f15\u7684\u521b\u5efa\u4fe1\u606f\u3002 nebula> SHOW TAG INDEXES; +------------------+ | Names | +------------------+ | \"player_index_0\" | +------------------+ | \"player_index_1\" | +------------------+ nebula> SHOW CREATE TAG INDEX player_index_1; +------------------+--------------------------------------------------+ | Tag Index Name | Create Tag Index | +------------------+--------------------------------------------------+ | \"player_index_1\" | \"CREATE TAG INDEX `player_index_1` ON `player` ( | | | `name(20)` | | | )\" | +------------------+--------------------------------------------------+ \u8fb9\u7c7b\u578b\u7d22\u5f15\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u67e5\u8be2\uff1a nebula> SHOW EDGE INDEXES; +----------------+ | Names | +----------------+ | \"index_follow\" | +----------------+ nebula> SHOW CREATE EDGE INDEX index index_follow; +-----------------+-------------------------------------------------+ | Edge Index Name | Create Edge Index | +-----------------+-------------------------------------------------+ | \"index_follow\" | \"CREATE EDGE INDEX `index_follow` ON `follow` ( | | | `degree` | | | )\" | +-----------------+-------------------------------------------------+","title":"SHOW CREATE INDEX"},{"location":"3.ngql-guide/14.native-index-statements/2.1.show-create-index/#show_create_index","text":"SHOW CREATE INDEX \u5c55\u793a\u521b\u5efa\u6807\u7b7e\u6216\u8005\u8fb9\u7c7b\u578b\u65f6\u4f7f\u7528\u7684nGQL\u8bed\u53e5,\u5176\u4e2d\u5305\u542b\u7d22\u5f15\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\u5176\u5173\u8054\u7684\u5c5e\u6027\u3002","title":"SHOW CREATE INDEX"},{"location":"3.ngql-guide/14.native-index-statements/2.1.show-create-index/#_1","text":"SHOW CREATE {TAG | EDGE} INDEX <index_name>;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/14.native-index-statements/2.1.show-create-index/#_2","text":"\u60a8\u53ef\u4ee5\u5148\u8fd0\u884c SHOW TAG INDEXES \u67e5\u770b\u6709\u54ea\u4e9b\u6807\u7b7e\u7d22\u5f15\uff0c\u7136\u540e\u7528 SHOW CREATE TAG INDEX \u67e5\u770b\u6307\u5b9a\u7d22\u5f15\u7684\u521b\u5efa\u4fe1\u606f\u3002 nebula> SHOW TAG INDEXES; +------------------+ | Names | +------------------+ | \"player_index_0\" | +------------------+ | \"player_index_1\" | +------------------+ nebula> SHOW CREATE TAG INDEX player_index_1; +------------------+--------------------------------------------------+ | Tag Index Name | Create Tag Index | +------------------+--------------------------------------------------+ | \"player_index_1\" | \"CREATE TAG INDEX `player_index_1` ON `player` ( | | | `name(20)` | | | )\" | +------------------+--------------------------------------------------+ \u8fb9\u7c7b\u578b\u7d22\u5f15\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u67e5\u8be2\uff1a nebula> SHOW EDGE INDEXES; +----------------+ | Names | +----------------+ | \"index_follow\" | +----------------+ nebula> SHOW CREATE EDGE INDEX index index_follow; +-----------------+-------------------------------------------------+ | Edge Index Name | Create Edge Index | +-----------------+-------------------------------------------------+ | \"index_follow\" | \"CREATE EDGE INDEX `index_follow` ON `follow` ( | | | `degree` | | | )\" | +-----------------+-------------------------------------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/20.appendix/comments/","text":"\u6ce8\u91ca \u00b6 \u672c\u6587\u4ecb\u7ecdnGQL\u4e2d\u7684\u6ce8\u91ca\u65b9\u5f0f\u3002 \u5386\u53f2\u7248\u672c\u517c\u5bb9\u6027 \u00b6 Nebula Graph 1.0\u652f\u6301\u56db\u79cd\u6ce8\u91ca\u65b9\u5f0f: # \u3001 -- \u3001 // \u3001 /* */ \u3002 Nebula Graph 2.0\u4e2d\uff0c -- \u4e0d\u518d\u662f\u6ce8\u91ca\u7b26\uff0c\u800c\u662f\u4ee3\u8868 \u8fb9\u6a21\u5f0f \u3002 Examples \u00b6 nebula> # \u8fd9\u884c\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002 nebula> RETURN 1+1; # \u8fd9\u6761\u6ce8\u91ca\u5ef6\u7eed\u5230\u884c\u5c3e\u3002 nebula> RETURN 1+1; // \u8fd9\u6761\u6ce8\u91ca\u5ef6\u7eed\u5230\u884c\u5c3e\u3002 nebula> RETURN 1 /* \u8fd9\u662f\u4e00\u6761\u884c\u5185\u6ce8\u91ca */ + 1 == 2; nebula> RETURN 11 + \\ /* \u591a\u884c\u6ce8\u91ca \\ \u7528\u53cd\u659c\u7ebf\u6765\u6362\u884c\u3002 \\ */ 12; nGQL\u8bed\u53e5\u4e2d\u7684\u53cd\u659c\u7ebf\uff08\\\uff09\u4ee3\u8868\u6362\u884c\u3002 OpenCypher\u517c\u5bb9\u6027 \u00b6 \u5728nGQL\u4e2d\uff0c\u60a8\u5fc5\u987b\u5728\u884c\u672b\u4f7f\u7528\u53cd\u659c\u7ebf\uff08\\\uff09\u6765\u6362\u884c\uff0c\u5373\u4f7f\u662f\u5728\u4f7f\u7528 \\* *\\ \u7b26\u53f7\u7684\u591a\u884c\u6ce8\u91ca\u5185\u3002 \u5728openCypher\u4e2d\u4e0d\u9700\u8981\u4f7f\u7528\u53cd\u659c\u7ebf\u6362\u884c\u3002 /* openCypher\u98ce\u683c\uff1a \u8fd9\u6761\u6ce8\u91ca \u5ef6\u7eed\u4e86\u4e0d\u6b62 \u4e00\u884c */ MATCH (n:label) RETURN n; /* nGQL\u98ce\u683c\uff1a \\ \u8fd9\u6761\u6ce8\u91ca \\ \u5ef6\u7eed\u4e86\u4e0d\u6b62 \\ \u4e00\u884c */ \\ MATCH (n:tag) \\ RETURN n;","title":"\u6ce8\u91ca"},{"location":"3.ngql-guide/20.appendix/comments/#_1","text":"\u672c\u6587\u4ecb\u7ecdnGQL\u4e2d\u7684\u6ce8\u91ca\u65b9\u5f0f\u3002","title":"\u6ce8\u91ca"},{"location":"3.ngql-guide/20.appendix/comments/#_2","text":"Nebula Graph 1.0\u652f\u6301\u56db\u79cd\u6ce8\u91ca\u65b9\u5f0f: # \u3001 -- \u3001 // \u3001 /* */ \u3002 Nebula Graph 2.0\u4e2d\uff0c -- \u4e0d\u518d\u662f\u6ce8\u91ca\u7b26\uff0c\u800c\u662f\u4ee3\u8868 \u8fb9\u6a21\u5f0f \u3002","title":"\u5386\u53f2\u7248\u672c\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/20.appendix/comments/#examples","text":"nebula> # \u8fd9\u884c\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002 nebula> RETURN 1+1; # \u8fd9\u6761\u6ce8\u91ca\u5ef6\u7eed\u5230\u884c\u5c3e\u3002 nebula> RETURN 1+1; // \u8fd9\u6761\u6ce8\u91ca\u5ef6\u7eed\u5230\u884c\u5c3e\u3002 nebula> RETURN 1 /* \u8fd9\u662f\u4e00\u6761\u884c\u5185\u6ce8\u91ca */ + 1 == 2; nebula> RETURN 11 + \\ /* \u591a\u884c\u6ce8\u91ca \\ \u7528\u53cd\u659c\u7ebf\u6765\u6362\u884c\u3002 \\ */ 12; nGQL\u8bed\u53e5\u4e2d\u7684\u53cd\u659c\u7ebf\uff08\\\uff09\u4ee3\u8868\u6362\u884c\u3002","title":"Examples"},{"location":"3.ngql-guide/20.appendix/comments/#opencypher","text":"\u5728nGQL\u4e2d\uff0c\u60a8\u5fc5\u987b\u5728\u884c\u672b\u4f7f\u7528\u53cd\u659c\u7ebf\uff08\\\uff09\u6765\u6362\u884c\uff0c\u5373\u4f7f\u662f\u5728\u4f7f\u7528 \\* *\\ \u7b26\u53f7\u7684\u591a\u884c\u6ce8\u91ca\u5185\u3002 \u5728openCypher\u4e2d\u4e0d\u9700\u8981\u4f7f\u7528\u53cd\u659c\u7ebf\u6362\u884c\u3002 /* openCypher\u98ce\u683c\uff1a \u8fd9\u6761\u6ce8\u91ca \u5ef6\u7eed\u4e86\u4e0d\u6b62 \u4e00\u884c */ MATCH (n:label) RETURN n; /* nGQL\u98ce\u683c\uff1a \\ \u8fd9\u6761\u6ce8\u91ca \\ \u5ef6\u7eed\u4e86\u4e0d\u6b62 \\ \u4e00\u884c */ \\ MATCH (n:tag) \\ RETURN n;","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/3.data-types/1.numeric/","text":"\u6570\u503c\u7c7b\u578b \u00b6 int \u00b6 Nebula Graph\u4f7f\u7528\u5173\u952e\u5b57 int \u58f0\u660e64\u4f4d\u5e26\u7b26\u53f7\u6574\u6570\uff0c\u652f\u6301\u7684\u8303\u56f4\u662f[-9223372036854775808, 9223372036854775807]\u3002\u6574\u6570\u652f\u6301\u591a\u79cd\u8fdb\u5236\u8868\u793a\uff1a \u5341\u8fdb\u5236\uff0c\u4f8b\u5982 123456 \u3002 \u5341\u516d\u8fdb\u5236\uff0c\u4f8b\u5982 0x1e240 \u3002 \u516b\u8fdb\u5236\uff0c\u4f8b\u5982 0361100 \u3002 double \u00b6 Nebula Graph\u4f7f\u7528\u5173\u952e\u5b57 double \u58f0\u660e\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u4f8b\u5982 1.2 \u3001 -3.0000001 \u3002\u540c\u65f6\u652f\u6301\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c\u4f8b\u5982 1e2 \u3001 1.1e2 \u3001 .3e4 \u3001 1.e4 \u3001 -1234E-10 \u3002","title":"Numeric"},{"location":"3.ngql-guide/3.data-types/1.numeric/#_1","text":"","title":"\u6570\u503c\u7c7b\u578b"},{"location":"3.ngql-guide/3.data-types/1.numeric/#int","text":"Nebula Graph\u4f7f\u7528\u5173\u952e\u5b57 int \u58f0\u660e64\u4f4d\u5e26\u7b26\u53f7\u6574\u6570\uff0c\u652f\u6301\u7684\u8303\u56f4\u662f[-9223372036854775808, 9223372036854775807]\u3002\u6574\u6570\u652f\u6301\u591a\u79cd\u8fdb\u5236\u8868\u793a\uff1a \u5341\u8fdb\u5236\uff0c\u4f8b\u5982 123456 \u3002 \u5341\u516d\u8fdb\u5236\uff0c\u4f8b\u5982 0x1e240 \u3002 \u516b\u8fdb\u5236\uff0c\u4f8b\u5982 0361100 \u3002","title":"int"},{"location":"3.ngql-guide/3.data-types/1.numeric/#double","text":"Nebula Graph\u4f7f\u7528\u5173\u952e\u5b57 double \u58f0\u660e\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u4f8b\u5982 1.2 \u3001 -3.0000001 \u3002\u540c\u65f6\u652f\u6301\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c\u4f8b\u5982 1e2 \u3001 1.1e2 \u3001 .3e4 \u3001 1.e4 \u3001 -1234E-10 \u3002","title":"double"},{"location":"3.ngql-guide/3.data-types/2.boolean/","text":"\u5e03\u5c14 \u00b6 Nebula Graph\u4f7f\u7528\u5173\u952e\u5b57 bool \u58f0\u660e\u5e03\u5c14\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a true \u6216 false \u3002","title":"Boolean"},{"location":"3.ngql-guide/3.data-types/2.boolean/#_1","text":"Nebula Graph\u4f7f\u7528\u5173\u952e\u5b57 bool \u58f0\u660e\u5e03\u5c14\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a true \u6216 false \u3002","title":"\u5e03\u5c14"},{"location":"3.ngql-guide/3.data-types/3.string/","text":"\u5b57\u7b26\u4e32 \u00b6 Nebula Graph\u4f7f\u7528\u5173\u952e\u5b57 string \u58f0\u660e\u5b57\u7b26\u4e32\u7c7b\u578b\u6570\u636e\uff0c\u683c\u5f0f\u4e3a\u53cc\u5f15\u53f7\u6216\u5355\u5f15\u53f7\u5305\u88f9\u7684\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982 \"Shaquille O'Neal\" \u6216 'This is a double-quoted literal string' \u3002 \u5b57\u7b26\u4e32\u7c7b\u578b \u00b6 Nebula Graph\u652f\u6301\u5b9a\u957f\u5b57\u7b26\u4e32\u548c\u53d8\u957f\u5b57\u7b26\u4e32\u3002\u793a\u4f8b\u5982\u4e0b\uff1a \u5b9a\u957f\u5b57\u7b26\u4e32 nebula> CREATE TAG t1 (p1 fixed_string(10)); \u53d8\u957f\u5b57\u7b26\u4e32 nebula> CREATE TAG t2 (p2 string); \u8f6c\u4e49\u5b57\u7b26 \u00b6 \u5b57\u7b26\u4e32\u4e2d\u4e0d\u652f\u6301\u76f4\u63a5\u6362\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a \"\\n\\t\\r\\b\\f\" \"\\110ello world\" OpenCypher\u517c\u5bb9\u6027 \u00b6 openCypher\u3001Cypher\u548cnGQL\u4e4b\u95f4\u6709\u4e00\u4e9b\u7ec6\u5fae\u533a\u522b\uff0c\u4f8b\u5982\u4e0b\u9762openCypher\u7684\u793a\u4f8b\uff0c\u4e0d\u80fd\u5c06\u5355\u5f15\u53f7\u66ff\u6362\u4e3a\u53cc\u5f15\u53f7\u3002 ```ngql # File: Literals.feature Feature: Literals Background: Given any graph Scenario: Return a single-quoted string When executing query: \"\"\" RETURN '' AS literal \"\"\" Then the result should be, in any order: | literal | | '' | # Note: it should return single-quotes as openCypher required. And no side effects Cypher\u7684\u8fd4\u56de\u7ed3\u679c\u540c\u65f6\u652f\u6301\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\uff0cnGQL\u9075\u5faaCypher\u7684\u65b9\u5f0f\u3002 ```ngql nebula > YIELD '' AS quote1, \"\" AS quote2, \"'\" AS quote3, '\"' AS quote4 +--------+--------+--------+--------+ | quote1 | quote2 | quote3 | quote4 | +--------+--------+--------+--------+ | \"\" | \"\" | \"'\" | \"\"\" | +--------+--------+--------+--------+","title":"String"},{"location":"3.ngql-guide/3.data-types/3.string/#_1","text":"Nebula Graph\u4f7f\u7528\u5173\u952e\u5b57 string \u58f0\u660e\u5b57\u7b26\u4e32\u7c7b\u578b\u6570\u636e\uff0c\u683c\u5f0f\u4e3a\u53cc\u5f15\u53f7\u6216\u5355\u5f15\u53f7\u5305\u88f9\u7684\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982 \"Shaquille O'Neal\" \u6216 'This is a double-quoted literal string' \u3002","title":"\u5b57\u7b26\u4e32"},{"location":"3.ngql-guide/3.data-types/3.string/#_2","text":"Nebula Graph\u652f\u6301\u5b9a\u957f\u5b57\u7b26\u4e32\u548c\u53d8\u957f\u5b57\u7b26\u4e32\u3002\u793a\u4f8b\u5982\u4e0b\uff1a \u5b9a\u957f\u5b57\u7b26\u4e32 nebula> CREATE TAG t1 (p1 fixed_string(10)); \u53d8\u957f\u5b57\u7b26\u4e32 nebula> CREATE TAG t2 (p2 string);","title":"\u5b57\u7b26\u4e32\u7c7b\u578b"},{"location":"3.ngql-guide/3.data-types/3.string/#_3","text":"\u5b57\u7b26\u4e32\u4e2d\u4e0d\u652f\u6301\u76f4\u63a5\u6362\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a \"\\n\\t\\r\\b\\f\" \"\\110ello world\"","title":"\u8f6c\u4e49\u5b57\u7b26"},{"location":"3.ngql-guide/3.data-types/3.string/#opencypher","text":"openCypher\u3001Cypher\u548cnGQL\u4e4b\u95f4\u6709\u4e00\u4e9b\u7ec6\u5fae\u533a\u522b\uff0c\u4f8b\u5982\u4e0b\u9762openCypher\u7684\u793a\u4f8b\uff0c\u4e0d\u80fd\u5c06\u5355\u5f15\u53f7\u66ff\u6362\u4e3a\u53cc\u5f15\u53f7\u3002 ```ngql # File: Literals.feature Feature: Literals Background: Given any graph Scenario: Return a single-quoted string When executing query: \"\"\" RETURN '' AS literal \"\"\" Then the result should be, in any order: | literal | | '' | # Note: it should return single-quotes as openCypher required. And no side effects Cypher\u7684\u8fd4\u56de\u7ed3\u679c\u540c\u65f6\u652f\u6301\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\uff0cnGQL\u9075\u5faaCypher\u7684\u65b9\u5f0f\u3002 ```ngql nebula > YIELD '' AS quote1, \"\" AS quote2, \"'\" AS quote3, '\"' AS quote4 +--------+--------+--------+--------+ | quote1 | quote2 | quote3 | quote4 | +--------+--------+--------+--------+ | \"\" | \"\" | \"'\" | \"\"\" | +--------+--------+--------+--------+","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/3.data-types/4.date-and-time/","text":"\u65e5\u671f\u548c\u65f6\u95f4\u7c7b\u578b \u00b6 \u672c\u6587\u4ecb\u7ecd\u65e5\u671f\u548c\u65f6\u95f4\u7684\u7c7b\u578b\uff0c\u5305\u62ec DATE \u3001 TIME \u3001 DATETIME \u548c TIMESTAMP \u3002 Nebula Graph\u5c06\u5f53\u524d\u65f6\u533a\u8f6c\u6362\u4e3a\u534f\u8c03\u4e16\u754c\u65f6\u95f4\uff08UTC\uff09\u5e76\u5b58\u50a8\uff0c\u67e5\u8be2\u65f6\u4f1a\u518d\u6b21\u8f6c\u6362\u56de\u5f53\u524d\u65f6\u533a\uff08 TIMESTAMP \u4f8b\u5916\uff09\u3002 \u7ed3\u5408 RETURN \u5b50\u53e5\uff0c\u51fd\u6570 date() \u3001 time() \u548c datetime() \u53ef\u4ee5\u7528\u7a7a\u503c\u8fd4\u56de\u5f53\u524d\u7684\u65e5\u671f\u6216\u65f6\u95f4\u3002 OpenCypher\u517c\u5bb9\u6027 \u00b6 \u652f\u6301\u5e74\u3001\u6708\u3001\u65e5\u3001\u65f6\u3001\u5206\u3001\u79d2\uff0c\u4e0d\u652f\u6301\u6beb\u79d2\u548c\u65f6\u533a\u3002 \u4e0d\u652f\u6301\u51fd\u6570 localdatetime() \u548c duration() \u3002 \u4e0d\u652f\u6301\u5927\u90e8\u5206\u5b57\u7b26\u4e32\u65f6\u95f4\u683c\u5f0f\uff0c\u4ec5\u652f\u6301 YYYY-MM-DDThh:mm:ss \u3002 DATE \u00b6 DATE \u5305\u542b\u65e5\u671f\uff0c\u4f46\u662f\u4e0d\u5305\u542b\u65f6\u95f4\u3002Nebula Graph\u68c0\u7d22\u548c\u663e\u793a DATE \u7684\u683c\u5f0f\u4e3a YYYY-MM-DD \u3002\u652f\u6301\u7684\u8303\u56f4\u662f -32768-01-01 \u5230 32767-12-31 \u3002 TIME \u00b6 TIME \u5305\u542b\u65f6\u95f4\uff0c\u4f46\u662f\u4e0d\u5305\u542b\u65e5\u671f\u3002Nebula Graph\u68c0\u7d22\u548c\u663e\u793a TIME \u7684\u683c\u5f0f\u4e3a hh:mm:ss.ususus \u3002\u652f\u6301\u7684\u8303\u56f4\u662f 00:00:00.000 \u5230 23:59:59.999 \u3002 DATETIME \u00b6 DATETIME \u5305\u542b\u65e5\u671f\u548c\u65f6\u95f4\u3002Nebula Graph\u68c0\u7d22\u548c\u663e\u793a DATETIME \u7684\u683c\u5f0f\u4e3a YYYY-MM-DDThh:mm:ss.ususus \u3002\u652f\u6301\u7684\u8303\u56f4\u662f -32768-01-01T00:00:00.000 \u5230 32767-12-31T23:59:59.999 \u3002 TIMESTAMP \u00b6 TIMESTAMP \u5305\u542b\u65e5\u671f\u548c\u65f6\u95f4\u3002\u652f\u6301\u7684\u8303\u56f4\u662fUTC\u65f6\u95f4\u7684 1970-01-01T00:00:01 \u5230 2262-04-11T23:47:16 \u3002 TIMESTAMP \u8fd8\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u4ee5\u65f6\u95f4\u6233\u5f62\u5f0f\u5b58\u50a8\u548c\u663e\u793a\u3002\u4f8b\u5982 1615974839 \uff0c\u8868\u793a 2021-03-17T17:53:59 \u3002 \u67e5\u8be2 TIMESTAMP \u7684\u65b9\u5f0f\u5305\u62ec\u65f6\u95f4\u6233\u548c timestamp() \u51fd\u6570\u3002 \u63d2\u5165 TIMESTAMP \u7684\u65b9\u5f0f\u5305\u62ec\u65f6\u95f4\u6233\u3001 timestamp() \u51fd\u6570\u548c now() \u51fd\u6570\u3002 \u5e95\u5c42\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u4e3a 64\u4f4dint \u3002 \u793a\u4f8b \u00b6 \u521b\u5efa\u6807\u7b7e\uff0c\u540d\u79f0\u4e3a date1 \uff0c\u5305\u542b DATE \u3001 TIME \u548c DATETIME \u4e09\u79cd\u7c7b\u578b\u3002 nebula> CREATE TAG date1(p1 date, p2 time, p3 datetime); \u63d2\u5165\u70b9\uff0c\u540d\u79f0\u4e3a test1 \u3002 nebula> INSERT VERTEX date1(p1, p2, p3) VALUES \"test1\":(date(\"2021-03-17\"), time(\"17:53:59\"), datetime(\"2021-03-17T17:53:59\")); \u521b\u5efa\u6807\u7b7e\uff0c\u540d\u79f0\u4e3a school \uff0c\u5305\u542b TIMESTAMP \u7c7b\u578b\u3002 nebula> CREATE TAG school(name string , found_time timestamp); \u63d2\u5165\u70b9\uff0c\u540d\u79f0\u4e3a DUT \uff0c\u5b58\u50a8\u65f6\u95f4\u4e3a \"1988-03-01T08:00:00\" \u3002 # \u65f6\u95f4\u6233\u5f62\u5f0f\u63d2\u5165\uff0c1988-03-01T08:00:00\u5bf9\u5e94\u7684\u65f6\u95f4\u6233\u4e3a573177600\uff0c\u8f6c\u6362\u4e3aUTC\u65f6\u95f4\u4e3a573206400\u3002 nebula> INSERT VERTEX school(name, found_time) VALUES \"DUT\":(\"DUT\", 573206400); # \u65e5\u671f\u548c\u65f6\u95f4\u683c\u5f0f\u63d2\u5165\u3002 nebula> INSERT VERTEX school(name, found_time) VALUES \"DUT\":(\"DUT\", timestamp(\"1988-03-01T08:00:00\")); \u63d2\u5165\u70b9\uff0c\u540d\u79f0\u4e3a dut \uff0c\u7528 now() \u51fd\u6570\u5b58\u50a8\u65f6\u95f4\u3002 nebula> INSERT VERTEX school(name, found_time) VALUES \"dut\":(\"dut\", now()); \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 WITH \u8bed\u53e5\u8bbe\u7f6e\u5177\u4f53\u65e5\u671f\u548c\u65f6\u95f4\uff0c\u4f8b\u5982\uff1a nebula> WITH time({hour: 12, minute: 31, second: 14}) AS d RETURN d; +--------------+ | d | +--------------+ | 12:31:14.000 | +--------------+ nebula> WITH date({year: 1984, month: 10, day: 11}) AS x RETURN x + 1; +------------+ | x | +------------+ | 1984-10-12 | +------------+","title":"Date and time"},{"location":"3.ngql-guide/3.data-types/4.date-and-time/#_1","text":"\u672c\u6587\u4ecb\u7ecd\u65e5\u671f\u548c\u65f6\u95f4\u7684\u7c7b\u578b\uff0c\u5305\u62ec DATE \u3001 TIME \u3001 DATETIME \u548c TIMESTAMP \u3002 Nebula Graph\u5c06\u5f53\u524d\u65f6\u533a\u8f6c\u6362\u4e3a\u534f\u8c03\u4e16\u754c\u65f6\u95f4\uff08UTC\uff09\u5e76\u5b58\u50a8\uff0c\u67e5\u8be2\u65f6\u4f1a\u518d\u6b21\u8f6c\u6362\u56de\u5f53\u524d\u65f6\u533a\uff08 TIMESTAMP \u4f8b\u5916\uff09\u3002 \u7ed3\u5408 RETURN \u5b50\u53e5\uff0c\u51fd\u6570 date() \u3001 time() \u548c datetime() \u53ef\u4ee5\u7528\u7a7a\u503c\u8fd4\u56de\u5f53\u524d\u7684\u65e5\u671f\u6216\u65f6\u95f4\u3002","title":"\u65e5\u671f\u548c\u65f6\u95f4\u7c7b\u578b"},{"location":"3.ngql-guide/3.data-types/4.date-and-time/#opencypher","text":"\u652f\u6301\u5e74\u3001\u6708\u3001\u65e5\u3001\u65f6\u3001\u5206\u3001\u79d2\uff0c\u4e0d\u652f\u6301\u6beb\u79d2\u548c\u65f6\u533a\u3002 \u4e0d\u652f\u6301\u51fd\u6570 localdatetime() \u548c duration() \u3002 \u4e0d\u652f\u6301\u5927\u90e8\u5206\u5b57\u7b26\u4e32\u65f6\u95f4\u683c\u5f0f\uff0c\u4ec5\u652f\u6301 YYYY-MM-DDThh:mm:ss \u3002","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/3.data-types/4.date-and-time/#date","text":"DATE \u5305\u542b\u65e5\u671f\uff0c\u4f46\u662f\u4e0d\u5305\u542b\u65f6\u95f4\u3002Nebula Graph\u68c0\u7d22\u548c\u663e\u793a DATE \u7684\u683c\u5f0f\u4e3a YYYY-MM-DD \u3002\u652f\u6301\u7684\u8303\u56f4\u662f -32768-01-01 \u5230 32767-12-31 \u3002","title":"DATE"},{"location":"3.ngql-guide/3.data-types/4.date-and-time/#time","text":"TIME \u5305\u542b\u65f6\u95f4\uff0c\u4f46\u662f\u4e0d\u5305\u542b\u65e5\u671f\u3002Nebula Graph\u68c0\u7d22\u548c\u663e\u793a TIME \u7684\u683c\u5f0f\u4e3a hh:mm:ss.ususus \u3002\u652f\u6301\u7684\u8303\u56f4\u662f 00:00:00.000 \u5230 23:59:59.999 \u3002","title":"TIME"},{"location":"3.ngql-guide/3.data-types/4.date-and-time/#datetime","text":"DATETIME \u5305\u542b\u65e5\u671f\u548c\u65f6\u95f4\u3002Nebula Graph\u68c0\u7d22\u548c\u663e\u793a DATETIME \u7684\u683c\u5f0f\u4e3a YYYY-MM-DDThh:mm:ss.ususus \u3002\u652f\u6301\u7684\u8303\u56f4\u662f -32768-01-01T00:00:00.000 \u5230 32767-12-31T23:59:59.999 \u3002","title":"DATETIME"},{"location":"3.ngql-guide/3.data-types/4.date-and-time/#timestamp","text":"TIMESTAMP \u5305\u542b\u65e5\u671f\u548c\u65f6\u95f4\u3002\u652f\u6301\u7684\u8303\u56f4\u662fUTC\u65f6\u95f4\u7684 1970-01-01T00:00:01 \u5230 2262-04-11T23:47:16 \u3002 TIMESTAMP \u8fd8\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u4ee5\u65f6\u95f4\u6233\u5f62\u5f0f\u5b58\u50a8\u548c\u663e\u793a\u3002\u4f8b\u5982 1615974839 \uff0c\u8868\u793a 2021-03-17T17:53:59 \u3002 \u67e5\u8be2 TIMESTAMP \u7684\u65b9\u5f0f\u5305\u62ec\u65f6\u95f4\u6233\u548c timestamp() \u51fd\u6570\u3002 \u63d2\u5165 TIMESTAMP \u7684\u65b9\u5f0f\u5305\u62ec\u65f6\u95f4\u6233\u3001 timestamp() \u51fd\u6570\u548c now() \u51fd\u6570\u3002 \u5e95\u5c42\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u4e3a 64\u4f4dint \u3002","title":"TIMESTAMP"},{"location":"3.ngql-guide/3.data-types/4.date-and-time/#_2","text":"\u521b\u5efa\u6807\u7b7e\uff0c\u540d\u79f0\u4e3a date1 \uff0c\u5305\u542b DATE \u3001 TIME \u548c DATETIME \u4e09\u79cd\u7c7b\u578b\u3002 nebula> CREATE TAG date1(p1 date, p2 time, p3 datetime); \u63d2\u5165\u70b9\uff0c\u540d\u79f0\u4e3a test1 \u3002 nebula> INSERT VERTEX date1(p1, p2, p3) VALUES \"test1\":(date(\"2021-03-17\"), time(\"17:53:59\"), datetime(\"2021-03-17T17:53:59\")); \u521b\u5efa\u6807\u7b7e\uff0c\u540d\u79f0\u4e3a school \uff0c\u5305\u542b TIMESTAMP \u7c7b\u578b\u3002 nebula> CREATE TAG school(name string , found_time timestamp); \u63d2\u5165\u70b9\uff0c\u540d\u79f0\u4e3a DUT \uff0c\u5b58\u50a8\u65f6\u95f4\u4e3a \"1988-03-01T08:00:00\" \u3002 # \u65f6\u95f4\u6233\u5f62\u5f0f\u63d2\u5165\uff0c1988-03-01T08:00:00\u5bf9\u5e94\u7684\u65f6\u95f4\u6233\u4e3a573177600\uff0c\u8f6c\u6362\u4e3aUTC\u65f6\u95f4\u4e3a573206400\u3002 nebula> INSERT VERTEX school(name, found_time) VALUES \"DUT\":(\"DUT\", 573206400); # \u65e5\u671f\u548c\u65f6\u95f4\u683c\u5f0f\u63d2\u5165\u3002 nebula> INSERT VERTEX school(name, found_time) VALUES \"DUT\":(\"DUT\", timestamp(\"1988-03-01T08:00:00\")); \u63d2\u5165\u70b9\uff0c\u540d\u79f0\u4e3a dut \uff0c\u7528 now() \u51fd\u6570\u5b58\u50a8\u65f6\u95f4\u3002 nebula> INSERT VERTEX school(name, found_time) VALUES \"dut\":(\"dut\", now()); \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 WITH \u8bed\u53e5\u8bbe\u7f6e\u5177\u4f53\u65e5\u671f\u548c\u65f6\u95f4\uff0c\u4f8b\u5982\uff1a nebula> WITH time({hour: 12, minute: 31, second: 14}) AS d RETURN d; +--------------+ | d | +--------------+ | 12:31:14.000 | +--------------+ nebula> WITH date({year: 1984, month: 10, day: 11}) AS x RETURN x + 1; +------------+ | x | +------------+ | 1984-10-12 | +------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/3.data-types/5.null/","text":"NULL \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u63d2\u5165\u70b9\u6216\u8fb9\u65f6\uff0c\u5c5e\u6027\u503c\u53ef\u4ee5\u4e3a NULL \uff0c\u60a8\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e0d\u5141\u8bb8\u4e3a NULL \uff08 NOT NULL \uff09\uff0c\u5373\u63d2\u5165\u70b9\u6216\u8fb9\u65f6\u5fc5\u987b\u8bbe\u7f6e\u8be5\u5c5e\u6027\u7684\u503c\uff0c\u9664\u975e\u521b\u5efa\u5c5e\u6027\u65f6\u5df2\u7ecf\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u3002 NULL\u7684\u903b\u8f91\u64cd\u4f5c \u00b6 AND \u3001 OR \u3001 XOR \u548c NOT \u7684\u771f\u503c\u8868\u5982\u4e0b\u3002 a b a AND b a OR b a XOR NOT a false false false false false true false null false null null true false true false true true true true false false true true false true null null true null false true true true true false false null false false null null null null null null null null null null true null true null null OpenCypher\u517c\u5bb9\u6027 \u00b6 Nebula Graph\u4e2d\uff0cNULL\u7684\u6bd4\u8f83\u548c\u64cd\u4f5c\u4e0eopenCypher\u4e0d\u540c\uff0c\u540e\u7eed\u4e5f\u53ef\u80fd\u4f1a\u6709\u53d8\u5316\u3002 NULL\u7684\u6bd4\u8f83 \u00b6 Nebula Graph\u4e2d\uff0cNULL\u7684\u6bd4\u8f83\u64cd\u4f5c\u4e0d\u517c\u5bb9openCypher\u3002 NULL\u7684\u64cd\u4f5c\u548c\u8fd4\u56de \u00b6 Nebula Graph\u4e2d\uff0c\u5bf9NULL\u7684\u64cd\u4f5c\u4ee5\u53ca\u8fd4\u56de\u7ed3\u679c\u4e0d\u517c\u5bb9openCypher\u3002 \u793a\u4f8b \u00b6 \u4f7f\u7528NOT NULL \u00b6 \u521b\u5efa\u6807\u7b7e\uff0c\u540d\u79f0\u4e3a player \uff0c\u6307\u5b9a\u5c5e\u6027 name \u4e3a NOT NULL \u3002 nebula> CREATE TAG player(name string NOT NULL, age int); \u4f7f\u7528 SHOW \u547d\u4ee4\u67e5\u770b\u521b\u5efa\u6807\u7b7e\u8bed\u53e5\uff0c\u5c5e\u6027 name \u4e3a NOT NULL \uff0c\u5c5e\u6027 age \u4e3a\u9ed8\u8ba4\u7684 NULL \u3002 nebula> SHOW CREATE TAG player; +-----------+-----------------------------------+ | Tag | Create Tag | +-----------+-----------------------------------+ | \"student\" | \"CREATE TAG `player` ( | | | `name` string NOT NULL, | | | `age` int64 NULL | | | ) ttl_duration = 0, ttl_col = \"\"\" | +-----------+-----------------------------------+ \u63d2\u5165\u70b9 Kobe \uff0c\u5c5e\u6027 age \u53ef\u4ee5\u4e3a NULL \u3002 nebula> INSERT VERTEX player(name, age) VALUES \"Kobe\":(\"Kobe\",null); \u4f7f\u7528NOT NULL\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u503c \u00b6 \u521b\u5efa\u6807\u7b7e\uff0c\u540d\u79f0\u4e3a player \uff0c\u6307\u5b9a\u5c5e\u6027 age \u4e3a NOT NULL \uff0c\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u503c 18 \u3002 nebula> CREATE TAG player(name string, age int NOT NULL DEFAULT 18); \u63d2\u5165\u70b9 Kobe \uff0c\u53ea\u8bbe\u7f6e\u5c5e\u6027 name \u3002 nebula> INSERT VERTEX player(name) VALUES \"Kobe\":(\"Kobe\"); \u67e5\u8be2\u70b9 Kobe \uff0c\u5c5e\u6027 age \u4e3a\u9ed8\u8ba4\u503c 18 \u3002 nebula> FETCH PROP ON player \"Kobe\" +-----------------------------------------+ | vertices_ | +-----------------------------------------+ | (\"Kobe\" :player{age: 18, name: \"Kobe\"}) | +-----------------------------------------+","title":"NULL"},{"location":"3.ngql-guide/3.data-types/5.null/#null","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u63d2\u5165\u70b9\u6216\u8fb9\u65f6\uff0c\u5c5e\u6027\u503c\u53ef\u4ee5\u4e3a NULL \uff0c\u60a8\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e0d\u5141\u8bb8\u4e3a NULL \uff08 NOT NULL \uff09\uff0c\u5373\u63d2\u5165\u70b9\u6216\u8fb9\u65f6\u5fc5\u987b\u8bbe\u7f6e\u8be5\u5c5e\u6027\u7684\u503c\uff0c\u9664\u975e\u521b\u5efa\u5c5e\u6027\u65f6\u5df2\u7ecf\u8bbe\u7f6e\u9ed8\u8ba4\u503c\u3002","title":"NULL"},{"location":"3.ngql-guide/3.data-types/5.null/#null_1","text":"AND \u3001 OR \u3001 XOR \u548c NOT \u7684\u771f\u503c\u8868\u5982\u4e0b\u3002 a b a AND b a OR b a XOR NOT a false false false false false true false null false null null true false true false true true true true false false true true false true null null true null false true true true true false false null false false null null null null null null null null null null true null true null null","title":"NULL\u7684\u903b\u8f91\u64cd\u4f5c"},{"location":"3.ngql-guide/3.data-types/5.null/#opencypher","text":"Nebula Graph\u4e2d\uff0cNULL\u7684\u6bd4\u8f83\u548c\u64cd\u4f5c\u4e0eopenCypher\u4e0d\u540c\uff0c\u540e\u7eed\u4e5f\u53ef\u80fd\u4f1a\u6709\u53d8\u5316\u3002","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/3.data-types/5.null/#null_2","text":"Nebula Graph\u4e2d\uff0cNULL\u7684\u6bd4\u8f83\u64cd\u4f5c\u4e0d\u517c\u5bb9openCypher\u3002","title":"NULL\u7684\u6bd4\u8f83"},{"location":"3.ngql-guide/3.data-types/5.null/#null_3","text":"Nebula Graph\u4e2d\uff0c\u5bf9NULL\u7684\u64cd\u4f5c\u4ee5\u53ca\u8fd4\u56de\u7ed3\u679c\u4e0d\u517c\u5bb9openCypher\u3002","title":"NULL\u7684\u64cd\u4f5c\u548c\u8fd4\u56de"},{"location":"3.ngql-guide/3.data-types/5.null/#_1","text":"","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/3.data-types/5.null/#not_null","text":"\u521b\u5efa\u6807\u7b7e\uff0c\u540d\u79f0\u4e3a player \uff0c\u6307\u5b9a\u5c5e\u6027 name \u4e3a NOT NULL \u3002 nebula> CREATE TAG player(name string NOT NULL, age int); \u4f7f\u7528 SHOW \u547d\u4ee4\u67e5\u770b\u521b\u5efa\u6807\u7b7e\u8bed\u53e5\uff0c\u5c5e\u6027 name \u4e3a NOT NULL \uff0c\u5c5e\u6027 age \u4e3a\u9ed8\u8ba4\u7684 NULL \u3002 nebula> SHOW CREATE TAG player; +-----------+-----------------------------------+ | Tag | Create Tag | +-----------+-----------------------------------+ | \"student\" | \"CREATE TAG `player` ( | | | `name` string NOT NULL, | | | `age` int64 NULL | | | ) ttl_duration = 0, ttl_col = \"\"\" | +-----------+-----------------------------------+ \u63d2\u5165\u70b9 Kobe \uff0c\u5c5e\u6027 age \u53ef\u4ee5\u4e3a NULL \u3002 nebula> INSERT VERTEX player(name, age) VALUES \"Kobe\":(\"Kobe\",null);","title":"\u4f7f\u7528NOT NULL"},{"location":"3.ngql-guide/3.data-types/5.null/#not_null_1","text":"\u521b\u5efa\u6807\u7b7e\uff0c\u540d\u79f0\u4e3a player \uff0c\u6307\u5b9a\u5c5e\u6027 age \u4e3a NOT NULL \uff0c\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u503c 18 \u3002 nebula> CREATE TAG player(name string, age int NOT NULL DEFAULT 18); \u63d2\u5165\u70b9 Kobe \uff0c\u53ea\u8bbe\u7f6e\u5c5e\u6027 name \u3002 nebula> INSERT VERTEX player(name) VALUES \"Kobe\":(\"Kobe\"); \u67e5\u8be2\u70b9 Kobe \uff0c\u5c5e\u6027 age \u4e3a\u9ed8\u8ba4\u503c 18 \u3002 nebula> FETCH PROP ON player \"Kobe\" +-----------------------------------------+ | vertices_ | +-----------------------------------------+ | (\"Kobe\" :player{age: 18, name: \"Kobe\"}) | +-----------------------------------------+","title":"\u4f7f\u7528NOT NULL\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u503c"},{"location":"3.ngql-guide/3.data-types/6.list/","text":"\u5217\u8868 \u00b6 \u5217\u8868\uff08List\uff09\u662f\u590d\u5408\u6570\u636e\u7c7b\u578b\uff0c\u4e00\u4e2a\u5217\u8868\u662f\u4e00\u7ec4\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u53ef\u4ee5\u901a\u8fc7\u5143\u7d20\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u5143\u7d20\u3002 \u5217\u8868\u7528\u5de6\u65b9\u62ec\u53f7\uff08[\uff09\u548c\u53f3\u65b9\u62ec\u53f7\uff08]\uff09\u5305\u88f9\u591a\u4e2a\u5143\u7d20\uff0c\u5404\u4e2a\u5143\u7d20\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u9694\u5f00\u3002\u5143\u7d20\u524d\u540e\u7684\u7a7a\u683c\u5728\u5217\u8868\u4e2d\u88ab\u5ffd\u7565\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6362\u884c\u7b26\u3001\u5236\u8868\u7b26\u548c\u7a7a\u683c\u8c03\u6574\u683c\u5f0f\u3002 \u793a\u4f8b \u00b6 # \u8fd4\u56de\u5217\u8868[1,2,3] nebula> RETURN [1, 2, 3] AS List; +-----------+ | List | +-----------+ | [1, 2, 3] | +-----------+ # \u8fd4\u56de\u5217\u8868[1,2,3,4,5]\u4e2d\u4f4d\u7f6e\u4e0b\u6807\u4e3a3\u7684\u5143\u7d20\u3002\u5217\u8868\u7684\u4f4d\u7f6e\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u5143\u7d20\u4e3a4\u3002 nebula> RETURN range(1,5)[3]; +---------------+ | range(1,5)[3] | +---------------+ | 4 | +---------------+ # \u8fd4\u56de\u5217\u8868[1,2,3,4,5]\u4e2d\u4f4d\u7f6e\u4e0b\u6807\u4e3a-2\u7684\u5143\u7d20\u3002\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u4e0b\u6807\u662f-1\uff0c\u56e0\u6b64-2\u662f\u6307\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u53734\u3002 nebula> RETURN range(1,5)[-2]; +------------------+ | range(1,5)[-(2)] | +------------------+ | 4 | +------------------+ # \u8fd4\u56de\u5217\u8868[1,2,3,4,5]\u4e2d\u4f4d\u7f6e\u4e0b\u6807\u5927\u4e8e2\u7684\u5143\u7d20\u3002 nebula> RETURN [n IN range(1,5) WHERE n > 2] AS a; +-----------+ | a | +-----------+ | [3, 4, 5] | +-----------+ # \u7b5b\u9009\u5217\u8868[1,2,3,4,5]\u4e2d\u4f4d\u7f6e\u4e0b\u6807\u5927\u4e8e2\u7684\u5143\u7d20\uff0c\u5c06\u8fd9\u4e9b\u5143\u7d20\u5206\u522b\u505a\u8fd0\u7b97\u5e76\u8fd4\u56de\u3002 nebula> RETURN [n IN range(1,5) WHERE n > 2 | n + 10] AS a; +--------------+ | a | +--------------+ | [13, 14, 15] | +--------------+ # \u5c06\u5217\u8868[1,2,3,4,5]\u4e2d\u7684\u5143\u7d20\u5206\u522b\u505a\u8fd0\u7b97\uff0c\u7136\u540e\u8fd4\u56de\u3002 nebula> RETURN [n IN range(1,5) | n + 10] AS a; +----------------------+ | a | +----------------------+ | [11, 12, 13, 14, 15] | +----------------------+ # \u5c06\u5217\u8868[1,2,3,4,5]\u4e2d\u7684\u5143\u7d20\u5206\u522b\u505a\u8fd0\u7b97\uff0c\u7136\u540e\u5c06\u5217\u8868\u53bb\u6389\u8868\u5934\u5e76\u8fd4\u56de\u3002 nebula> RETURN tail([n IN range(1, 5) | 2 * n - 10]) AS a; +-----------------+ | a | +-----------------+ | [-6, -4, -2, 0] | +-----------------+ # \u5c06\u5217\u8868[1,2,3]\u4e2d\u7684\u5143\u7d20\u5224\u65ad\u4e3a\u771f\uff0c\u7136\u540e\u8fd4\u56de\u3002 nebula> RETURN [n IN range(1, 3) WHERE true | n] AS r; +-----------+ | r | +-----------+ | [1, 2, 3] | +-----------+ # \u8fd4\u56de\u5217\u8868[1,2,3]\u7684\u957f\u5ea6\u3002 nebula> RETURN size([1,2,3]); +---------------+ | size([1,2,3]) | +---------------+ | 3 | +---------------+ # \u5c06\u5217\u8868[92,90]\u4e2d\u7684\u5143\u7d20\u505a\u8fd0\u7b97\uff0c\u7136\u540e\u5728where\u5b50\u53e5\u4e2d\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\u3002 nebula> GO FROM \"player100\" OVER follow WHERE follow.degree NOT IN [x IN [92, 90] | x + $$.player.age] \\ YIELD follow._dst AS id, follow.degree AS degree; +-------------+--------+ | id | degree | +-------------+--------+ | \"player101\" | 95 | +-------------+--------+ | \"player102\" | 90 | +-------------+--------+ # \u5c06MATCH\u8bed\u53e5\u7684\u67e5\u8be2\u7ed3\u679c\u4f5c\u4e3a\u5217\u8868\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u8fd0\u7b97\u5e76\u8fd4\u56de\u3002 nebula> MATCH p = (n:player{name:\"Tim Duncan\"})-[:follow]->(m) \\ RETURN [n IN nodes(p) | n.age + 100] AS r; +------------+ | r | +------------+ | [142, 136] | +------------+ | [142, 133] | +------------+ OpenCypher\u517c\u5bb9\u6027 \u00b6 \u590d\u5408\u6570\u636e\u7c7b\u578b\uff08\u4f8b\u5982set\u3001map\u3001list\uff09 \u4e0d\u80fd \u5b58\u50a8\u4e3a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 \u4e0d\u652f\u6301\u4f7f\u7528 range() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u7684\u90e8\u5206\u5143\u7d20\u3002 nebula> RETURN range(0,5)[0..3]; [ERROR (-7)]: SyntaxError: syntax error near `3]' \u5728openCypher\u4e2d\uff0c\u67e5\u8be2\u8d8a\u754c\u5143\u7d20\u65f6\u8fd4\u56de null \uff0c\u800c\u5728nGQL\u4e2d\uff0c\u67e5\u8be2\u8d8a\u754c\u5143\u7d20\u65f6\u8fd4\u56de OUT_OF_RANGE \u3002 nebula> RETURN range(0,5)[-12]; +-------------------+ | range(0,5)[-(12)] | +-------------------+ | OUT_OF_RANGE | +-------------------+","title":"List"},{"location":"3.ngql-guide/3.data-types/6.list/#_1","text":"\u5217\u8868\uff08List\uff09\u662f\u590d\u5408\u6570\u636e\u7c7b\u578b\uff0c\u4e00\u4e2a\u5217\u8868\u662f\u4e00\u7ec4\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u53ef\u4ee5\u901a\u8fc7\u5143\u7d20\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u5143\u7d20\u3002 \u5217\u8868\u7528\u5de6\u65b9\u62ec\u53f7\uff08[\uff09\u548c\u53f3\u65b9\u62ec\u53f7\uff08]\uff09\u5305\u88f9\u591a\u4e2a\u5143\u7d20\uff0c\u5404\u4e2a\u5143\u7d20\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u9694\u5f00\u3002\u5143\u7d20\u524d\u540e\u7684\u7a7a\u683c\u5728\u5217\u8868\u4e2d\u88ab\u5ffd\u7565\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6362\u884c\u7b26\u3001\u5236\u8868\u7b26\u548c\u7a7a\u683c\u8c03\u6574\u683c\u5f0f\u3002","title":"\u5217\u8868"},{"location":"3.ngql-guide/3.data-types/6.list/#_2","text":"# \u8fd4\u56de\u5217\u8868[1,2,3] nebula> RETURN [1, 2, 3] AS List; +-----------+ | List | +-----------+ | [1, 2, 3] | +-----------+ # \u8fd4\u56de\u5217\u8868[1,2,3,4,5]\u4e2d\u4f4d\u7f6e\u4e0b\u6807\u4e3a3\u7684\u5143\u7d20\u3002\u5217\u8868\u7684\u4f4d\u7f6e\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u5143\u7d20\u4e3a4\u3002 nebula> RETURN range(1,5)[3]; +---------------+ | range(1,5)[3] | +---------------+ | 4 | +---------------+ # \u8fd4\u56de\u5217\u8868[1,2,3,4,5]\u4e2d\u4f4d\u7f6e\u4e0b\u6807\u4e3a-2\u7684\u5143\u7d20\u3002\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u4e0b\u6807\u662f-1\uff0c\u56e0\u6b64-2\u662f\u6307\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u53734\u3002 nebula> RETURN range(1,5)[-2]; +------------------+ | range(1,5)[-(2)] | +------------------+ | 4 | +------------------+ # \u8fd4\u56de\u5217\u8868[1,2,3,4,5]\u4e2d\u4f4d\u7f6e\u4e0b\u6807\u5927\u4e8e2\u7684\u5143\u7d20\u3002 nebula> RETURN [n IN range(1,5) WHERE n > 2] AS a; +-----------+ | a | +-----------+ | [3, 4, 5] | +-----------+ # \u7b5b\u9009\u5217\u8868[1,2,3,4,5]\u4e2d\u4f4d\u7f6e\u4e0b\u6807\u5927\u4e8e2\u7684\u5143\u7d20\uff0c\u5c06\u8fd9\u4e9b\u5143\u7d20\u5206\u522b\u505a\u8fd0\u7b97\u5e76\u8fd4\u56de\u3002 nebula> RETURN [n IN range(1,5) WHERE n > 2 | n + 10] AS a; +--------------+ | a | +--------------+ | [13, 14, 15] | +--------------+ # \u5c06\u5217\u8868[1,2,3,4,5]\u4e2d\u7684\u5143\u7d20\u5206\u522b\u505a\u8fd0\u7b97\uff0c\u7136\u540e\u8fd4\u56de\u3002 nebula> RETURN [n IN range(1,5) | n + 10] AS a; +----------------------+ | a | +----------------------+ | [11, 12, 13, 14, 15] | +----------------------+ # \u5c06\u5217\u8868[1,2,3,4,5]\u4e2d\u7684\u5143\u7d20\u5206\u522b\u505a\u8fd0\u7b97\uff0c\u7136\u540e\u5c06\u5217\u8868\u53bb\u6389\u8868\u5934\u5e76\u8fd4\u56de\u3002 nebula> RETURN tail([n IN range(1, 5) | 2 * n - 10]) AS a; +-----------------+ | a | +-----------------+ | [-6, -4, -2, 0] | +-----------------+ # \u5c06\u5217\u8868[1,2,3]\u4e2d\u7684\u5143\u7d20\u5224\u65ad\u4e3a\u771f\uff0c\u7136\u540e\u8fd4\u56de\u3002 nebula> RETURN [n IN range(1, 3) WHERE true | n] AS r; +-----------+ | r | +-----------+ | [1, 2, 3] | +-----------+ # \u8fd4\u56de\u5217\u8868[1,2,3]\u7684\u957f\u5ea6\u3002 nebula> RETURN size([1,2,3]); +---------------+ | size([1,2,3]) | +---------------+ | 3 | +---------------+ # \u5c06\u5217\u8868[92,90]\u4e2d\u7684\u5143\u7d20\u505a\u8fd0\u7b97\uff0c\u7136\u540e\u5728where\u5b50\u53e5\u4e2d\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\u3002 nebula> GO FROM \"player100\" OVER follow WHERE follow.degree NOT IN [x IN [92, 90] | x + $$.player.age] \\ YIELD follow._dst AS id, follow.degree AS degree; +-------------+--------+ | id | degree | +-------------+--------+ | \"player101\" | 95 | +-------------+--------+ | \"player102\" | 90 | +-------------+--------+ # \u5c06MATCH\u8bed\u53e5\u7684\u67e5\u8be2\u7ed3\u679c\u4f5c\u4e3a\u5217\u8868\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u8fd0\u7b97\u5e76\u8fd4\u56de\u3002 nebula> MATCH p = (n:player{name:\"Tim Duncan\"})-[:follow]->(m) \\ RETURN [n IN nodes(p) | n.age + 100] AS r; +------------+ | r | +------------+ | [142, 136] | +------------+ | [142, 133] | +------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/3.data-types/6.list/#opencypher","text":"\u590d\u5408\u6570\u636e\u7c7b\u578b\uff08\u4f8b\u5982set\u3001map\u3001list\uff09 \u4e0d\u80fd \u5b58\u50a8\u4e3a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 \u4e0d\u652f\u6301\u4f7f\u7528 range() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u7684\u90e8\u5206\u5143\u7d20\u3002 nebula> RETURN range(0,5)[0..3]; [ERROR (-7)]: SyntaxError: syntax error near `3]' \u5728openCypher\u4e2d\uff0c\u67e5\u8be2\u8d8a\u754c\u5143\u7d20\u65f6\u8fd4\u56de null \uff0c\u800c\u5728nGQL\u4e2d\uff0c\u67e5\u8be2\u8d8a\u754c\u5143\u7d20\u65f6\u8fd4\u56de OUT_OF_RANGE \u3002 nebula> RETURN range(0,5)[-12]; +-------------------+ | range(0,5)[-(12)] | +-------------------+ | OUT_OF_RANGE | +-------------------+","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/3.data-types/7.set/","text":"\u96c6\u5408 \u00b6 \u96c6\u5408\uff08Set\uff09\u662f\u590d\u5408\u6570\u636e\u7c7b\u578b\u3002 OpenCypher\u517c\u5bb9\u6027 \u00b6 \u5728OpenCypher\u4e2d\uff0c\u96c6\u5408\u4e0d\u662f\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5728nGQL\u4e2d\uff0c\u96c6\u5408\u4ecd\u5728\u8bbe\u8ba1\u9636\u6bb5\u3002","title":"Set"},{"location":"3.ngql-guide/3.data-types/7.set/#_1","text":"\u96c6\u5408\uff08Set\uff09\u662f\u590d\u5408\u6570\u636e\u7c7b\u578b\u3002","title":"\u96c6\u5408"},{"location":"3.ngql-guide/3.data-types/7.set/#opencypher","text":"\u5728OpenCypher\u4e2d\uff0c\u96c6\u5408\u4e0d\u662f\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5728nGQL\u4e2d\uff0c\u96c6\u5408\u4ecd\u5728\u8bbe\u8ba1\u9636\u6bb5\u3002","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/3.data-types/8.map/","text":"\u6620\u5c04 \u00b6 \u6620\u5c04\uff08Map\uff09\u662f\u590d\u5408\u6570\u636e\u7c7b\u578b\u3002\u4e00\u4e2a\u6620\u5c04\u662f\u4e00\u7ec4\u952e\u503c\u5bf9\uff08Key-Value\uff09\u7684\u65e0\u5e8f\u96c6\u5408\u3002\u5728\u6620\u5c04\u4e2d\uff0cKey\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0cValue\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7 map['<key>'] \u7684\u65b9\u6cd5\u83b7\u53d6\u6620\u5c04\u4e2d\u7684\u5143\u7d20\u3002 \u5b57\u9762\u503c\u6620\u5c04 \u00b6 nebula> YIELD {key: 'Value', listKey: [{inner: 'Map1'}, {inner: 'Map2'}]} +-------------------------------------------------------------+ | {key:Value,listKey:[{inner:Map1},{inner:Map2}]} | +-------------------------------------------------------------+ | {key: \"Value\", listKey: [{inner: \"Map1\"}, {inner: \"Map2\"}]} | +-------------------------------------------------------------+ OpenCypher\u517c\u5bb9\u6027 \u00b6 \u590d\u5408\u6570\u636e\u7c7b\u578b\uff08\u4f8b\u5982set\u3001map\u3001list\uff09 \u4e0d\u80fd \u5b58\u50a8\u4e3a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 \u4e0d\u652f\u6301\u6620\u5c04\u6295\u5f71\uff08map projection\uff09\u3002","title":"Map"},{"location":"3.ngql-guide/3.data-types/8.map/#_1","text":"\u6620\u5c04\uff08Map\uff09\u662f\u590d\u5408\u6570\u636e\u7c7b\u578b\u3002\u4e00\u4e2a\u6620\u5c04\u662f\u4e00\u7ec4\u952e\u503c\u5bf9\uff08Key-Value\uff09\u7684\u65e0\u5e8f\u96c6\u5408\u3002\u5728\u6620\u5c04\u4e2d\uff0cKey\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0cValue\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7 map['<key>'] \u7684\u65b9\u6cd5\u83b7\u53d6\u6620\u5c04\u4e2d\u7684\u5143\u7d20\u3002","title":"\u6620\u5c04"},{"location":"3.ngql-guide/3.data-types/8.map/#_2","text":"nebula> YIELD {key: 'Value', listKey: [{inner: 'Map1'}, {inner: 'Map2'}]} +-------------------------------------------------------------+ | {key:Value,listKey:[{inner:Map1},{inner:Map2}]} | +-------------------------------------------------------------+ | {key: \"Value\", listKey: [{inner: \"Map1\"}, {inner: \"Map2\"}]} | +-------------------------------------------------------------+","title":"\u5b57\u9762\u503c\u6620\u5c04"},{"location":"3.ngql-guide/3.data-types/8.map/#opencypher","text":"\u590d\u5408\u6570\u636e\u7c7b\u578b\uff08\u4f8b\u5982set\u3001map\u3001list\uff09 \u4e0d\u80fd \u5b58\u50a8\u4e3a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 \u4e0d\u652f\u6301\u6620\u5c04\u6295\u5f71\uff08map projection\uff09\u3002","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/3.data-types/9.type-conversion/","text":"\u7c7b\u578b\u8f6c\u6362 \u00b6 \u7c7b\u578b\u8f6c\u6362\u662f\u6307\u5c06\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u578b\u3002 \u9057\u7559\u517c\u5bb9\u95ee\u9898 \u00b6 nGQL 1.0\u4f7f\u7528C\u8bed\u8a00\u98ce\u683c\u7684\u7c7b\u578b\u8f6c\u6362\uff08\u663e\u793a\u6216\u9690\u5f0f\uff09\uff1a (type_name)expression \u3002\u4f8b\u5982 YIELD (int)(TRUE) \uff0c\u7ed3\u679c\u4e3a 1 \u3002\u4f46\u662f\u5bf9\u4e8e\u4e0d\u719f\u6089C\u8bed\u8a00\u7684\u7528\u6237\u6765\u8bf4\uff0c\u5f88\u5bb9\u6613\u51fa\u9519\u3002 nGQL 2.0\u4f7f\u7528openCypher\u7684\u65b9\u5f0f\u8fdb\u884c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u3002 \u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u51fd\u6570 \u00b6 \u51fd\u6570 \u8bf4\u660e toBoolean() \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5e03\u5c14\u3002 toFloat() \u5c06\u6574\u6570\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u3002 toInteger() \u5c06\u6d6e\u70b9\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u3002 type() \u8fd4\u56de\u5b57\u7b26\u4e32\u683c\u5f0f\u7684\u5173\u7cfb\u7c7b\u578b\u3002 \u793a\u4f8b \u00b6 nebula> UNWIND [true, false, 'true', 'false', NULL] AS b RETURN toBoolean(b) AS b; +----------+ | b | +----------+ | true | +----------+ | false | +----------+ | true | +----------+ | false | +----------+ | __NULL__ | +----------+ nebula> RETURN toFloat(1), toFloat('1.3'), toFloat('1e3'), toFloat('not a number'); +------------+----------------+----------------+-------------------------+ | toFloat(1) | toFloat(\"1.3\") | toFloat(\"1e3\") | toFloat(\"not a number\") | +------------+----------------+----------------+-------------------------+ | 1.0 | 1.3 | 1000.0 | __NULL__ | +------------+----------------+----------------+-------------------------+ nebula> RETURN toInteger(1), toInteger('1'), toInteger('1e3'), toInteger('not a number'); +--------------+----------------+------------------+---------------------------+ | toInteger(1) | toInteger(\"1\") | toInteger(\"1e3\") | toInteger(\"not a number\") | +--------------+----------------+------------------+---------------------------+ | 1 | 1 | 1000 | __NULL__ | +--------------+----------------+------------------+---------------------------+ nebula> MATCH (a:player)-[e]-() RETURN type(e); +----------+ | type(e) | +----------+ | \"follow\" | +----------+ | \"follow\" | nebula> MATCH (a:player {name: \"Tim Duncan\"}) WHERE toInteger(id(a)) == 100 RETURN a; +----------------------------------------------+ | a | +----------------------------------------------+ | (\"100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------+ nebula> MATCH (n:player) WITH n LIMIT toInteger(ceil(1.8)) RETURN count(*) AS count; +-------+ | count | +-------+ | 2 | +-------+","title":"Type conversion"},{"location":"3.ngql-guide/3.data-types/9.type-conversion/#_1","text":"\u7c7b\u578b\u8f6c\u6362\u662f\u6307\u5c06\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u578b\u3002","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"3.ngql-guide/3.data-types/9.type-conversion/#_2","text":"nGQL 1.0\u4f7f\u7528C\u8bed\u8a00\u98ce\u683c\u7684\u7c7b\u578b\u8f6c\u6362\uff08\u663e\u793a\u6216\u9690\u5f0f\uff09\uff1a (type_name)expression \u3002\u4f8b\u5982 YIELD (int)(TRUE) \uff0c\u7ed3\u679c\u4e3a 1 \u3002\u4f46\u662f\u5bf9\u4e8e\u4e0d\u719f\u6089C\u8bed\u8a00\u7684\u7528\u6237\u6765\u8bf4\uff0c\u5f88\u5bb9\u6613\u51fa\u9519\u3002 nGQL 2.0\u4f7f\u7528openCypher\u7684\u65b9\u5f0f\u8fdb\u884c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u3002","title":"\u9057\u7559\u517c\u5bb9\u95ee\u9898"},{"location":"3.ngql-guide/3.data-types/9.type-conversion/#_3","text":"\u51fd\u6570 \u8bf4\u660e toBoolean() \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5e03\u5c14\u3002 toFloat() \u5c06\u6574\u6570\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\u3002 toInteger() \u5c06\u6d6e\u70b9\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u3002 type() \u8fd4\u56de\u5b57\u7b26\u4e32\u683c\u5f0f\u7684\u5173\u7cfb\u7c7b\u578b\u3002","title":"\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u51fd\u6570"},{"location":"3.ngql-guide/3.data-types/9.type-conversion/#_4","text":"nebula> UNWIND [true, false, 'true', 'false', NULL] AS b RETURN toBoolean(b) AS b; +----------+ | b | +----------+ | true | +----------+ | false | +----------+ | true | +----------+ | false | +----------+ | __NULL__ | +----------+ nebula> RETURN toFloat(1), toFloat('1.3'), toFloat('1e3'), toFloat('not a number'); +------------+----------------+----------------+-------------------------+ | toFloat(1) | toFloat(\"1.3\") | toFloat(\"1e3\") | toFloat(\"not a number\") | +------------+----------------+----------------+-------------------------+ | 1.0 | 1.3 | 1000.0 | __NULL__ | +------------+----------------+----------------+-------------------------+ nebula> RETURN toInteger(1), toInteger('1'), toInteger('1e3'), toInteger('not a number'); +--------------+----------------+------------------+---------------------------+ | toInteger(1) | toInteger(\"1\") | toInteger(\"1e3\") | toInteger(\"not a number\") | +--------------+----------------+------------------+---------------------------+ | 1 | 1 | 1000 | __NULL__ | +--------------+----------------+------------------+---------------------------+ nebula> MATCH (a:player)-[e]-() RETURN type(e); +----------+ | type(e) | +----------+ | \"follow\" | +----------+ | \"follow\" | nebula> MATCH (a:player {name: \"Tim Duncan\"}) WHERE toInteger(id(a)) == 100 RETURN a; +----------------------------------------------+ | a | +----------------------------------------------+ | (\"100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------+ nebula> MATCH (n:player) WITH n LIMIT toInteger(ceil(1.8)) RETURN count(*) AS count; +-------+ | count | +-------+ | 2 | +-------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/4.variable-and-composite-queries/1.composite-queries/","text":"\u590d\u5408\u67e5\u8be2\uff08\u5b50\u53e5\u7ed3\u6784\uff09 \u00b6 \u590d\u5408\u67e5\u8be2\u5c06\u6765\u81ea\u4e0d\u540c\u8bf7\u6c42\u7684\u6570\u636e\u653e\u5728\u4e00\u8d77\uff0c\u7136\u540e\u8fdb\u884c\u8fc7\u6ee4\u3001\u5206\u7ec4\u6216\u8005\u6392\u5e8f\u7b49\uff0c\u6700\u540e\u8fd4\u56de\u7ed3\u679c\u3002 Nebula Graph\u652f\u6301\u4e09\u79cd\u65b9\u5f0f\u8fdb\u884c\u590d\u5408\u67e5\u8be2\uff08\u6216\u5b50\u67e5\u8be2\uff09\uff1a \uff08OpenCypher\u8bed\u53e5\uff09\u8fde\u63a5\u5404\u4e2a\u5b50\u53e5\uff0c\u8ba9\u5b83\u4eec\u5728\u5f7c\u6b64\u4e4b\u95f4\u63d0\u4f9b\u4e2d\u95f4\u7ed3\u679c\u96c6\u3002 \uff08nGQL\u6269\u5c55\uff09\u591a\u4e2a\u67e5\u8be2\u53ef\u4ee5\u5408\u5e76\u5904\u7406\uff0c\u4ee5\u82f1\u6587\u5206\u53f7\uff08;\uff09\u5206\u9694\uff0c\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u3002 \uff08nGQL\u6269\u5c55\uff09\u53ef\u4ee5\u7528\u7ba1\u9053\u7b26\uff08|\uff09\u5c06\u591a\u4e2a\u67e5\u8be2\u8fde\u63a5\u8d77\u6765\uff0c\u4e0a\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u53ef\u4ee5\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u67e5\u8be2\u7684\u8f93\u5165\u3002 OpenCypher\u517c\u5bb9\u6027 \u00b6 \u5728\u590d\u5408\u67e5\u8be2\u4e2d\uff0c\u8bf7 \u4e0d\u8981 \u6df7\u7528OpenCypher\u8bed\u53e5\u548cnGQL\u6269\u5c55\u8bed\u53e5\uff0c\u4f8b\u5982 MATCH ... | GO ... | YIELD ... \uff0c\u6df7\u7528\u4e24\u79cd\u8bed\u53e5\uff0c\u884c\u4e3a\u662f\u672a\u5b9a\u4e49\u7684\u3002 \u5982\u679c\u60a8\u4f7f\u7528OpenCypher\u8bed\u53e5\uff08 MATCH \u3001 RETURN \u3001 WITH \u7b49\uff09\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u7ba1\u9053\u7b26\u6216\u5206\u53f7\u7ec4\u5408\u5b50\u53e5\u3002 \u5982\u679c\u60a8\u4f7f\u7528nGQL\u6269\u5c55\u8bed\u53e5\uff08 FETCH \u3001 GO \u3001 LOOKUP \u7b49\uff09\uff0c\u5fc5\u987b\u4f7f\u7528\u7ba1\u9053\u7b26\u6216\u5206\u53f7\u7ec4\u5408\u5b50\u53e5\u3002 \u590d\u5408\u67e5\u8be2\u4e0d\u652f\u6301\u4e8b\u52a1 \u00b6 \u4f8b\u5982\u4e00\u4e2a\u67e5\u8be2\u7531\u4e09\u4e2a\u5b50\u67e5\u8be2A\u3001B\u3001C\u7ec4\u6210\uff0cA\u662f\u4e00\u4e2a\u8bfb\u64cd\u4f5c\uff0cB\u662f\u4e00\u4e2a\u8ba1\u7b97\u64cd\u4f5c\uff0cC\u662f\u4e00\u4e2a\u5199\u64cd\u4f5c\uff0c\u5982\u679c\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u64cd\u4f5c\u6267\u884c\u5931\u8d25\uff0c\u5219\u6574\u4e2a\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\uff1a\u6ca1\u6709\u56de\u6eda\uff0c\u800c\u4e14\u5199\u5165\u7684\u5185\u5bb9\u53d6\u51b3\u4e8e\u6267\u884c\u7a0b\u5e8f\u3002 \u8bf4\u660e \uff1aopenCypher\u6ca1\u6709\u4e8b\u52a1\u8981\u6c42\u3002 \u793a\u4f8b \u00b6 OpenCypher\u8bed\u53e5 # \u5b50\u53e5\u8fde\u63a5\u591a\u4e2a\u67e5\u8be2\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})--() \\ WITH nodes(p) AS n \\ UNWIND n AS n1 \\ RETURN DISTINCT n1; nGQL\u6269\u5c55\uff08\u5206\u53f7\uff09 # \u53ea\u8fd4\u56de\u8fb9\u3002 nebula> SHOW TAGS; SHOW EDGES; # \u63d2\u5165\u591a\u4e2a\u70b9\u3002 nebula> INSERT VERTEX player(name, age) VALUES \"player100\":(\"Tim Duncan\", 42); \\ INSERT VERTEX player(name, age) VALUES \"player101\":(\"Tony Parker\", 36); \\ INSERT VERTEX player(name, age) VALUES \"player102\":(\"LaMarcus Aldridge\", 33); nGQL\u6269\u5c55\uff08\u7ba1\u9053\u7b26\uff09 # \u7ba1\u9053\u7b26\u8fde\u63a5\u591a\u4e2a\u67e5\u8be2\u3002 nebula> GO FROM \"player100\" OVER follow YIELD follow._dst AS id | \\ GO FROM $-.id OVER serve YIELD $$.team.name AS Team, \\ $^.player.name AS Player; +---------+-------------+ | Team | Player | +---------+-------------+ | Nuggets | Tony Parker | +---------+-------------+","title":"Composite queries"},{"location":"3.ngql-guide/4.variable-and-composite-queries/1.composite-queries/#_1","text":"\u590d\u5408\u67e5\u8be2\u5c06\u6765\u81ea\u4e0d\u540c\u8bf7\u6c42\u7684\u6570\u636e\u653e\u5728\u4e00\u8d77\uff0c\u7136\u540e\u8fdb\u884c\u8fc7\u6ee4\u3001\u5206\u7ec4\u6216\u8005\u6392\u5e8f\u7b49\uff0c\u6700\u540e\u8fd4\u56de\u7ed3\u679c\u3002 Nebula Graph\u652f\u6301\u4e09\u79cd\u65b9\u5f0f\u8fdb\u884c\u590d\u5408\u67e5\u8be2\uff08\u6216\u5b50\u67e5\u8be2\uff09\uff1a \uff08OpenCypher\u8bed\u53e5\uff09\u8fde\u63a5\u5404\u4e2a\u5b50\u53e5\uff0c\u8ba9\u5b83\u4eec\u5728\u5f7c\u6b64\u4e4b\u95f4\u63d0\u4f9b\u4e2d\u95f4\u7ed3\u679c\u96c6\u3002 \uff08nGQL\u6269\u5c55\uff09\u591a\u4e2a\u67e5\u8be2\u53ef\u4ee5\u5408\u5e76\u5904\u7406\uff0c\u4ee5\u82f1\u6587\u5206\u53f7\uff08;\uff09\u5206\u9694\uff0c\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u3002 \uff08nGQL\u6269\u5c55\uff09\u53ef\u4ee5\u7528\u7ba1\u9053\u7b26\uff08|\uff09\u5c06\u591a\u4e2a\u67e5\u8be2\u8fde\u63a5\u8d77\u6765\uff0c\u4e0a\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u53ef\u4ee5\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u67e5\u8be2\u7684\u8f93\u5165\u3002","title":"\u590d\u5408\u67e5\u8be2\uff08\u5b50\u53e5\u7ed3\u6784\uff09"},{"location":"3.ngql-guide/4.variable-and-composite-queries/1.composite-queries/#opencypher","text":"\u5728\u590d\u5408\u67e5\u8be2\u4e2d\uff0c\u8bf7 \u4e0d\u8981 \u6df7\u7528OpenCypher\u8bed\u53e5\u548cnGQL\u6269\u5c55\u8bed\u53e5\uff0c\u4f8b\u5982 MATCH ... | GO ... | YIELD ... \uff0c\u6df7\u7528\u4e24\u79cd\u8bed\u53e5\uff0c\u884c\u4e3a\u662f\u672a\u5b9a\u4e49\u7684\u3002 \u5982\u679c\u60a8\u4f7f\u7528OpenCypher\u8bed\u53e5\uff08 MATCH \u3001 RETURN \u3001 WITH \u7b49\uff09\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u7ba1\u9053\u7b26\u6216\u5206\u53f7\u7ec4\u5408\u5b50\u53e5\u3002 \u5982\u679c\u60a8\u4f7f\u7528nGQL\u6269\u5c55\u8bed\u53e5\uff08 FETCH \u3001 GO \u3001 LOOKUP \u7b49\uff09\uff0c\u5fc5\u987b\u4f7f\u7528\u7ba1\u9053\u7b26\u6216\u5206\u53f7\u7ec4\u5408\u5b50\u53e5\u3002","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/4.variable-and-composite-queries/1.composite-queries/#_2","text":"\u4f8b\u5982\u4e00\u4e2a\u67e5\u8be2\u7531\u4e09\u4e2a\u5b50\u67e5\u8be2A\u3001B\u3001C\u7ec4\u6210\uff0cA\u662f\u4e00\u4e2a\u8bfb\u64cd\u4f5c\uff0cB\u662f\u4e00\u4e2a\u8ba1\u7b97\u64cd\u4f5c\uff0cC\u662f\u4e00\u4e2a\u5199\u64cd\u4f5c\uff0c\u5982\u679c\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u64cd\u4f5c\u6267\u884c\u5931\u8d25\uff0c\u5219\u6574\u4e2a\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\uff1a\u6ca1\u6709\u56de\u6eda\uff0c\u800c\u4e14\u5199\u5165\u7684\u5185\u5bb9\u53d6\u51b3\u4e8e\u6267\u884c\u7a0b\u5e8f\u3002 \u8bf4\u660e \uff1aopenCypher\u6ca1\u6709\u4e8b\u52a1\u8981\u6c42\u3002","title":"\u590d\u5408\u67e5\u8be2\u4e0d\u652f\u6301\u4e8b\u52a1"},{"location":"3.ngql-guide/4.variable-and-composite-queries/1.composite-queries/#_3","text":"OpenCypher\u8bed\u53e5 # \u5b50\u53e5\u8fde\u63a5\u591a\u4e2a\u67e5\u8be2\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})--() \\ WITH nodes(p) AS n \\ UNWIND n AS n1 \\ RETURN DISTINCT n1; nGQL\u6269\u5c55\uff08\u5206\u53f7\uff09 # \u53ea\u8fd4\u56de\u8fb9\u3002 nebula> SHOW TAGS; SHOW EDGES; # \u63d2\u5165\u591a\u4e2a\u70b9\u3002 nebula> INSERT VERTEX player(name, age) VALUES \"player100\":(\"Tim Duncan\", 42); \\ INSERT VERTEX player(name, age) VALUES \"player101\":(\"Tony Parker\", 36); \\ INSERT VERTEX player(name, age) VALUES \"player102\":(\"LaMarcus Aldridge\", 33); nGQL\u6269\u5c55\uff08\u7ba1\u9053\u7b26\uff09 # \u7ba1\u9053\u7b26\u8fde\u63a5\u591a\u4e2a\u67e5\u8be2\u3002 nebula> GO FROM \"player100\" OVER follow YIELD follow._dst AS id | \\ GO FROM $-.id OVER serve YIELD $$.team.name AS Team, \\ $^.player.name AS Player; +---------+-------------+ | Team | Player | +---------+-------------+ | Nuggets | Tony Parker | +---------+-------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/4.variable-and-composite-queries/2.user-defined-variables/","text":"\u81ea\u5b9a\u4e49\u53d8\u91cf \u00b6 Nebula Graph\u5141\u8bb8\u5c06\u4e00\u6761\u8bed\u53e5\u7684\u7ed3\u679c\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u53d8\u91cf\u4f20\u9012\u7ed9\u53e6\u4e00\u6761\u8bed\u53e5\u3002 OpenCypher\u517c\u5bb9\u6027 \u00b6 \u5f53\u60a8\u5f15\u7528\u4e00\u4e2a\u53d8\u91cf\u7684\u70b9\u3001\u8fb9\u6216\u8def\u5f84\uff0c\u9700\u8981\u5148\u7ed9\u5b83\u547d\u540d\u3002\u4f8b\u5982\uff1a nebula> MATCH (v:player{name:\"Tim Duncan\"}) RETURN v; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +----------------------------------------------------+ \u793a\u4f8b\u4e2d\u7684 v \u5c31\u662f\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002 nGQL\u6269\u5c55 \u00b6 nGQL\u6269\u5c55\u7684\u81ea\u5b9a\u4e49\u53d8\u91cf\u53ef\u4ee5\u8868\u793a\u4e3a $<var_name> \uff0c var_name \u7531\u5b57\u6bcd\u6216\u6570\u5b57\u6784\u6210\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u5176\u4ed6\u5b57\u7b26\u3002 \u81ea\u5b9a\u4e49\u53d8\u91cf\u4ec5\u5728\u5f53\u524d\u6267\u884c\u6709\u6548\uff0c\u6267\u884c\u7ed3\u675f\u540e\u53d8\u91cf\u4e5f\u4f1a\u91ca\u653e\uff0c \u4e0d\u80fd \u5728\u5176\u4ed6\u5ba2\u6237\u7aef\u6216\u6267\u884c\u4e2d\u4f7f\u7528\u4e4b\u524d\u7684\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002 \u60a8\u53ef\u4ee5\u5728\u590d\u5408\u67e5\u8be2\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002\u590d\u5408\u67e5\u8be2\u7684\u8be6\u7ec6\u4fe1\u606f\u8bf7\u53c2\u89c1 \u590d\u5408\u67e5\u8be2 \u3002 \u8bf4\u660e \uff1a\u81ea\u5b9a\u4e49\u53d8\u91cf\u533a\u5206\u5927\u5c0f\u5199\u3002 \u793a\u4f8b \u00b6 nebula> $var = GO FROM \"player100\" OVER follow YIELD follow._dst AS id; \\ GO FROM $var.id OVER serve YIELD $$.team.name AS Team, \\ $^.player.name AS Player; +---------+-------------+ | Team | Player | +---------+-------------+ | Nuggets | Tony Parker | +---------+-------------+","title":"User-defined variables"},{"location":"3.ngql-guide/4.variable-and-composite-queries/2.user-defined-variables/#_1","text":"Nebula Graph\u5141\u8bb8\u5c06\u4e00\u6761\u8bed\u53e5\u7684\u7ed3\u679c\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u53d8\u91cf\u4f20\u9012\u7ed9\u53e6\u4e00\u6761\u8bed\u53e5\u3002","title":"\u81ea\u5b9a\u4e49\u53d8\u91cf"},{"location":"3.ngql-guide/4.variable-and-composite-queries/2.user-defined-variables/#opencypher","text":"\u5f53\u60a8\u5f15\u7528\u4e00\u4e2a\u53d8\u91cf\u7684\u70b9\u3001\u8fb9\u6216\u8def\u5f84\uff0c\u9700\u8981\u5148\u7ed9\u5b83\u547d\u540d\u3002\u4f8b\u5982\uff1a nebula> MATCH (v:player{name:\"Tim Duncan\"}) RETURN v; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +----------------------------------------------------+ \u793a\u4f8b\u4e2d\u7684 v \u5c31\u662f\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/4.variable-and-composite-queries/2.user-defined-variables/#ngql","text":"nGQL\u6269\u5c55\u7684\u81ea\u5b9a\u4e49\u53d8\u91cf\u53ef\u4ee5\u8868\u793a\u4e3a $<var_name> \uff0c var_name \u7531\u5b57\u6bcd\u6216\u6570\u5b57\u6784\u6210\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u5176\u4ed6\u5b57\u7b26\u3002 \u81ea\u5b9a\u4e49\u53d8\u91cf\u4ec5\u5728\u5f53\u524d\u6267\u884c\u6709\u6548\uff0c\u6267\u884c\u7ed3\u675f\u540e\u53d8\u91cf\u4e5f\u4f1a\u91ca\u653e\uff0c \u4e0d\u80fd \u5728\u5176\u4ed6\u5ba2\u6237\u7aef\u6216\u6267\u884c\u4e2d\u4f7f\u7528\u4e4b\u524d\u7684\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002 \u60a8\u53ef\u4ee5\u5728\u590d\u5408\u67e5\u8be2\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002\u590d\u5408\u67e5\u8be2\u7684\u8be6\u7ec6\u4fe1\u606f\u8bf7\u53c2\u89c1 \u590d\u5408\u67e5\u8be2 \u3002 \u8bf4\u660e \uff1a\u81ea\u5b9a\u4e49\u53d8\u91cf\u533a\u5206\u5927\u5c0f\u5199\u3002","title":"nGQL\u6269\u5c55"},{"location":"3.ngql-guide/4.variable-and-composite-queries/2.user-defined-variables/#_2","text":"nebula> $var = GO FROM \"player100\" OVER follow YIELD follow._dst AS id; \\ GO FROM $var.id OVER serve YIELD $$.team.name AS Team, \\ $^.player.name AS Player; +---------+-------------+ | Team | Player | +---------+-------------+ | Nuggets | Tony Parker | +---------+-------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/","text":"\u5f15\u7528\u5c5e\u6027 \u00b6 \u60a8\u53ef\u4ee5\u5728 WHERE \u548c YIELD \u5b50\u53e5\u4e2d\u5f15\u7528\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 \u8bf4\u660e \uff1a\u672c\u529f\u80fd\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u5f15\u7528\u70b9\u7684\u5c5e\u6027 \u00b6 \u8d77\u59cb\u70b9 \u00b6 $^.<tag_name>.<prop_name> \u53c2\u6570 \u8bf4\u660e $^ \u8868\u793a\u8d77\u59cb\u70b9\u3002 tag_name \u70b9\u7684\u6807\u7b7e\u540d\u79f0\u3002 prop_name \u6807\u7b7e\u5185\u7684\u5c5e\u6027\u540d\u79f0\u3002 \u76ee\u7684\u70b9 \u00b6 $$.tag_name.prop_name \u53c2\u6570 \u8bf4\u660e $$ \u8868\u793a\u76ee\u7684\u70b9\u3002 tag_name \u70b9\u7684\u6807\u7b7e\u540d\u79f0\u3002 prop_name \u6807\u7b7e\u5185\u7684\u5c5e\u6027\u540d\u79f0\u3002 \u5f15\u7528\u8fb9\u7684\u5c5e\u6027 \u00b6 \u5f15\u7528\u81ea\u5b9a\u4e49\u7684\u8fb9\u5c5e\u6027 \u00b6 <edge_type>.<prop_name> \u53c2\u6570 \u8bf4\u660e edge_type \u8fb9\u7c7b\u578b\u3002 prop_name \u8fb9\u7c7b\u578b\u7684\u5c5e\u6027\u540d\u79f0\u3002 \u5f15\u7528\u5185\u7f6e\u7684\u8fb9\u5c5e\u6027 \u00b6 \u9664\u4e86\u81ea\u5b9a\u4e49\u7684\u8fb9\u5c5e\u6027\uff0c\u6bcf\u6761\u8fb9\u8fd8\u6709\u5982\u4e0b\u4e09\u79cd\u5185\u7f6e\u5c5e\u6027\uff1a \u53c2\u6570 \u8bf4\u660e _src \u8fb9\u7684\u8d77\u59cb\u70b9\u3002 _dst \u8fb9\u7684\u76ee\u7684\u70b9\u3002 _type \u8fb9\u7684\u7c7b\u578b\u5185\u90e8\u7f16\u7801\uff0c\u6b63\u8d1f\u53f7\u8868\u793a\u65b9\u5411\u3002 _rank \u8fb9\u7684rank\u503c\u3002 \u793a\u4f8b \u00b6 # \u8fd4\u56de\u8d77\u59cb\u70b9\u7684\u6807\u7b7eplayer\u7684name\u5c5e\u6027\u503c\u548c\u76ee\u7684\u70b9\u7684\u6807\u7b7eplayer\u7684age\u5c5e\u6027\u503c\u3002 nebula> GO FROM \"player100\" OVER follow YIELD $^.player.name AS startName, $$.player.age AS endAge; +--------------+--------+ | startName | endAge | +--------------+--------+ | \"Tim Duncan\" | 36 | +--------------+--------+ | \"Tim Duncan\" | 33 | +--------------+--------+ # \u8fd4\u56de\u8fb9\u7c7b\u578bfollow\u7684degree\u5c5e\u6027\u503c\u3002 nebula> GO FROM \"player100\" OVER follow YIELD follow.degree; +---------------+ | follow.degree | +---------------+ | 95 | +---------------+ | 90 | +---------------+ # \u8fd4\u56de\u8fb9\u7c7b\u578bfollow\u7684\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u3001\u8fb9\u7c7b\u578b\u7f16\u7801\u548c\u8fb9rank\u503c\u3002 ```ngql nebula> GO FROM \"player100\" OVER follow YIELD follow._src, follow._dst, follow._type, follow._rank; +-------------+-------------+--------------+--------------+ | follow._src | follow._dst | follow._type | follow._rank | +-------------+-------------+--------------+--------------+ | \"player100\" | \"player101\" | 136 | 0 | +-------------+-------------+--------------+--------------+ | \"player100\" | \"player102\" | 136 | 0 | +-------------+-------------+--------------+--------------+","title":"Property reference"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/#_1","text":"\u60a8\u53ef\u4ee5\u5728 WHERE \u548c YIELD \u5b50\u53e5\u4e2d\u5f15\u7528\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 \u8bf4\u660e \uff1a\u672c\u529f\u80fd\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"\u5f15\u7528\u5c5e\u6027"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/#_2","text":"","title":"\u5f15\u7528\u70b9\u7684\u5c5e\u6027"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/#_3","text":"$^.<tag_name>.<prop_name> \u53c2\u6570 \u8bf4\u660e $^ \u8868\u793a\u8d77\u59cb\u70b9\u3002 tag_name \u70b9\u7684\u6807\u7b7e\u540d\u79f0\u3002 prop_name \u6807\u7b7e\u5185\u7684\u5c5e\u6027\u540d\u79f0\u3002","title":"\u8d77\u59cb\u70b9"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/#_4","text":"$$.tag_name.prop_name \u53c2\u6570 \u8bf4\u660e $$ \u8868\u793a\u76ee\u7684\u70b9\u3002 tag_name \u70b9\u7684\u6807\u7b7e\u540d\u79f0\u3002 prop_name \u6807\u7b7e\u5185\u7684\u5c5e\u6027\u540d\u79f0\u3002","title":"\u76ee\u7684\u70b9"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/#_5","text":"","title":"\u5f15\u7528\u8fb9\u7684\u5c5e\u6027"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/#_6","text":"<edge_type>.<prop_name> \u53c2\u6570 \u8bf4\u660e edge_type \u8fb9\u7c7b\u578b\u3002 prop_name \u8fb9\u7c7b\u578b\u7684\u5c5e\u6027\u540d\u79f0\u3002","title":"\u5f15\u7528\u81ea\u5b9a\u4e49\u7684\u8fb9\u5c5e\u6027"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/#_7","text":"\u9664\u4e86\u81ea\u5b9a\u4e49\u7684\u8fb9\u5c5e\u6027\uff0c\u6bcf\u6761\u8fb9\u8fd8\u6709\u5982\u4e0b\u4e09\u79cd\u5185\u7f6e\u5c5e\u6027\uff1a \u53c2\u6570 \u8bf4\u660e _src \u8fb9\u7684\u8d77\u59cb\u70b9\u3002 _dst \u8fb9\u7684\u76ee\u7684\u70b9\u3002 _type \u8fb9\u7684\u7c7b\u578b\u5185\u90e8\u7f16\u7801\uff0c\u6b63\u8d1f\u53f7\u8868\u793a\u65b9\u5411\u3002 _rank \u8fb9\u7684rank\u503c\u3002","title":"\u5f15\u7528\u5185\u7f6e\u7684\u8fb9\u5c5e\u6027"},{"location":"3.ngql-guide/4.variable-and-composite-queries/3.property-reference/#_8","text":"# \u8fd4\u56de\u8d77\u59cb\u70b9\u7684\u6807\u7b7eplayer\u7684name\u5c5e\u6027\u503c\u548c\u76ee\u7684\u70b9\u7684\u6807\u7b7eplayer\u7684age\u5c5e\u6027\u503c\u3002 nebula> GO FROM \"player100\" OVER follow YIELD $^.player.name AS startName, $$.player.age AS endAge; +--------------+--------+ | startName | endAge | +--------------+--------+ | \"Tim Duncan\" | 36 | +--------------+--------+ | \"Tim Duncan\" | 33 | +--------------+--------+ # \u8fd4\u56de\u8fb9\u7c7b\u578bfollow\u7684degree\u5c5e\u6027\u503c\u3002 nebula> GO FROM \"player100\" OVER follow YIELD follow.degree; +---------------+ | follow.degree | +---------------+ | 95 | +---------------+ | 90 | +---------------+ # \u8fd4\u56de\u8fb9\u7c7b\u578bfollow\u7684\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u3001\u8fb9\u7c7b\u578b\u7f16\u7801\u548c\u8fb9rank\u503c\u3002 ```ngql nebula> GO FROM \"player100\" OVER follow YIELD follow._src, follow._dst, follow._type, follow._rank; +-------------+-------------+--------------+--------------+ | follow._src | follow._dst | follow._type | follow._rank | +-------------+-------------+--------------+--------------+ | \"player100\" | \"player101\" | 136 | 0 | +-------------+-------------+--------------+--------------+ | \"player100\" | \"player102\" | 136 | 0 | +-------------+-------------+--------------+--------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/1.comparison/","text":"\u6bd4\u8f83\u7b26 \u00b6 Nebula Graph\u652f\u6301\u7684\u6bd4\u8f83\u7b26\u5982\u4e0b\u3002 \u7b26\u53f7 \u8bf4\u660e = \u8d4b\u503c + \u52a0\u6cd5 - \u51cf\u6cd5 * \u4e58\u6cd5 / \u9664\u6cd5 == \u76f8\u7b49 != , <> \u4e0d\u7b49\u4e8e < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e % \u53d6\u6a21 - \u8d1f\u6570\u7b26\u53f7 IS NULL \u4e3aNULL IS NOT NULL \u4e0d\u4e3aNULL \u6bd4\u8f83\u64cd\u4f5c\u7684\u7ed3\u679c\u662f true \u6216\u8005 false \u3002 \u8bf4\u660e \uff1a\u6bd4\u8f83\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u901a\u5e38\u6ca1\u6709\u5b9a\u4e49\uff0c\u7ed3\u679c\u53ef\u80fd\u662fNULL\u6216\u5176\u5b83\u3002 OpenCypher\u517c\u5bb9\u6027 \u00b6 Nebula Graph\u4e2d\uff0cNULL\u7684\u6bd4\u8f83\u64cd\u4f5c\u548copenCypher\u4e0d\u540c\uff0c\u884c\u4e3a\u4e5f\u53ef\u80fd\u4f1a\u6539\u53d8\u3002\u5728openCypher\u4e2d\uff0c IS [NOT] NULL \u901a\u5e38\u4e0e OPTIONAL MATCH \u4e00\u8d77\u4f7f\u7528\uff0c\u4f46\u662fnGQL\u4e0d\u652f\u6301 OPTIONAL MATCH \u3002 \u793a\u4f8b \u00b6 == \u00b6 \u5b57\u7b26\u4e32\u6bd4\u8f83\u65f6\uff0c\u4f1a\u533a\u5206\u5927\u5c0f\u5199\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u4e0d\u76f8\u7b49\u3002 \u8bf4\u660e \uff1anGQL\u4e2d\u7684\u76f8\u7b49\u7b26\u53f7\u662f == \uff0copenCypher\u4e2d\u7684\u76f8\u7b49\u7b26\u53f7\u662f = \u3002 nebula> RETURN 'A' == 'a', toUpper('A') == toUpper('a'), toLower('A') == toLower('a'); +------------+------------------------------+------------------------------+ | (\"A\"==\"a\") | (toUpper(\"A\")==toUpper(\"a\")) | (toLower(\"A\")==toLower(\"a\")) | +------------+------------------------------+------------------------------+ | false | true | true | +------------+------------------------------+------------------------------+ nebula> RETURN '2' == 2, toInteger('2') == 2; +----------+---------------------+ | (\"2\"==2) | (toInteger(\"2\")==2) | +----------+---------------------+ | false | true | +----------+---------------------+ > \u00b6 nebula> RETURN 3 > 2; +-------+ | (3>2) | +-------+ | true | +-------+ nebula> WITH 4 AS one, 3 AS two \\ RETURN one > two AS result; +--------+ | result | +--------+ | true | +--------+ >= \u00b6 nebula> RETURN 2 >= \"2\", 2 >= 2; +----------+--------+ | (2>=\"2\") | (2>=2) | +----------+--------+ | __NULL__ | true | +----------+--------+ < \u00b6 nebula> YIELD 2.0 < 1.9; +---------+ | (2<1.9) | +---------+ | false | +---------+ <= \u00b6 nebula> YIELD 0.11 <= 0.11; +--------------+ | (0.11<=0.11) | +--------------+ | true | +--------------+ != \u00b6 nebula> YIELD 1 != '1'; +--------+ | (1!=1) | +--------+ | true | +--------+ IS [NOT] NULL \u00b6 nebula> RETURN null IS NULL AS value1, null == null AS value2, null != null AS value3; +--------+----------+----------+ | value1 | value2 | value3 | +--------+----------+----------+ | true | __NULL__ | __NULL__ | +--------+----------+----------+ nebula> RETURN length(NULL), size(NULL), count(NULL), NULL IS NULL, NULL IS NOT NULL, sin(NULL), NULL + NULL, [1, NULL] IS NULL; +--------------+------------+-------------+--------------+------------------+-----------+-------------+------------------+ | length(NULL) | size(NULL) | COUNT(NULL) | NULL IS NULL | NULL IS NOT NULL | sin(NULL) | (NULL+NULL) | [1,NULL] IS NULL | +--------------+------------+-------------+--------------+------------------+-----------+-------------+------------------+ | BAD_TYPE | __NULL__ | 0 | true | false | BAD_TYPE | __NULL__ | false | +--------------+------------+-------------+--------------+------------------+-----------+-------------+------------------+ nebula> WITH {name: null} AS map \\ RETURN map.name IS NOT NULL; +----------------------+ | map.name IS NOT NULL | +----------------------+ | false | +----------------------+ nebula> WITH {name: 'Mats', name2: 'Pontus'} AS map1, \\ {name: null} AS map2, {notName: 0, notName2: null } AS map3 \\ RETURN map1.name IS NULL, map2.name IS NOT NULL, map3.name IS NULL; +-------------------+-----------------------+-------------------+ | map1.name IS NULL | map2.name IS NOT NULL | map3.name IS NULL | +-------------------+-----------------------+-------------------+ | false | false | true | +-------------------+-----------------------+-------------------+ nebula> MATCH (n:player) \\ RETURN n.age IS NULL, n.name IS NOT NULL, n.empty IS NULL; +---------------+--------------------+-----------------+ | n.age IS NULL | n.name IS NOT NULL | n.empty IS NULL | +---------------+--------------------+-----------------+ | false | true | true | +---------------+--------------------+-----------------+ | false | true | true | +---------------+--------------------+-----------------+ | false | true | true | +---------------+--------------------+-----------------+ ...","title":"Comparison"},{"location":"3.ngql-guide/5.operators/1.comparison/#_1","text":"Nebula Graph\u652f\u6301\u7684\u6bd4\u8f83\u7b26\u5982\u4e0b\u3002 \u7b26\u53f7 \u8bf4\u660e = \u8d4b\u503c + \u52a0\u6cd5 - \u51cf\u6cd5 * \u4e58\u6cd5 / \u9664\u6cd5 == \u76f8\u7b49 != , <> \u4e0d\u7b49\u4e8e < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e % \u53d6\u6a21 - \u8d1f\u6570\u7b26\u53f7 IS NULL \u4e3aNULL IS NOT NULL \u4e0d\u4e3aNULL \u6bd4\u8f83\u64cd\u4f5c\u7684\u7ed3\u679c\u662f true \u6216\u8005 false \u3002 \u8bf4\u660e \uff1a\u6bd4\u8f83\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u901a\u5e38\u6ca1\u6709\u5b9a\u4e49\uff0c\u7ed3\u679c\u53ef\u80fd\u662fNULL\u6216\u5176\u5b83\u3002","title":"\u6bd4\u8f83\u7b26"},{"location":"3.ngql-guide/5.operators/1.comparison/#opencypher","text":"Nebula Graph\u4e2d\uff0cNULL\u7684\u6bd4\u8f83\u64cd\u4f5c\u548copenCypher\u4e0d\u540c\uff0c\u884c\u4e3a\u4e5f\u53ef\u80fd\u4f1a\u6539\u53d8\u3002\u5728openCypher\u4e2d\uff0c IS [NOT] NULL \u901a\u5e38\u4e0e OPTIONAL MATCH \u4e00\u8d77\u4f7f\u7528\uff0c\u4f46\u662fnGQL\u4e0d\u652f\u6301 OPTIONAL MATCH \u3002","title":"OpenCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/5.operators/1.comparison/#_2","text":"","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/1.comparison/#_3","text":"\u5b57\u7b26\u4e32\u6bd4\u8f83\u65f6\uff0c\u4f1a\u533a\u5206\u5927\u5c0f\u5199\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u4e0d\u76f8\u7b49\u3002 \u8bf4\u660e \uff1anGQL\u4e2d\u7684\u76f8\u7b49\u7b26\u53f7\u662f == \uff0copenCypher\u4e2d\u7684\u76f8\u7b49\u7b26\u53f7\u662f = \u3002 nebula> RETURN 'A' == 'a', toUpper('A') == toUpper('a'), toLower('A') == toLower('a'); +------------+------------------------------+------------------------------+ | (\"A\"==\"a\") | (toUpper(\"A\")==toUpper(\"a\")) | (toLower(\"A\")==toLower(\"a\")) | +------------+------------------------------+------------------------------+ | false | true | true | +------------+------------------------------+------------------------------+ nebula> RETURN '2' == 2, toInteger('2') == 2; +----------+---------------------+ | (\"2\"==2) | (toInteger(\"2\")==2) | +----------+---------------------+ | false | true | +----------+---------------------+","title":"=="},{"location":"3.ngql-guide/5.operators/1.comparison/#_4","text":"nebula> RETURN 3 > 2; +-------+ | (3>2) | +-------+ | true | +-------+ nebula> WITH 4 AS one, 3 AS two \\ RETURN one > two AS result; +--------+ | result | +--------+ | true | +--------+","title":"&gt;"},{"location":"3.ngql-guide/5.operators/1.comparison/#_5","text":"nebula> RETURN 2 >= \"2\", 2 >= 2; +----------+--------+ | (2>=\"2\") | (2>=2) | +----------+--------+ | __NULL__ | true | +----------+--------+","title":"&gt;="},{"location":"3.ngql-guide/5.operators/1.comparison/#_6","text":"nebula> YIELD 2.0 < 1.9; +---------+ | (2<1.9) | +---------+ | false | +---------+","title":"&lt;"},{"location":"3.ngql-guide/5.operators/1.comparison/#_7","text":"nebula> YIELD 0.11 <= 0.11; +--------------+ | (0.11<=0.11) | +--------------+ | true | +--------------+","title":"&lt;="},{"location":"3.ngql-guide/5.operators/1.comparison/#_8","text":"nebula> YIELD 1 != '1'; +--------+ | (1!=1) | +--------+ | true | +--------+","title":"!="},{"location":"3.ngql-guide/5.operators/1.comparison/#is_not_null","text":"nebula> RETURN null IS NULL AS value1, null == null AS value2, null != null AS value3; +--------+----------+----------+ | value1 | value2 | value3 | +--------+----------+----------+ | true | __NULL__ | __NULL__ | +--------+----------+----------+ nebula> RETURN length(NULL), size(NULL), count(NULL), NULL IS NULL, NULL IS NOT NULL, sin(NULL), NULL + NULL, [1, NULL] IS NULL; +--------------+------------+-------------+--------------+------------------+-----------+-------------+------------------+ | length(NULL) | size(NULL) | COUNT(NULL) | NULL IS NULL | NULL IS NOT NULL | sin(NULL) | (NULL+NULL) | [1,NULL] IS NULL | +--------------+------------+-------------+--------------+------------------+-----------+-------------+------------------+ | BAD_TYPE | __NULL__ | 0 | true | false | BAD_TYPE | __NULL__ | false | +--------------+------------+-------------+--------------+------------------+-----------+-------------+------------------+ nebula> WITH {name: null} AS map \\ RETURN map.name IS NOT NULL; +----------------------+ | map.name IS NOT NULL | +----------------------+ | false | +----------------------+ nebula> WITH {name: 'Mats', name2: 'Pontus'} AS map1, \\ {name: null} AS map2, {notName: 0, notName2: null } AS map3 \\ RETURN map1.name IS NULL, map2.name IS NOT NULL, map3.name IS NULL; +-------------------+-----------------------+-------------------+ | map1.name IS NULL | map2.name IS NOT NULL | map3.name IS NULL | +-------------------+-----------------------+-------------------+ | false | false | true | +-------------------+-----------------------+-------------------+ nebula> MATCH (n:player) \\ RETURN n.age IS NULL, n.name IS NOT NULL, n.empty IS NULL; +---------------+--------------------+-----------------+ | n.age IS NULL | n.name IS NOT NULL | n.empty IS NULL | +---------------+--------------------+-----------------+ | false | true | true | +---------------+--------------------+-----------------+ | false | true | true | +---------------+--------------------+-----------------+ | false | true | true | +---------------+--------------------+-----------------+ ...","title":"IS [NOT] NULL"},{"location":"3.ngql-guide/5.operators/2.boolean/","text":"\u5e03\u5c14\u7b26 \u00b6 Nebula Graph\u652f\u6301\u7684\u5e03\u5c14\u7b26\u5982\u4e0b\u3002 \u7b26\u53f7 \u8bf4\u660e AND \u903b\u8f91\u4e0e OR \u903b\u8f91\u6216 NOT \u903b\u8f91\u975e XOR \u903b\u8f91\u5f02\u6216 \u5bf9\u4e8e\u4ee5\u4e0a\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\uff0c\u8bf7\u53c2\u89c1 \u8fd0\u7b97\u4f18\u5148\u7ea7 \u3002 \u5bf9\u4e8e\u5e26\u6709 NULL \u7684\u903b\u8f91\u8fd0\u7b97\uff0c\u8bf7\u53c2\u89c1 NULL \u3002 \u5386\u53f2\u517c\u5bb9\u95ee\u9898 \u00b6 \u5728Nebula Graph 2.0\u4e2d\uff0c\u975e0\u6570\u5b57\u4e0d\u80fd\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u3002","title":"Boolean"},{"location":"3.ngql-guide/5.operators/2.boolean/#_1","text":"Nebula Graph\u652f\u6301\u7684\u5e03\u5c14\u7b26\u5982\u4e0b\u3002 \u7b26\u53f7 \u8bf4\u660e AND \u903b\u8f91\u4e0e OR \u903b\u8f91\u6216 NOT \u903b\u8f91\u975e XOR \u903b\u8f91\u5f02\u6216 \u5bf9\u4e8e\u4ee5\u4e0a\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\uff0c\u8bf7\u53c2\u89c1 \u8fd0\u7b97\u4f18\u5148\u7ea7 \u3002 \u5bf9\u4e8e\u5e26\u6709 NULL \u7684\u903b\u8f91\u8fd0\u7b97\uff0c\u8bf7\u53c2\u89c1 NULL \u3002","title":"\u5e03\u5c14\u7b26"},{"location":"3.ngql-guide/5.operators/2.boolean/#_2","text":"\u5728Nebula Graph 2.0\u4e2d\uff0c\u975e0\u6570\u5b57\u4e0d\u80fd\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u3002","title":"\u5386\u53f2\u517c\u5bb9\u95ee\u9898"},{"location":"3.ngql-guide/5.operators/4.pipe/","text":"\u7ba1\u9053\u7b26 \u00b6 nGQL\u652f\u6301\u4f7f\u7528\u7ba1\u9053\u7b26\uff08|\uff09\u5c06\u591a\u4e2a\u67e5\u8be2\u7ec4\u5408\u8d77\u6765\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u7ba1\u9053\u7b26\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u8bed\u6cd5 \u00b6 nGQL\u548cSQL\u4e4b\u95f4\u7684\u4e00\u4e2a\u4e3b\u8981\u533a\u522b\u662f\u5b50\u67e5\u8be2\u7684\u7ec4\u6210\u65b9\u5f0f\u3002 \u5728SQL\u4e2d\uff0c\u5b50\u67e5\u8be2\u662f\u5d4c\u5957\u5728\u67e5\u8be2\u8bed\u53e5\u4e2d\u7684\u3002 \u5728nGQL\u4e2d\uff0c\u5b50\u67e5\u8be2\u662f\u901a\u8fc7\u7c7b\u4f3cshell\u4e2d\u7684\u7ba1\u9053\u7b26\uff08 | \uff09\u5b9e\u73b0\u7684\u3002 \u793a\u4f8b \u00b6 nebula> GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS dstid, $$.player.name AS Name | \\ GO FROM $-.dstid OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ \u60a8\u53ef\u4ee5\u4f7f\u7528 YIELD \u663e\u5f0f\u58f0\u660e\u9700\u8981\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u5982\u679c\u4e0d\u4f7f\u7528 YIELD \uff0c\u9ed8\u8ba4\u8fd4\u56de\u76ee\u6807\u70b9ID\u3002 \u60a8\u5fc5\u987b\u5728 YIELD \u5b50\u53e5\u4e2d\u4e3a\u9700\u8981\u7684\u8fd4\u56de\u7ed3\u679c\u8bbe\u7f6e\u522b\u540d\uff0c\u624d\u80fd\u5728\u7ba1\u9053\u7b26\u53f3\u4fa7\u4f7f\u7528\u5f15\u7528\u7b26 $- \uff0c\u4f8b\u5982\u793a\u4f8b\u4e2d\u7684 $-.dstid \u3002","title":"Pipe"},{"location":"3.ngql-guide/5.operators/4.pipe/#_1","text":"nGQL\u652f\u6301\u4f7f\u7528\u7ba1\u9053\u7b26\uff08|\uff09\u5c06\u591a\u4e2a\u67e5\u8be2\u7ec4\u5408\u8d77\u6765\u3002","title":"\u7ba1\u9053\u7b26"},{"location":"3.ngql-guide/5.operators/4.pipe/#opencypher","text":"\u7ba1\u9053\u7b26\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/5.operators/4.pipe/#_2","text":"nGQL\u548cSQL\u4e4b\u95f4\u7684\u4e00\u4e2a\u4e3b\u8981\u533a\u522b\u662f\u5b50\u67e5\u8be2\u7684\u7ec4\u6210\u65b9\u5f0f\u3002 \u5728SQL\u4e2d\uff0c\u5b50\u67e5\u8be2\u662f\u5d4c\u5957\u5728\u67e5\u8be2\u8bed\u53e5\u4e2d\u7684\u3002 \u5728nGQL\u4e2d\uff0c\u5b50\u67e5\u8be2\u662f\u901a\u8fc7\u7c7b\u4f3cshell\u4e2d\u7684\u7ba1\u9053\u7b26\uff08 | \uff09\u5b9e\u73b0\u7684\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/5.operators/4.pipe/#_3","text":"nebula> GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS dstid, $$.player.name AS Name | \\ GO FROM $-.dstid OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ \u60a8\u53ef\u4ee5\u4f7f\u7528 YIELD \u663e\u5f0f\u58f0\u660e\u9700\u8981\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u5982\u679c\u4e0d\u4f7f\u7528 YIELD \uff0c\u9ed8\u8ba4\u8fd4\u56de\u76ee\u6807\u70b9ID\u3002 \u60a8\u5fc5\u987b\u5728 YIELD \u5b50\u53e5\u4e2d\u4e3a\u9700\u8981\u7684\u8fd4\u56de\u7ed3\u679c\u8bbe\u7f6e\u522b\u540d\uff0c\u624d\u80fd\u5728\u7ba1\u9053\u7b26\u53f3\u4fa7\u4f7f\u7528\u5f15\u7528\u7b26 $- \uff0c\u4f8b\u5982\u793a\u4f8b\u4e2d\u7684 $-.dstid \u3002","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/5.property-reference/","text":"\u5f15\u7528\u7b26 \u00b6 nGQL\u63d0\u4f9b\u5f15\u7528\u7b26\u6765\u8868\u793a WHERE \u548c YIELD \u5b50\u53e5\u4e2d\u7684\u5c5e\u6027\uff0c\u6216\u8005\u590d\u5408\u67e5\u8be2\u4e2d\u7ba1\u9053\u7b26\u4e4b\u524d\u7684\u8bed\u53e5\u8f93\u51fa\u7ed3\u679c\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u5f15\u7528\u7b26\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u5f15\u7528\u7b26\u5217\u8868 \u00b6 \u5f15\u7528\u7b26 \u8bf4\u660e $^ \u5f15\u7528\u8d77\u59cb\u70b9\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1 \u5f15\u7528\u5c5e\u6027 \u3002 $$ \u5f15\u7528\u76ee\u7684\u70b9\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1 \u5f15\u7528\u5c5e\u6027 \u3002 $- \u5f15\u7528\u590d\u5408\u67e5\u8be2\u4e2d\u7ba1\u9053\u7b26\u4e4b\u524d\u7684\u8bed\u53e5\u8f93\u51fa\u7ed3\u679c\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1 \u7ba1\u9053\u7b26 \u3002 \u793a\u4f8b \u00b6 # \u8fd4\u56de\u8d77\u59cb\u70b9\u548c\u76ee\u7684\u70b9\u7684\u5e74\u9f84\u3002 nebula> GO FROM \"player100\" OVER follow YIELD $^.player.name AS SrcAge, $$.player.age AS DestAge; +--------+---------+ | SrcAge | DestAge | +--------+---------+ | 42 | 36 | +--------+---------+ | 42 | 41 | +--------+---------+ # \u8fd4\u56deplayer100\u8ffd\u968f\u7684player\u7684\u540d\u79f0\u548c\u56e2\u961f\u3002 nebula> GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS id | \\ GO FROM $-.id OVER serve \\ YIELD $^.player.name AS Player, $$.team.name AS Team; +-----------------+-----------+ | Player | Team | +-----------------+-----------+ | \"Tony Parker\" | \"Spurs\" | +-----------------+-----------+ | \"Tony Parker\" | \"Hornets\" | +-----------------+-----------+ | \"Manu Ginobili\" | \"Spurs\" | +-----------------+-----------+","title":"Property reference"},{"location":"3.ngql-guide/5.operators/5.property-reference/#_1","text":"nGQL\u63d0\u4f9b\u5f15\u7528\u7b26\u6765\u8868\u793a WHERE \u548c YIELD \u5b50\u53e5\u4e2d\u7684\u5c5e\u6027\uff0c\u6216\u8005\u590d\u5408\u67e5\u8be2\u4e2d\u7ba1\u9053\u7b26\u4e4b\u524d\u7684\u8bed\u53e5\u8f93\u51fa\u7ed3\u679c\u3002","title":"\u5f15\u7528\u7b26"},{"location":"3.ngql-guide/5.operators/5.property-reference/#opencypher","text":"\u5f15\u7528\u7b26\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/5.operators/5.property-reference/#_2","text":"\u5f15\u7528\u7b26 \u8bf4\u660e $^ \u5f15\u7528\u8d77\u59cb\u70b9\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1 \u5f15\u7528\u5c5e\u6027 \u3002 $$ \u5f15\u7528\u76ee\u7684\u70b9\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1 \u5f15\u7528\u5c5e\u6027 \u3002 $- \u5f15\u7528\u590d\u5408\u67e5\u8be2\u4e2d\u7ba1\u9053\u7b26\u4e4b\u524d\u7684\u8bed\u53e5\u8f93\u51fa\u7ed3\u679c\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u89c1 \u7ba1\u9053\u7b26 \u3002","title":"\u5f15\u7528\u7b26\u5217\u8868"},{"location":"3.ngql-guide/5.operators/5.property-reference/#_3","text":"# \u8fd4\u56de\u8d77\u59cb\u70b9\u548c\u76ee\u7684\u70b9\u7684\u5e74\u9f84\u3002 nebula> GO FROM \"player100\" OVER follow YIELD $^.player.name AS SrcAge, $$.player.age AS DestAge; +--------+---------+ | SrcAge | DestAge | +--------+---------+ | 42 | 36 | +--------+---------+ | 42 | 41 | +--------+---------+ # \u8fd4\u56deplayer100\u8ffd\u968f\u7684player\u7684\u540d\u79f0\u548c\u56e2\u961f\u3002 nebula> GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS id | \\ GO FROM $-.id OVER serve \\ YIELD $^.player.name AS Player, $$.team.name AS Team; +-----------------+-----------+ | Player | Team | +-----------------+-----------+ | \"Tony Parker\" | \"Spurs\" | +-----------------+-----------+ | \"Tony Parker\" | \"Hornets\" | +-----------------+-----------+ | \"Manu Ginobili\" | \"Spurs\" | +-----------------+-----------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/6.set/","text":"\u96c6\u5408\u8fd0\u7b97\u7b26 \u00b6 \u5408\u5e76\u591a\u4e2a\u8bf7\u6c42\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u96c6\u5408\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec UNION \u3001 UNION ALL \u3001 INTERSECT \u548c MINUS \u3002 \u6240\u6709\u96c6\u5408\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u76f8\u540c\uff0c\u5982\u679c\u4e00\u4e2anGQL\u8bed\u53e5\u4e2d\u6709\u591a\u4e2a\u96c6\u5408\u8fd0\u7b97\u7b26\uff0cNebula Graph\u4f1a\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u8ba1\u7b97\uff0c\u9664\u975e\u7528\u62ec\u53f7\u6307\u5b9a\u987a\u5e8f\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u96c6\u5408\u8fd0\u7b97\u7b26\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 UNION\u3001UNION DISTINCT\u3001UNION ALL \u00b6 <left> UNION [DISTINCT | ALL] <right> [ UNION [DISTINCT | ALL] <right> ...] \u8fd0\u7b97\u7b26 UNION DISTINCT \uff08\u6216\u4f7f\u7528\u7f29\u5199 UNION \uff09\u8fd4\u56de\u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u5e76\u96c6\uff0c\u4e0d\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\u3002 \u8fd0\u7b97\u7b26 UNION ALL \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u5e76\u96c6\uff0c\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\u3002 left \u548c right \u5fc5\u987b\u6709\u76f8\u540c\u6570\u91cf\u7684\u5217\u548c\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u9700\u8981\u8f6c\u6362\u6570\u636e\u7c7b\u578b\uff0c\u8bf7\u53c2\u89c1 \u7c7b\u578b\u8f6c\u6362 \u3002 \u793a\u4f8b \u00b6 # \u8fd4\u56de\u4e24\u4e2a\u67e5\u8be2\u7ed3\u679c\u7684\u5e76\u96c6\uff0c\u4e0d\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\u3002 nebula> GO FROM \"player102\" OVER follow \\ UNION \\ GO FROM \"player100\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ # \u8fd4\u56de\u4e24\u4e2a\u67e5\u8be2\u7ed3\u679c\u7684\u5e76\u96c6\uff0c\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\u3002 nebula> GO FROM \"player102\" OVER follow \\ UNION ALL \\ GO FROM \"player100\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ # UNION\u4e5f\u53ef\u4ee5\u548cYIELD\u8bed\u53e5\u4e00\u8d77\u4f7f\u7528\uff0c\u53bb\u91cd\u65f6\u4f1a\u68c0\u67e5\u6bcf\u4e00\u884c\u7684\u6240\u6709\u5217\uff0c\u6bcf\u5217\u90fd\u76f8\u540c\u65f6\u624d\u4f1a\u53bb\u91cd\u3002 nebula> GO FROM \"player102\" OVER follow \\ YIELD follow._dst AS id, follow.degree AS Degree, $$.player.age AS Age \\ UNION /* DISTINCT */ \\ GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS id, follow.degree AS Degree, $$.player.age AS Age; +-------------+--------+-----+ | id | Degree | Age | +-------------+--------+-----+ | \"player101\" | 75 | 36 | +-------------+--------+-----+ | \"player101\" | 96 | 36 | +-------------+--------+-----+ | \"player102\" | 90 | 33 | +-------------+--------+-----+ INTERSECT \u00b6 <left> INTERSECT <right> \u8fd0\u7b97\u7b26 INTERSECT \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u4ea4\u96c6\u3002 left \u548c right \u5fc5\u987b\u6709\u76f8\u540c\u6570\u91cf\u7684\u5217\u548c\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u9700\u8981\u8f6c\u6362\u6570\u636e\u7c7b\u578b\uff0c\u8bf7\u53c2\u89c1 \u7c7b\u578b\u8f6c\u6362 \u3002 \u793a\u4f8b \u00b6 nebula> GO FROM \"player102\" OVER follow \\ YIELD follow._dst AS id, follow.degree AS Degree, $$.player.age AS Age \\ INTERSECT \\ GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS id, follow.degree AS Degree, $$.player.age AS Age; Empty set (time spent 2990/3511 us) MINUS \u00b6 <left> MINUS <right> \u8fd0\u7b97\u7b26 MINUS \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u5dee\u5f02\uff0c\u5373 A-B \u3002\u8bf7\u6ce8\u610f left \u548c right \u7684\u987a\u5e8f\uff0c A-B \u8868\u793a\u5728\u96c6\u5408A\u4e2d\uff0c\u4f46\u662f\u4e0d\u5728\u96c6\u5408B\u4e2d\u7684\u5143\u7d20\u3002 \u793a\u4f8b \u00b6 nebula> GO FROM \"player100\" OVER follow \\ MINUS \\ GO FROM \"player102\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player102\" | +-------------+ nebula> GO FROM \"player102\" OVER follow \\ MINUS \\ GO FROM \"player100\" OVER follow; Empty set (time spent 2243/3259 us) \u96c6\u5408\u8fd0\u7b97\u7b26\u548c\u7ba1\u9053\u7b26\u7684\u4f18\u5148\u7ea7 \u00b6 \u5f53\u67e5\u8be2\u5305\u542b\u96c6\u5408\u8fd0\u7b97\u7b26\u548c\u7ba1\u9053\u7b26\uff08|\uff09\u65f6\uff0c \u7ba1\u9053\u7b26 \u7684\u4f18\u5148\u7ea7\u9ad8\u3002\u4f8b\u5982 GO FROM 1 UNION GO FROM 2 | GO FROM 3 \u76f8\u5f53\u4e8e GO FROM 1 UNION (GO FROM 2 | GO FROM 3) \u3002 \u793a\u4f8b \u00b6 nebula> GO FROM \"player102\" OVER follow \\ YIELD follow._dst AS play_dst \\ UNION \\ GO FROM \"team200\" OVER serve REVERSELY \\ YIELD serve._dst AS play_dst \\ | GO FROM $-.play_dst OVER follow YIELD follow._dst AS play_dst; +-------------+ | play_dst | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ \u8be5\u67e5\u8be2\u4f1a\u5148\u6267\u884c\u7ea2\u6846\u5185\u7684\u8bed\u53e5\uff0c\u7136\u540e\u6267\u884c\u7eff\u6846\u7684 UNION \u64cd\u4f5c\u3002 \u5706\u62ec\u53f7\u53ef\u4ee5\u4fee\u6539\u6267\u884c\u7684\u4f18\u5148\u7ea7\uff0c\u4f8b\u5982\uff1a nebula> (GO FROM \"player102\" OVER follow \\ YIELD follow._dst AS play_dst \\ UNION \\ GO FROM \"team200\" OVER serve REVERSELY \\ YIELD serve._dst AS play_dst) \\ | GO FROM $-.play_dst OVER follow YIELD follow._dst AS play_dst; \u8be5\u67e5\u8be2\u4e2d\uff0c\u5706\u62ec\u53f7\u5305\u88f9\u7684\u90e8\u5206\u5148\u6267\u884c\uff0c\u5373\u5148\u6267\u884c UNION \u64cd\u4f5c\uff0c\u518d\u5c06\u7ed3\u679c\u7ed3\u5408\u7ba1\u9053\u7b26\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002","title":"Set"},{"location":"3.ngql-guide/5.operators/6.set/#_1","text":"\u5408\u5e76\u591a\u4e2a\u8bf7\u6c42\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u96c6\u5408\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec UNION \u3001 UNION ALL \u3001 INTERSECT \u548c MINUS \u3002 \u6240\u6709\u96c6\u5408\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u76f8\u540c\uff0c\u5982\u679c\u4e00\u4e2anGQL\u8bed\u53e5\u4e2d\u6709\u591a\u4e2a\u96c6\u5408\u8fd0\u7b97\u7b26\uff0cNebula Graph\u4f1a\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u8ba1\u7b97\uff0c\u9664\u975e\u7528\u62ec\u53f7\u6307\u5b9a\u987a\u5e8f\u3002","title":"\u96c6\u5408\u8fd0\u7b97\u7b26"},{"location":"3.ngql-guide/5.operators/6.set/#opencypher","text":"\u96c6\u5408\u8fd0\u7b97\u7b26\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/5.operators/6.set/#unionunion_distinctunion_all","text":"<left> UNION [DISTINCT | ALL] <right> [ UNION [DISTINCT | ALL] <right> ...] \u8fd0\u7b97\u7b26 UNION DISTINCT \uff08\u6216\u4f7f\u7528\u7f29\u5199 UNION \uff09\u8fd4\u56de\u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u5e76\u96c6\uff0c\u4e0d\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\u3002 \u8fd0\u7b97\u7b26 UNION ALL \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u5e76\u96c6\uff0c\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\u3002 left \u548c right \u5fc5\u987b\u6709\u76f8\u540c\u6570\u91cf\u7684\u5217\u548c\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u9700\u8981\u8f6c\u6362\u6570\u636e\u7c7b\u578b\uff0c\u8bf7\u53c2\u89c1 \u7c7b\u578b\u8f6c\u6362 \u3002","title":"UNION\u3001UNION DISTINCT\u3001UNION ALL"},{"location":"3.ngql-guide/5.operators/6.set/#_2","text":"# \u8fd4\u56de\u4e24\u4e2a\u67e5\u8be2\u7ed3\u679c\u7684\u5e76\u96c6\uff0c\u4e0d\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\u3002 nebula> GO FROM \"player102\" OVER follow \\ UNION \\ GO FROM \"player100\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ # \u8fd4\u56de\u4e24\u4e2a\u67e5\u8be2\u7ed3\u679c\u7684\u5e76\u96c6\uff0c\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\u3002 nebula> GO FROM \"player102\" OVER follow \\ UNION ALL \\ GO FROM \"player100\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ # UNION\u4e5f\u53ef\u4ee5\u548cYIELD\u8bed\u53e5\u4e00\u8d77\u4f7f\u7528\uff0c\u53bb\u91cd\u65f6\u4f1a\u68c0\u67e5\u6bcf\u4e00\u884c\u7684\u6240\u6709\u5217\uff0c\u6bcf\u5217\u90fd\u76f8\u540c\u65f6\u624d\u4f1a\u53bb\u91cd\u3002 nebula> GO FROM \"player102\" OVER follow \\ YIELD follow._dst AS id, follow.degree AS Degree, $$.player.age AS Age \\ UNION /* DISTINCT */ \\ GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS id, follow.degree AS Degree, $$.player.age AS Age; +-------------+--------+-----+ | id | Degree | Age | +-------------+--------+-----+ | \"player101\" | 75 | 36 | +-------------+--------+-----+ | \"player101\" | 96 | 36 | +-------------+--------+-----+ | \"player102\" | 90 | 33 | +-------------+--------+-----+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/6.set/#intersect","text":"<left> INTERSECT <right> \u8fd0\u7b97\u7b26 INTERSECT \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u4ea4\u96c6\u3002 left \u548c right \u5fc5\u987b\u6709\u76f8\u540c\u6570\u91cf\u7684\u5217\u548c\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u9700\u8981\u8f6c\u6362\u6570\u636e\u7c7b\u578b\uff0c\u8bf7\u53c2\u89c1 \u7c7b\u578b\u8f6c\u6362 \u3002","title":"INTERSECT"},{"location":"3.ngql-guide/5.operators/6.set/#_3","text":"nebula> GO FROM \"player102\" OVER follow \\ YIELD follow._dst AS id, follow.degree AS Degree, $$.player.age AS Age \\ INTERSECT \\ GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS id, follow.degree AS Degree, $$.player.age AS Age; Empty set (time spent 2990/3511 us)","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/6.set/#minus","text":"<left> MINUS <right> \u8fd0\u7b97\u7b26 MINUS \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408A\u548cB\u7684\u5dee\u5f02\uff0c\u5373 A-B \u3002\u8bf7\u6ce8\u610f left \u548c right \u7684\u987a\u5e8f\uff0c A-B \u8868\u793a\u5728\u96c6\u5408A\u4e2d\uff0c\u4f46\u662f\u4e0d\u5728\u96c6\u5408B\u4e2d\u7684\u5143\u7d20\u3002","title":"MINUS"},{"location":"3.ngql-guide/5.operators/6.set/#_4","text":"nebula> GO FROM \"player100\" OVER follow \\ MINUS \\ GO FROM \"player102\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player102\" | +-------------+ nebula> GO FROM \"player102\" OVER follow \\ MINUS \\ GO FROM \"player100\" OVER follow; Empty set (time spent 2243/3259 us)","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/6.set/#_5","text":"\u5f53\u67e5\u8be2\u5305\u542b\u96c6\u5408\u8fd0\u7b97\u7b26\u548c\u7ba1\u9053\u7b26\uff08|\uff09\u65f6\uff0c \u7ba1\u9053\u7b26 \u7684\u4f18\u5148\u7ea7\u9ad8\u3002\u4f8b\u5982 GO FROM 1 UNION GO FROM 2 | GO FROM 3 \u76f8\u5f53\u4e8e GO FROM 1 UNION (GO FROM 2 | GO FROM 3) \u3002","title":"\u96c6\u5408\u8fd0\u7b97\u7b26\u548c\u7ba1\u9053\u7b26\u7684\u4f18\u5148\u7ea7"},{"location":"3.ngql-guide/5.operators/6.set/#_6","text":"nebula> GO FROM \"player102\" OVER follow \\ YIELD follow._dst AS play_dst \\ UNION \\ GO FROM \"team200\" OVER serve REVERSELY \\ YIELD serve._dst AS play_dst \\ | GO FROM $-.play_dst OVER follow YIELD follow._dst AS play_dst; +-------------+ | play_dst | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ \u8be5\u67e5\u8be2\u4f1a\u5148\u6267\u884c\u7ea2\u6846\u5185\u7684\u8bed\u53e5\uff0c\u7136\u540e\u6267\u884c\u7eff\u6846\u7684 UNION \u64cd\u4f5c\u3002 \u5706\u62ec\u53f7\u53ef\u4ee5\u4fee\u6539\u6267\u884c\u7684\u4f18\u5148\u7ea7\uff0c\u4f8b\u5982\uff1a nebula> (GO FROM \"player102\" OVER follow \\ YIELD follow._dst AS play_dst \\ UNION \\ GO FROM \"team200\" OVER serve REVERSELY \\ YIELD serve._dst AS play_dst) \\ | GO FROM $-.play_dst OVER follow YIELD follow._dst AS play_dst; \u8be5\u67e5\u8be2\u4e2d\uff0c\u5706\u62ec\u53f7\u5305\u88f9\u7684\u90e8\u5206\u5148\u6267\u884c\uff0c\u5373\u5148\u6267\u884c UNION \u64cd\u4f5c\uff0c\u518d\u5c06\u7ed3\u679c\u7ed3\u5408\u7ba1\u9053\u7b26\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/7.string/","text":"\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 \u00b6 Nebula Graph\u652f\u6301\u4f7f\u7528\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26\u8fdb\u884c\u8fde\u63a5\u3001\u641c\u7d22\u3001\u5339\u914d\u8fd0\u7b97\u3002\u652f\u6301\u7684\u8fd0\u7b97\u7b26\u5982\u4e0b\u3002 \u540d\u79f0 \u8bf4\u660e + \u8fde\u63a5\u5b57\u7b26\u4e32\u3002 CONTAINS \u5728\u5b57\u7b26\u4e32\u4e2d\u6267\u884c\u641c\u7d22\u3002 (NOT) IN \u5b57\u7b26\u4e32\u662f\u5426\u5339\u914d\u67d0\u4e2a\u503c\u3002 (NOT) STARTS WITH \u5728\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u6267\u884c\u5339\u914d\u3002 (NOT) ENDS WITH \u5728\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u6267\u884c\u5339\u914d\u3002 \u6b63\u5219\u8868\u8fbe\u5f0f \u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5b57\u7b26\u4e32\u3002 \u8bf4\u660e \uff1a\u6240\u6709\u641c\u7d22\u6216\u5339\u914d\u90fd\u533a\u5206\u5927\u5c0f\u5199\u3002 \u793a\u4f8b \u00b6 + \u00b6 nebula> RETURN 'a' + 'b'; +-------+ | (a+b) | +-------+ | \"ab\" | +-------+ nebula> UNWIND 'a' AS a UNWIND 'b' AS b RETURN a + b; +-------+ | (a+b) | +-------+ | \"ab\" | +-------+ CONTAINS \u00b6 CONTAINS \u8981\u6c42\u5f85\u8fd0\u7b97\u7684\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u3002 nebula> MATCH (s:player)-[e:serve]->(t:team) WHERE id(s) == \"player101\" \\ AND t.name CONTAINS \"ets\" RETURN s.name, e.start_year, e.end_year, t.name; +---------------+--------------+------------+-----------+ | s.name | e.start_year | e.end_year | t.name | +---------------+--------------+------------+-----------+ | \"Tony Parker\" | 2018 | 2019 | \"Hornets\" | +---------------+--------------+------------+-----------+ nebula> GO FROM \"player101\" OVER serve WHERE (STRING)serve.start_year CONTAINS \"19\" AND \\ $^.player.name CONTAINS \"ny\" \\ YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name; +----------------+------------------+----------------+--------------+ | $^.player.name | serve.start_year | serve.end_year | $$.team.name | +----------------+------------------+----------------+--------------+ | \"Tony Parker\" | 1999 | 2018 | \"Spurs\" | +----------------+------------------+----------------+--------------+ nebula> GO FROM \"player101\" OVER serve WHERE !($$.team.name CONTAINS \"ets\") \\ YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name; +----------------+------------------+----------------+--------------+ | $^.player.name | serve.start_year | serve.end_year | $$.team.name | +----------------+------------------+----------------+--------------+ | \"Tony Parker\" | 1999 | 2018 | \"Spurs\" | +----------------+------------------+----------------+--------------+ (NOT) IN \u00b6 nebula> RETURN 1 IN [1,2,3], \"Yao\" NOT IN [\"Yi\", \"Tim\", \"Kobe\"], NULL in [\"Yi\", \"Tim\", \"Kobe\"] +----------------+------------------------------------+-------------------------------+ | (1 IN [1,2,3]) | (\"Yao\" NOT IN [\"Yi\",\"Tim\",\"Kobe\"]) | (NULL IN [\"Yi\",\"Tim\",\"Kobe\"]) | +----------------+------------------------------------+-------------------------------+ | true | true | false | +----------------+------------------------------------+-------------------------------+ (NOT) STARTS WITH \u00b6 nebula> RETURN 'apple' STARTS WITH 'app', 'apple' STARTS WITH 'a', 'apple' STARTS WITH toUpper('a') +-----------------------------+---------------------------+------------------------------------+ | (\"apple\" STARTS WITH \"app\") | (\"apple\" STARTS WITH \"a\") | (\"apple\" STARTS WITH toUpper(\"a\")) | +-----------------------------+---------------------------+------------------------------------+ | true | true | false | +-----------------------------+---------------------------+------------------------------------+ nebula> RETURN 'apple' STARTS WITH 'b','apple' NOT STARTS WITH 'app' +---------------------------+---------------------------------+ | (\"apple\" STARTS WITH \"b\") | (\"apple\" NOT STARTS WITH \"app\") | +---------------------------+---------------------------------+ | false | false | +---------------------------+---------------------------------+ (NOT) ENDS WITH \u00b6 nebula> RETURN 'apple' ENDS WITH 'app', 'apple' ENDS WITH 'e', 'apple' ENDS WITH 'E', 'apple' ENDS WITH 'b' +---------------------------+-------------------------+-------------------------+-------------------------+ | (\"apple\" ENDS WITH \"app\") | (\"apple\" ENDS WITH \"e\") | (\"apple\" ENDS WITH \"E\") | (\"apple\" ENDS WITH \"b\") | +---------------------------+-------------------------+-------------------------+-------------------------+ | false | true | false | false | +---------------------------+-------------------------+-------------------------+-------------------------+ \u6b63\u5219\u8868\u8fbe\u5f0f \u00b6 \u8bf4\u660e \uff1a\u5f53\u524d\u4ec5openCypher\u8bed\u53e5\uff08 MATCH \u3001 WITH \u7b49\uff09\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\uff0cnGQL\u6269\u5c55\u8bed\u53e5\uff08 FETCH \u3001 GO \u3001 LOOKUP \u7b49\uff09\u6682\u4e0d\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 Nebula Graph\u652f\u6301\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u8fc7\u6ee4\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u662f\u7ee7\u627f\u81ea std::regex \uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8bed\u6cd5 =~ '<regexp>' \u8fdb\u884c\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u914d\u3002\u4f8b\u5982\uff1a nebula> RETURN \"384748.39\" =~ \"\\\\d+(\\\\.\\\\d{2})?\"; +----------------------------+ | (384748.39=~\\d+(\\.\\d{2})?) | +----------------------------+ | true | +----------------------------+ nebula> MATCH (v:player) WHERE v.name =~ 'Tony.*' RETURN v.name; +---------------+ | v.name | +---------------+ | \"Tony Parker\" | +---------------+","title":"String"},{"location":"3.ngql-guide/5.operators/7.string/#_1","text":"Nebula Graph\u652f\u6301\u4f7f\u7528\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26\u8fdb\u884c\u8fde\u63a5\u3001\u641c\u7d22\u3001\u5339\u914d\u8fd0\u7b97\u3002\u652f\u6301\u7684\u8fd0\u7b97\u7b26\u5982\u4e0b\u3002 \u540d\u79f0 \u8bf4\u660e + \u8fde\u63a5\u5b57\u7b26\u4e32\u3002 CONTAINS \u5728\u5b57\u7b26\u4e32\u4e2d\u6267\u884c\u641c\u7d22\u3002 (NOT) IN \u5b57\u7b26\u4e32\u662f\u5426\u5339\u914d\u67d0\u4e2a\u503c\u3002 (NOT) STARTS WITH \u5728\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u6267\u884c\u5339\u914d\u3002 (NOT) ENDS WITH \u5728\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u6267\u884c\u5339\u914d\u3002 \u6b63\u5219\u8868\u8fbe\u5f0f \u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5b57\u7b26\u4e32\u3002 \u8bf4\u660e \uff1a\u6240\u6709\u641c\u7d22\u6216\u5339\u914d\u90fd\u533a\u5206\u5927\u5c0f\u5199\u3002","title":"\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26"},{"location":"3.ngql-guide/5.operators/7.string/#_2","text":"","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/7.string/#_3","text":"nebula> RETURN 'a' + 'b'; +-------+ | (a+b) | +-------+ | \"ab\" | +-------+ nebula> UNWIND 'a' AS a UNWIND 'b' AS b RETURN a + b; +-------+ | (a+b) | +-------+ | \"ab\" | +-------+","title":"+"},{"location":"3.ngql-guide/5.operators/7.string/#contains","text":"CONTAINS \u8981\u6c42\u5f85\u8fd0\u7b97\u7684\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u3002 nebula> MATCH (s:player)-[e:serve]->(t:team) WHERE id(s) == \"player101\" \\ AND t.name CONTAINS \"ets\" RETURN s.name, e.start_year, e.end_year, t.name; +---------------+--------------+------------+-----------+ | s.name | e.start_year | e.end_year | t.name | +---------------+--------------+------------+-----------+ | \"Tony Parker\" | 2018 | 2019 | \"Hornets\" | +---------------+--------------+------------+-----------+ nebula> GO FROM \"player101\" OVER serve WHERE (STRING)serve.start_year CONTAINS \"19\" AND \\ $^.player.name CONTAINS \"ny\" \\ YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name; +----------------+------------------+----------------+--------------+ | $^.player.name | serve.start_year | serve.end_year | $$.team.name | +----------------+------------------+----------------+--------------+ | \"Tony Parker\" | 1999 | 2018 | \"Spurs\" | +----------------+------------------+----------------+--------------+ nebula> GO FROM \"player101\" OVER serve WHERE !($$.team.name CONTAINS \"ets\") \\ YIELD $^.player.name, serve.start_year, serve.end_year, $$.team.name; +----------------+------------------+----------------+--------------+ | $^.player.name | serve.start_year | serve.end_year | $$.team.name | +----------------+------------------+----------------+--------------+ | \"Tony Parker\" | 1999 | 2018 | \"Spurs\" | +----------------+------------------+----------------+--------------+","title":"CONTAINS"},{"location":"3.ngql-guide/5.operators/7.string/#not_in","text":"nebula> RETURN 1 IN [1,2,3], \"Yao\" NOT IN [\"Yi\", \"Tim\", \"Kobe\"], NULL in [\"Yi\", \"Tim\", \"Kobe\"] +----------------+------------------------------------+-------------------------------+ | (1 IN [1,2,3]) | (\"Yao\" NOT IN [\"Yi\",\"Tim\",\"Kobe\"]) | (NULL IN [\"Yi\",\"Tim\",\"Kobe\"]) | +----------------+------------------------------------+-------------------------------+ | true | true | false | +----------------+------------------------------------+-------------------------------+","title":"(NOT) IN"},{"location":"3.ngql-guide/5.operators/7.string/#not_starts_with","text":"nebula> RETURN 'apple' STARTS WITH 'app', 'apple' STARTS WITH 'a', 'apple' STARTS WITH toUpper('a') +-----------------------------+---------------------------+------------------------------------+ | (\"apple\" STARTS WITH \"app\") | (\"apple\" STARTS WITH \"a\") | (\"apple\" STARTS WITH toUpper(\"a\")) | +-----------------------------+---------------------------+------------------------------------+ | true | true | false | +-----------------------------+---------------------------+------------------------------------+ nebula> RETURN 'apple' STARTS WITH 'b','apple' NOT STARTS WITH 'app' +---------------------------+---------------------------------+ | (\"apple\" STARTS WITH \"b\") | (\"apple\" NOT STARTS WITH \"app\") | +---------------------------+---------------------------------+ | false | false | +---------------------------+---------------------------------+","title":"(NOT) STARTS WITH"},{"location":"3.ngql-guide/5.operators/7.string/#not_ends_with","text":"nebula> RETURN 'apple' ENDS WITH 'app', 'apple' ENDS WITH 'e', 'apple' ENDS WITH 'E', 'apple' ENDS WITH 'b' +---------------------------+-------------------------+-------------------------+-------------------------+ | (\"apple\" ENDS WITH \"app\") | (\"apple\" ENDS WITH \"e\") | (\"apple\" ENDS WITH \"E\") | (\"apple\" ENDS WITH \"b\") | +---------------------------+-------------------------+-------------------------+-------------------------+ | false | true | false | false | +---------------------------+-------------------------+-------------------------+-------------------------+","title":"(NOT) ENDS WITH"},{"location":"3.ngql-guide/5.operators/7.string/#_4","text":"\u8bf4\u660e \uff1a\u5f53\u524d\u4ec5openCypher\u8bed\u53e5\uff08 MATCH \u3001 WITH \u7b49\uff09\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\uff0cnGQL\u6269\u5c55\u8bed\u53e5\uff08 FETCH \u3001 GO \u3001 LOOKUP \u7b49\uff09\u6682\u4e0d\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 Nebula Graph\u652f\u6301\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u8fc7\u6ee4\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u662f\u7ee7\u627f\u81ea std::regex \uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8bed\u6cd5 =~ '<regexp>' \u8fdb\u884c\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u914d\u3002\u4f8b\u5982\uff1a nebula> RETURN \"384748.39\" =~ \"\\\\d+(\\\\.\\\\d{2})?\"; +----------------------------+ | (384748.39=~\\d+(\\.\\d{2})?) | +----------------------------+ | true | +----------------------------+ nebula> MATCH (v:player) WHERE v.name =~ 'Tony.*' RETURN v.name; +---------------+ | v.name | +---------------+ | \"Tony Parker\" | +---------------+","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"3.ngql-guide/5.operators/8.list/","text":"\u5217\u8868\u8fd0\u7b97\u7b26 \u00b6 Nebula Graph\u652f\u6301\u4f7f\u7528\u5217\u8868\uff08List\uff09\u8fd0\u7b97\u7b26\u8fdb\u884c\u8fd0\u7b97\u3002\u652f\u6301\u7684\u8fd0\u7b97\u7b26\u5982\u4e0b\u3002 \u540d\u79f0 \u8bf4\u660e + \u8fde\u63a5\u5217\u8868\u3002 IN \u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u5217\u8868\u4e2d\u3002 [] \u4f7f\u7528\u4e0b\u6807\u64cd\u4f5c\u7b26\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u5143\u7d20\u3002 \u793a\u4f8b \u00b6 nebula> YIELD [1,2,3,4,5]+[6,7] AS myList; +-----------------------+ | myList | +-----------------------+ | [1, 2, 3, 4, 5, 6, 7] | +-----------------------+ nebula> RETURN size([NULL, 1, 2]); +------------------+ | size([NULL,1,2]) | +------------------+ | 3 | +------------------+ nebula> RETURN NULL IN [NULL, 1]; +--------------------+ | (NULL IN [NULL,1]) | +--------------------+ | true | +--------------------+ nebula> WITH [2, 3, 4, 5] AS numberlist \\ UNWIND numberlist AS number \\ WITH number \\ WHERE number IN [2, 3, 8] \\ RETURN number; +--------+ | number | +--------+ | 2 | +--------+ | 3 | +--------+ nebula> WITH ['Anne', 'John', 'Bill', 'Diane', 'Eve'] AS names RETURN names[1] AS result; +--------+ | result | +--------+ | \"John\" | +--------+","title":"List"},{"location":"3.ngql-guide/5.operators/8.list/#_1","text":"Nebula Graph\u652f\u6301\u4f7f\u7528\u5217\u8868\uff08List\uff09\u8fd0\u7b97\u7b26\u8fdb\u884c\u8fd0\u7b97\u3002\u652f\u6301\u7684\u8fd0\u7b97\u7b26\u5982\u4e0b\u3002 \u540d\u79f0 \u8bf4\u660e + \u8fde\u63a5\u5217\u8868\u3002 IN \u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u5217\u8868\u4e2d\u3002 [] \u4f7f\u7528\u4e0b\u6807\u64cd\u4f5c\u7b26\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u5143\u7d20\u3002","title":"\u5217\u8868\u8fd0\u7b97\u7b26"},{"location":"3.ngql-guide/5.operators/8.list/#_2","text":"nebula> YIELD [1,2,3,4,5]+[6,7] AS myList; +-----------------------+ | myList | +-----------------------+ | [1, 2, 3, 4, 5, 6, 7] | +-----------------------+ nebula> RETURN size([NULL, 1, 2]); +------------------+ | size([NULL,1,2]) | +------------------+ | 3 | +------------------+ nebula> RETURN NULL IN [NULL, 1]; +--------------------+ | (NULL IN [NULL,1]) | +--------------------+ | true | +--------------------+ nebula> WITH [2, 3, 4, 5] AS numberlist \\ UNWIND numberlist AS number \\ WITH number \\ WHERE number IN [2, 3, 8] \\ RETURN number; +--------+ | number | +--------+ | 2 | +--------+ | 3 | +--------+ nebula> WITH ['Anne', 'John', 'Bill', 'Diane', 'Eve'] AS names RETURN names[1] AS result; +--------+ | result | +--------+ | \"John\" | +--------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/9.precedence/","text":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 \u00b6 nGQL\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u6392\u5217\u5982\u4e0b\uff08\u540c\u4e00\u884c\u7684\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u76f8\u540c\uff09\uff1a - \uff08\u8d1f\u6570\uff09 ! \u3001 NOT * \u3001 / \u3001 % - \u3001 + == \u3001 >= \u3001 > \u3001 <= \u3001 < \u3001 <> \u3001 != AND OR \u3001 XOR = \uff08\u8d4b\u503c\uff09 \u5982\u679c\u8868\u8fbe\u5f0f\u4e2d\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8fd0\u7b97\u7b26\uff0c\u8fd0\u7b97\u662f\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\uff0c\u53ea\u6709\u8d4b\u503c\u64cd\u4f5c\u662f\u4f8b\u5916\uff08\u4ece\u53f3\u5230\u5de6\u8fd0\u7b97\uff09\u3002 \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u51b3\u5b9a\u8fd0\u7b97\u7684\u987a\u5e8f\uff0c\u8981\u663e\u5f0f\u4fee\u6539\u8fd0\u7b97\u987a\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5706\u62ec\u53f7\u3002 \u793a\u4f8b \u00b6 nebula> RETURN 2+3*5; +-----------+ | (2+(3*5)) | +-----------+ | 17 | +-----------+ nebula> RETURN (2+3)*5; +-----------+ | ((2+3)*5) | +-----------+ | 25 | +-----------+ openCypher\u517c\u5bb9\u6027 \u00b6 \u5728openCypher\u4e2d\uff0c\u6bd4\u8f83\u64cd\u4f5c\u53ef\u4ee5\u4efb\u610f\u8fde\u63a5\uff0c\u4f8b\u5982 x < y <= z \u7b49\u4ef7\u4e8e x < y AND y <= z \u3002 \u5728nGQL\u4e2d\uff0c x < y <= z \u7b49\u4ef7\u4e8e (x < y) <= z \uff0c (x < y) \u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u518d\u5c06\u5e03\u5c14\u503c\u548c z \u6bd4\u8f83\uff0c\u6700\u7ec8\u7ed3\u679c\u662f NULL \u3002","title":"Precedence"},{"location":"3.ngql-guide/5.operators/9.precedence/#_1","text":"nGQL\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u6392\u5217\u5982\u4e0b\uff08\u540c\u4e00\u884c\u7684\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u76f8\u540c\uff09\uff1a - \uff08\u8d1f\u6570\uff09 ! \u3001 NOT * \u3001 / \u3001 % - \u3001 + == \u3001 >= \u3001 > \u3001 <= \u3001 < \u3001 <> \u3001 != AND OR \u3001 XOR = \uff08\u8d4b\u503c\uff09 \u5982\u679c\u8868\u8fbe\u5f0f\u4e2d\u6709\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u8fd0\u7b97\u7b26\uff0c\u8fd0\u7b97\u662f\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\uff0c\u53ea\u6709\u8d4b\u503c\u64cd\u4f5c\u662f\u4f8b\u5916\uff08\u4ece\u53f3\u5230\u5de6\u8fd0\u7b97\uff09\u3002 \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u51b3\u5b9a\u8fd0\u7b97\u7684\u987a\u5e8f\uff0c\u8981\u663e\u5f0f\u4fee\u6539\u8fd0\u7b97\u987a\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5706\u62ec\u53f7\u3002","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7"},{"location":"3.ngql-guide/5.operators/9.precedence/#_2","text":"nebula> RETURN 2+3*5; +-----------+ | (2+(3*5)) | +-----------+ | 17 | +-----------+ nebula> RETURN (2+3)*5; +-----------+ | ((2+3)*5) | +-----------+ | 25 | +-----------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/5.operators/9.precedence/#opencypher","text":"\u5728openCypher\u4e2d\uff0c\u6bd4\u8f83\u64cd\u4f5c\u53ef\u4ee5\u4efb\u610f\u8fde\u63a5\uff0c\u4f8b\u5982 x < y <= z \u7b49\u4ef7\u4e8e x < y AND y <= z \u3002 \u5728nGQL\u4e2d\uff0c x < y <= z \u7b49\u4ef7\u4e8e (x < y) <= z \uff0c (x < y) \u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u518d\u5c06\u5e03\u5c14\u503c\u548c z \u6bd4\u8f83\uff0c\u6700\u7ec8\u7ed3\u679c\u662f NULL \u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/6.functions-and-expressions/1.math/","text":"\u5185\u7f6e\u6570\u5b66\u51fd\u6570 \u00b6 Nebula Graph\u652f\u6301\u4ee5\u4e0b\u5185\u7f6e\u6570\u5b66\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e double abs(double x) \u8fd4\u56dex\u7684\u7edd\u5bf9\u503c\u3002 double floor(double x) \u8fd4\u56de\u5c0f\u4e8e\u6216\u7b49\u4e8ex\u7684\u6700\u5927\u6574\u6570\u3002 double ceil(double x) \u8fd4\u56de\u5927\u4e8e\u6216\u7b49\u4e8ex\u7684\u6700\u5c0f\u6574\u6570\u3002 double round(double x) \u8fd4\u56de\u79bbx\u6700\u8fd1\u7684\u6574\u6570\u503c\uff0c\u5982\u679cx\u6070\u597d\u5728\u4e2d\u95f4\uff0c\u5219\u8fd4\u56de\u79bb0\u8f83\u8fdc\u7684\u6574\u6570\u3002 double sqrt(double x) \u8fd4\u56dex\u7684\u5e73\u65b9\u6839\u3002 double cbrt(double x) \u8fd4\u56dex\u7684\u7acb\u65b9\u6839\u3002 double hypot(double x, double y) \u8fd4\u56de\u76f4\u89d2\u4e09\u89d2\u5f62\uff08\u76f4\u89d2\u8fb9\u957f\u4e3ax\u548cy\uff09\u7684\u659c\u8fb9\u957f\u3002 double pow(double x, double y) \u8fd4\u56de$x^y$\u7684\u503c\u3002 double exp(double x) \u8fd4\u56de$e^x$\u7684\u503c\u3002 double exp2(double x) \u8fd4\u56de$2^x$\u7684\u503c\u3002 double log(double x) \u8fd4\u56de\u4ee5\u81ea\u7136\u6570e\u4e3a\u5e95x\u7684\u5bf9\u6570\u3002 double log2(double x) \u8fd4\u56de\u4ee52\u4e3a\u5e95x\u7684\u5bf9\u6570\u3002 double log10(double x) \u8fd4\u56de\u4ee510\u4e3a\u5e95x\u7684\u5bf9\u6570\u3002 double sin(double x) \u8fd4\u56dex\u7684\u6b63\u5f26\u503c\u3002 double asin(double x) \u8fd4\u56dex\u7684\u53cd\u6b63\u5f26\u503c\u3002 double cos(double x) \u8fd4\u56dex\u7684\u4f59\u5f26\u503c\u3002 double acos(double x) \u8fd4\u56dex\u7684\u53cd\u4f59\u5f26\u503c\u3002 double tan(double x) \u8fd4\u56dex\u7684\u6b63\u5207\u503c\u3002 double atan(double x) \u8fd4\u56dex\u7684\u53cd\u6b63\u5207\u503c\u3002 double rand() \u8fd4\u56de[0,1)\u5185\u7684\u968f\u673a\u6d6e\u70b9\u6570\u3002 int rand32(int min, int max) \u8fd4\u56de [min, max) \u5185\u7684\u4e00\u4e2a\u968f\u673a32\u4f4d\u6574\u6570\u3002 \u60a8\u53ef\u4ee5\u53ea\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u4f1a\u5224\u5b9a\u4e3a max \uff0c\u6b64\u65f6 min \u9ed8\u8ba4\u4e3a 0 \u3002 \u5982\u679c\u60a8\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u6b64\u65f6\u4f1a\u4ece\u5e26\u7b26\u53f7\u768432\u4f4dint\u8303\u56f4\u5185\u968f\u673a\u8fd4\u56de\u3002 int rand64(int min, int max) \u8fd4\u56de [min, max) \u5185\u7684\u4e00\u4e2a\u968f\u673a64\u4f4d\u6574\u6570\u3002 \u60a8\u53ef\u4ee5\u53ea\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u4f1a\u5224\u5b9a\u4e3a max \uff0c\u6b64\u65f6 min \u9ed8\u8ba4\u4e3a 0 \u3002 \u5982\u679c\u60a8\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u6b64\u65f6\u4f1a\u4ece\u5e26\u7b26\u53f7\u768464\u4f4dint\u8303\u56f4\u5185\u968f\u673a\u8fd4\u56de\u3002 collect() \u5c06\u6536\u96c6\u7684\u6240\u6709\u503c\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\u3002 avg() \u8fd4\u56de\u53c2\u6570\u7684\u5e73\u5747\u503c\u3002 count() \u8fd4\u56de\u53c2\u6570\u7684\u6570\u91cf\u3002 max() \u8fd4\u56de\u53c2\u6570\u7684\u6700\u5927\u503c\u3002 min() \u8fd4\u56de\u53c2\u6570\u7684\u6700\u5c0f\u503c\u3002 std() \u8fd4\u56de\u53c2\u6570\u7684\u603b\u4f53\u6807\u51c6\u5dee\u3002 sum() \u8fd4\u56de\u53c2\u6570\u7684\u548c\u3002 bit_and() \u9010\u4f4d\u505aAND\u64cd\u4f5c\u3002 bit_or() \u9010\u4f4d\u505aOR\u64cd\u4f5c\u3002 bit_xor() \u9010\u4f4d\u505aXOR\u64cd\u4f5c\u3002 int size() \u8fd4\u56de\u5217\u8868\u6216\u6620\u5c04\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 map(fun, iter) \u5c06\u7ed9\u5b9a\u51fd\u6570\u5e94\u7528\u4e8e\u7ed9\u5b9a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e00\u9879\u540e\uff0c\u8fd4\u56de\u4e00\u4e2a\u6620\u5c04\u5bf9\u8c61\u3002 int range(int start, int end, int step) \u8fd4\u56de [start,end] \u4e2d\u6307\u5b9a\u6b65\u957f\u7684\u503c\u7ec4\u6210\u7684\u5217\u8868\u3002\u6b65\u957f step \u9ed8\u8ba4\u4e3a1\u3002 int sign(double x) \u8fd4\u56dex\u7684\u6b63\u8d1f\u53f7\u3002 \u5982\u679cx\u4e3a 0 \uff0c\u5219\u8fd4\u56de 0 \u3002 \u5982\u679cx\u4e3a\u8d1f\u6570\uff0c\u5219\u8fd4\u56de -1 \u3002 \u5982\u679cx\u4e3a\u6b63\u6570\uff0c\u5219\u8fd4\u56de 1 \u3002 double e() \u8fd4\u56de\u81ea\u7136\u5bf9\u6570\u7684\u5e95e\uff082.718281828459045\uff09\u3002 double pi() \u8fd4\u56de\u6570\u5b66\u5e38\u6570\u03c0\uff083.141592653589793\uff09\u3002 double radians() \u5c06\u89d2\u5ea6\u8f6c\u6362\u4e3a\u5f27\u5ea6\u3002 radians(180) \u8fd4\u56de 3.141592653589793 \u3002 \u8bf4\u660e \uff1a\u5982\u679c\u53c2\u6570\u4e3a NULL \uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\u3002","title":"Math"},{"location":"3.ngql-guide/6.functions-and-expressions/1.math/#_1","text":"Nebula Graph\u652f\u6301\u4ee5\u4e0b\u5185\u7f6e\u6570\u5b66\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e double abs(double x) \u8fd4\u56dex\u7684\u7edd\u5bf9\u503c\u3002 double floor(double x) \u8fd4\u56de\u5c0f\u4e8e\u6216\u7b49\u4e8ex\u7684\u6700\u5927\u6574\u6570\u3002 double ceil(double x) \u8fd4\u56de\u5927\u4e8e\u6216\u7b49\u4e8ex\u7684\u6700\u5c0f\u6574\u6570\u3002 double round(double x) \u8fd4\u56de\u79bbx\u6700\u8fd1\u7684\u6574\u6570\u503c\uff0c\u5982\u679cx\u6070\u597d\u5728\u4e2d\u95f4\uff0c\u5219\u8fd4\u56de\u79bb0\u8f83\u8fdc\u7684\u6574\u6570\u3002 double sqrt(double x) \u8fd4\u56dex\u7684\u5e73\u65b9\u6839\u3002 double cbrt(double x) \u8fd4\u56dex\u7684\u7acb\u65b9\u6839\u3002 double hypot(double x, double y) \u8fd4\u56de\u76f4\u89d2\u4e09\u89d2\u5f62\uff08\u76f4\u89d2\u8fb9\u957f\u4e3ax\u548cy\uff09\u7684\u659c\u8fb9\u957f\u3002 double pow(double x, double y) \u8fd4\u56de$x^y$\u7684\u503c\u3002 double exp(double x) \u8fd4\u56de$e^x$\u7684\u503c\u3002 double exp2(double x) \u8fd4\u56de$2^x$\u7684\u503c\u3002 double log(double x) \u8fd4\u56de\u4ee5\u81ea\u7136\u6570e\u4e3a\u5e95x\u7684\u5bf9\u6570\u3002 double log2(double x) \u8fd4\u56de\u4ee52\u4e3a\u5e95x\u7684\u5bf9\u6570\u3002 double log10(double x) \u8fd4\u56de\u4ee510\u4e3a\u5e95x\u7684\u5bf9\u6570\u3002 double sin(double x) \u8fd4\u56dex\u7684\u6b63\u5f26\u503c\u3002 double asin(double x) \u8fd4\u56dex\u7684\u53cd\u6b63\u5f26\u503c\u3002 double cos(double x) \u8fd4\u56dex\u7684\u4f59\u5f26\u503c\u3002 double acos(double x) \u8fd4\u56dex\u7684\u53cd\u4f59\u5f26\u503c\u3002 double tan(double x) \u8fd4\u56dex\u7684\u6b63\u5207\u503c\u3002 double atan(double x) \u8fd4\u56dex\u7684\u53cd\u6b63\u5207\u503c\u3002 double rand() \u8fd4\u56de[0,1)\u5185\u7684\u968f\u673a\u6d6e\u70b9\u6570\u3002 int rand32(int min, int max) \u8fd4\u56de [min, max) \u5185\u7684\u4e00\u4e2a\u968f\u673a32\u4f4d\u6574\u6570\u3002 \u60a8\u53ef\u4ee5\u53ea\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u4f1a\u5224\u5b9a\u4e3a max \uff0c\u6b64\u65f6 min \u9ed8\u8ba4\u4e3a 0 \u3002 \u5982\u679c\u60a8\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u6b64\u65f6\u4f1a\u4ece\u5e26\u7b26\u53f7\u768432\u4f4dint\u8303\u56f4\u5185\u968f\u673a\u8fd4\u56de\u3002 int rand64(int min, int max) \u8fd4\u56de [min, max) \u5185\u7684\u4e00\u4e2a\u968f\u673a64\u4f4d\u6574\u6570\u3002 \u60a8\u53ef\u4ee5\u53ea\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u4f1a\u5224\u5b9a\u4e3a max \uff0c\u6b64\u65f6 min \u9ed8\u8ba4\u4e3a 0 \u3002 \u5982\u679c\u60a8\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u6b64\u65f6\u4f1a\u4ece\u5e26\u7b26\u53f7\u768464\u4f4dint\u8303\u56f4\u5185\u968f\u673a\u8fd4\u56de\u3002 collect() \u5c06\u6536\u96c6\u7684\u6240\u6709\u503c\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\u3002 avg() \u8fd4\u56de\u53c2\u6570\u7684\u5e73\u5747\u503c\u3002 count() \u8fd4\u56de\u53c2\u6570\u7684\u6570\u91cf\u3002 max() \u8fd4\u56de\u53c2\u6570\u7684\u6700\u5927\u503c\u3002 min() \u8fd4\u56de\u53c2\u6570\u7684\u6700\u5c0f\u503c\u3002 std() \u8fd4\u56de\u53c2\u6570\u7684\u603b\u4f53\u6807\u51c6\u5dee\u3002 sum() \u8fd4\u56de\u53c2\u6570\u7684\u548c\u3002 bit_and() \u9010\u4f4d\u505aAND\u64cd\u4f5c\u3002 bit_or() \u9010\u4f4d\u505aOR\u64cd\u4f5c\u3002 bit_xor() \u9010\u4f4d\u505aXOR\u64cd\u4f5c\u3002 int size() \u8fd4\u56de\u5217\u8868\u6216\u6620\u5c04\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 map(fun, iter) \u5c06\u7ed9\u5b9a\u51fd\u6570\u5e94\u7528\u4e8e\u7ed9\u5b9a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u6bcf\u4e00\u9879\u540e\uff0c\u8fd4\u56de\u4e00\u4e2a\u6620\u5c04\u5bf9\u8c61\u3002 int range(int start, int end, int step) \u8fd4\u56de [start,end] \u4e2d\u6307\u5b9a\u6b65\u957f\u7684\u503c\u7ec4\u6210\u7684\u5217\u8868\u3002\u6b65\u957f step \u9ed8\u8ba4\u4e3a1\u3002 int sign(double x) \u8fd4\u56dex\u7684\u6b63\u8d1f\u53f7\u3002 \u5982\u679cx\u4e3a 0 \uff0c\u5219\u8fd4\u56de 0 \u3002 \u5982\u679cx\u4e3a\u8d1f\u6570\uff0c\u5219\u8fd4\u56de -1 \u3002 \u5982\u679cx\u4e3a\u6b63\u6570\uff0c\u5219\u8fd4\u56de 1 \u3002 double e() \u8fd4\u56de\u81ea\u7136\u5bf9\u6570\u7684\u5e95e\uff082.718281828459045\uff09\u3002 double pi() \u8fd4\u56de\u6570\u5b66\u5e38\u6570\u03c0\uff083.141592653589793\uff09\u3002 double radians() \u5c06\u89d2\u5ea6\u8f6c\u6362\u4e3a\u5f27\u5ea6\u3002 radians(180) \u8fd4\u56de 3.141592653589793 \u3002 \u8bf4\u660e \uff1a\u5982\u679c\u53c2\u6570\u4e3a NULL \uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\u3002","title":"\u5185\u7f6e\u6570\u5b66\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/10.collect/","text":"collect\u51fd\u6570 \u00b6 collect() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u7b26\u5408\u8868\u8fbe\u5f0f\u8fd4\u56de\u7ed3\u679c\u7684\u5217\u8868\u3002\u8be5\u51fd\u6570\u53ef\u4ee5\u5c06\u591a\u6761\u8bb0\u5f55\u6216\u503c\u5408\u5e76\u8fdb\u4e00\u4e2a\u5217\u8868\uff0c\u5b9e\u73b0\u6570\u636e\u805a\u5408\u3002 collect() \u662f\u4e00\u4e2a\u805a\u5408\u51fd\u6570\uff0c\u7c7b\u4f3cSQL\u4e2d\u7684 GROUP BY \u3002 \u793a\u4f8b \u00b6 nebula> UNWIND [1, 2, 1] AS a \\ RETURN a; +---+ | a | +---+ | 1 | +---+ | 2 | +---+ | 1 | +---+ nebula> UNWIND [1, 2, 1] AS a \\ RETURN collect(a); +------------+ | COLLECT(a) | +------------+ | [1, 2, 1] | +------------+ nebula> UNWIND [1, 2, 1] AS a \\ RETURN a, collect(a), size(collect(a)); +---+------------+------------------+ | a | COLLECT(a) | size(COLLECT(a)) | +---+------------+------------------+ | 2 | [2] | 1 | +---+------------+------------------+ | 1 | [1, 1] | 2 | +---+------------+------------------+ # \u964d\u5e8f\u6392\u5217\uff0c\u9650\u5236\u8f93\u51fa\u884c\u6570\u4e3a3\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u5217\u8868\u4e2d\u3002 nebula> UNWIND [\"c\", \"b\", \"a\", \"d\" ] AS p \\ WITH p AS q \\ ORDER BY q DESC LIMIT 3 \\ RETURN collect(q); +-----------------+ | COLLECT(q) | +-----------------+ | [\"d\", \"c\", \"b\"] | +-----------------+ nebula> WITH [1, 1, 2, 2] AS coll \\ UNWIND coll AS x \\ WITH DISTINCT x \\ RETURN collect(x) AS ss; +--------+ | ss | +--------+ | [1, 2] | +--------+ nebula> MATCH (n:player) \\ RETURN collect(n.age); +---------------------------------------------------------------+ | COLLECT(n.age) | ----------------------------------------------------------------+ | [32, 32, 34, 29, 41, 40, 33, 25, 40, 37, ... ... # \u57fa\u4e8e\u5e74\u9f84\u805a\u5408\u59d3\u540d\u3002 nebula> MATCH (n:player) \\ RETURN n.age AS age, collect(n.name); +-----+--------------------------------------------------------------------------+ | age | collect(n.name) | +-----+--------------------------------------------------------------------------+ | 24 | [\"Giannis Antetokounmpo\"] | +-----+--------------------------------------------------------------------------+ | 20 | [\"Luka Doncic\"] | +-----+--------------------------------------------------------------------------+ | 25 | [\"Joel Embiid\", \"Kyle Anderson\"] | +-----+--------------------------------------------------------------------------+ ...","title":"Collect"},{"location":"3.ngql-guide/6.functions-and-expressions/10.collect/#collect","text":"collect() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u7b26\u5408\u8868\u8fbe\u5f0f\u8fd4\u56de\u7ed3\u679c\u7684\u5217\u8868\u3002\u8be5\u51fd\u6570\u53ef\u4ee5\u5c06\u591a\u6761\u8bb0\u5f55\u6216\u503c\u5408\u5e76\u8fdb\u4e00\u4e2a\u5217\u8868\uff0c\u5b9e\u73b0\u6570\u636e\u805a\u5408\u3002 collect() \u662f\u4e00\u4e2a\u805a\u5408\u51fd\u6570\uff0c\u7c7b\u4f3cSQL\u4e2d\u7684 GROUP BY \u3002","title":"collect\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/10.collect/#_1","text":"nebula> UNWIND [1, 2, 1] AS a \\ RETURN a; +---+ | a | +---+ | 1 | +---+ | 2 | +---+ | 1 | +---+ nebula> UNWIND [1, 2, 1] AS a \\ RETURN collect(a); +------------+ | COLLECT(a) | +------------+ | [1, 2, 1] | +------------+ nebula> UNWIND [1, 2, 1] AS a \\ RETURN a, collect(a), size(collect(a)); +---+------------+------------------+ | a | COLLECT(a) | size(COLLECT(a)) | +---+------------+------------------+ | 2 | [2] | 1 | +---+------------+------------------+ | 1 | [1, 1] | 2 | +---+------------+------------------+ # \u964d\u5e8f\u6392\u5217\uff0c\u9650\u5236\u8f93\u51fa\u884c\u6570\u4e3a3\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u5217\u8868\u4e2d\u3002 nebula> UNWIND [\"c\", \"b\", \"a\", \"d\" ] AS p \\ WITH p AS q \\ ORDER BY q DESC LIMIT 3 \\ RETURN collect(q); +-----------------+ | COLLECT(q) | +-----------------+ | [\"d\", \"c\", \"b\"] | +-----------------+ nebula> WITH [1, 1, 2, 2] AS coll \\ UNWIND coll AS x \\ WITH DISTINCT x \\ RETURN collect(x) AS ss; +--------+ | ss | +--------+ | [1, 2] | +--------+ nebula> MATCH (n:player) \\ RETURN collect(n.age); +---------------------------------------------------------------+ | COLLECT(n.age) | ----------------------------------------------------------------+ | [32, 32, 34, 29, 41, 40, 33, 25, 40, 37, ... ... # \u57fa\u4e8e\u5e74\u9f84\u805a\u5408\u59d3\u540d\u3002 nebula> MATCH (n:player) \\ RETURN n.age AS age, collect(n.name); +-----+--------------------------------------------------------------------------+ | age | collect(n.name) | +-----+--------------------------------------------------------------------------+ | 24 | [\"Giannis Antetokounmpo\"] | +-----+--------------------------------------------------------------------------+ | 20 | [\"Luka Doncic\"] | +-----+--------------------------------------------------------------------------+ | 25 | [\"Joel Embiid\", \"Kyle Anderson\"] | +-----+--------------------------------------------------------------------------+ ...","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/11.reduce/","text":"reduce\u51fd\u6570 \u00b6 reduce() \u5c06\u8868\u8fbe\u5f0f\u9010\u4e2a\u5e94\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u7136\u540e\u548c\u7d2f\u52a0\u5668\u4e2d\u7684\u5f53\u524d\u7ed3\u679c\u7d2f\u52a0\uff0c\u6700\u540e\u8fd4\u56de\u5b8c\u6574\u7ed3\u679c\u3002\u8be5\u51fd\u6570\u5c06\u904d\u5386\u7ed9\u5b9a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 e \uff0c\u5728 e \u4e0a\u8fd0\u884c\u8868\u8fbe\u5f0f\u5e76\u548c\u7d2f\u52a0\u5668\u7684\u5f53\u524d\u7ed3\u679c\u7d2f\u52a0\uff0c\u5c06\u65b0\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u7d2f\u52a0\u5668\u4e2d\u3002\u8fd9\u4e2a\u51fd\u6570\u7c7b\u4f3c\u4e8e\u51fd\u6570\u5f0f\u8bed\u8a00\uff08\u5982Lisp\u548cScala\uff09\u4e2d\u7684fold\u6216reduce\u65b9\u6cd5\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u5728openCypher\u4e2d\uff0c reduce() \u51fd\u6570\u6ca1\u6709\u5b9a\u4e49\u3002nGQL\u4f7f\u7528\u4e86Cypher\u65b9\u5f0f\u5b9e\u73b0 reduce() \u51fd\u6570\u3002 \u8bed\u6cd5 \u00b6 reduce(<accumulator> = <initial>, <variable> IN <list> | <expression>) \u53c2\u6570 \u8bf4\u660e accumulator \u5728\u904d\u5386\u5217\u8868\u65f6\u4fdd\u5b58\u7d2f\u52a0\u7ed3\u679c\u3002 initial \u4e3a accumulator \u63d0\u4f9b\u521d\u59cb\u503c\u7684\u8868\u8fbe\u5f0f\u6216\u503c\u3002 variable \u4e3a\u5217\u8868\u5f15\u5165\u4e00\u4e2a\u53d8\u91cf\uff0c\u51b3\u5b9a\u4f7f\u7528\u5217\u8868\u4e2d\u7684\u54ea\u4e2a\u5143\u7d20\u3002 list \u5217\u8868\u6216\u5217\u8868\u8868\u8fbe\u5f0f\u3002 expression \u8be5\u8868\u8fbe\u5f0f\u5c06\u5bf9\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fd0\u884c\u4e00\u6b21\uff0c\u5e76\u5c06\u7ed3\u679c\u7d2f\u52a0\u81f3 accumulator \u3002 \u8bf4\u660e \uff1a\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u53d6\u51b3\u4e8e\u63d0\u4f9b\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u8868\u8fbe\u5f0f\u7684\u8bed\u4e49\u3002 \u793a\u4f8b \u00b6 nebula> RETURN reduce(totalNum = 10, n IN range(1, 3) | totalNum + n) AS r; +----+ | r | +----+ | 16 | +----+ nebula> RETURN reduce(totalNum = -4 * 5, n IN [1, 2] | totalNum + n * 2) AS r; +-----+ | r | +-----+ | -14 | +-----+ nebula> MATCH p = (n:player{name:\"LeBron James\"})<-[:follow]-(m) \\ RETURN nodes(p)[0].age AS src1, nodes(p)[1].age AS dst2, \\ reduce(totalAge = 100, n IN nodes(p) | totalAge + n.age) AS sum; +------+------+-----+ | src1 | dst2 | sum | +------+------+-----+ | 34 | 31 | 165 | +------+------+-----+ | 34 | 29 | 163 | +------+------+-----+ | 34 | 33 | 167 | +------+------+-----+ | 34 | 26 | 160 | +------+------+-----+ | 34 | 34 | 168 | +------+------+-----+ | 34 | 37 | 171 | +------+------+-----+ nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\" \\ | GO FROM $-.VertexID over follow \\ WHERE follow.degree != reduce(totalNum = 5, n IN range(1, 3) | $$.player.age + totalNum + n) \\ YIELD $$.player.name AS id, $$.player.age AS age, follow.degree AS degree; +---------------------+-----+--------+ | id | age | degree | +---------------------+-----+--------+ | \"Tim Duncan\" | 42 | 95 | +---------------------+-----+--------+ | \"LaMarcus Aldridge\" | 33 | 90 | +---------------------+-----+--------+ | \"Manu Ginobili\" | 41 | 95 | +---------------------+-----+--------+","title":"Reduce"},{"location":"3.ngql-guide/6.functions-and-expressions/11.reduce/#reduce","text":"reduce() \u5c06\u8868\u8fbe\u5f0f\u9010\u4e2a\u5e94\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u7136\u540e\u548c\u7d2f\u52a0\u5668\u4e2d\u7684\u5f53\u524d\u7ed3\u679c\u7d2f\u52a0\uff0c\u6700\u540e\u8fd4\u56de\u5b8c\u6574\u7ed3\u679c\u3002\u8be5\u51fd\u6570\u5c06\u904d\u5386\u7ed9\u5b9a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 e \uff0c\u5728 e \u4e0a\u8fd0\u884c\u8868\u8fbe\u5f0f\u5e76\u548c\u7d2f\u52a0\u5668\u7684\u5f53\u524d\u7ed3\u679c\u7d2f\u52a0\uff0c\u5c06\u65b0\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u7d2f\u52a0\u5668\u4e2d\u3002\u8fd9\u4e2a\u51fd\u6570\u7c7b\u4f3c\u4e8e\u51fd\u6570\u5f0f\u8bed\u8a00\uff08\u5982Lisp\u548cScala\uff09\u4e2d\u7684fold\u6216reduce\u65b9\u6cd5\u3002","title":"reduce\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/11.reduce/#opencypher","text":"\u5728openCypher\u4e2d\uff0c reduce() \u51fd\u6570\u6ca1\u6709\u5b9a\u4e49\u3002nGQL\u4f7f\u7528\u4e86Cypher\u65b9\u5f0f\u5b9e\u73b0 reduce() \u51fd\u6570\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/6.functions-and-expressions/11.reduce/#_1","text":"reduce(<accumulator> = <initial>, <variable> IN <list> | <expression>) \u53c2\u6570 \u8bf4\u660e accumulator \u5728\u904d\u5386\u5217\u8868\u65f6\u4fdd\u5b58\u7d2f\u52a0\u7ed3\u679c\u3002 initial \u4e3a accumulator \u63d0\u4f9b\u521d\u59cb\u503c\u7684\u8868\u8fbe\u5f0f\u6216\u503c\u3002 variable \u4e3a\u5217\u8868\u5f15\u5165\u4e00\u4e2a\u53d8\u91cf\uff0c\u51b3\u5b9a\u4f7f\u7528\u5217\u8868\u4e2d\u7684\u54ea\u4e2a\u5143\u7d20\u3002 list \u5217\u8868\u6216\u5217\u8868\u8868\u8fbe\u5f0f\u3002 expression \u8be5\u8868\u8fbe\u5f0f\u5c06\u5bf9\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fd0\u884c\u4e00\u6b21\uff0c\u5e76\u5c06\u7ed3\u679c\u7d2f\u52a0\u81f3 accumulator \u3002 \u8bf4\u660e \uff1a\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u53d6\u51b3\u4e8e\u63d0\u4f9b\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u8868\u8fbe\u5f0f\u7684\u8bed\u4e49\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/6.functions-and-expressions/11.reduce/#_2","text":"nebula> RETURN reduce(totalNum = 10, n IN range(1, 3) | totalNum + n) AS r; +----+ | r | +----+ | 16 | +----+ nebula> RETURN reduce(totalNum = -4 * 5, n IN [1, 2] | totalNum + n * 2) AS r; +-----+ | r | +-----+ | -14 | +-----+ nebula> MATCH p = (n:player{name:\"LeBron James\"})<-[:follow]-(m) \\ RETURN nodes(p)[0].age AS src1, nodes(p)[1].age AS dst2, \\ reduce(totalAge = 100, n IN nodes(p) | totalAge + n.age) AS sum; +------+------+-----+ | src1 | dst2 | sum | +------+------+-----+ | 34 | 31 | 165 | +------+------+-----+ | 34 | 29 | 163 | +------+------+-----+ | 34 | 33 | 167 | +------+------+-----+ | 34 | 26 | 160 | +------+------+-----+ | 34 | 34 | 168 | +------+------+-----+ | 34 | 37 | 171 | +------+------+-----+ nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\" \\ | GO FROM $-.VertexID over follow \\ WHERE follow.degree != reduce(totalNum = 5, n IN range(1, 3) | $$.player.age + totalNum + n) \\ YIELD $$.player.name AS id, $$.player.age AS age, follow.degree AS degree; +---------------------+-----+--------+ | id | age | degree | +---------------------+-----+--------+ | \"Tim Duncan\" | 42 | 95 | +---------------------+-----+--------+ | \"LaMarcus Aldridge\" | 33 | 90 | +---------------------+-----+--------+ | \"Manu Ginobili\" | 41 | 95 | +---------------------+-----+--------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/2.string/","text":"\u5185\u7f6e\u5b57\u7b26\u4e32\u51fd\u6570 \u00b6 Nebula Graph\u652f\u6301\u4ee5\u4e0b\u5185\u7f6e\u5b57\u7b26\u4e32\u51fd\u6570\u3002 \u8bf4\u660e \uff1a\u548cSQL\u4e00\u6837\uff0cnGQL\u7684\u5b57\u7b26\u7d22\u5f15\uff08\u4f4d\u7f6e\uff09\u4ece 1 \u5f00\u59cb\u3002\u4f46\u662fC\u8bed\u8a00\u7684\u5b57\u7b26\u7d22\u5f15\u662f\u4ece 0 \u5f00\u59cb\u7684\u3002 \u51fd\u6570 \u8bf4\u660e int strcasecmp(string a, string b) \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\u3002\u5f53a=b\u65f6\uff0c\u8fd4\u56de0\uff0c\u5f53a>b\u662f\uff0c\u8fd4\u56de\u5927\u4e8e0\u7684\u6570\uff0c\u5f53a<b\u65f6\uff0c\u8fd4\u56de\u5c0f\u4e8e0\u7684\u6570\u3002 string lower(string a) \u8fd4\u56de\u5c0f\u5199\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002 string toLower(string a) \u548c lower() \u76f8\u540c\u3002 string upper(string a) \u8fd4\u56de\u5927\u5199\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002 string toUpper(string a) \u548c upper() \u76f8\u540c\u3002 int length(string a) \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u8fd4\u56de\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 string trim(string a) \u5220\u9664\u5b57\u7b26\u4e32\u5934\u90e8\u548c\u5c3e\u90e8\u7684\u7a7a\u683c\u3002 string ltrim(string a) \u5220\u9664\u5b57\u7b26\u4e32\u5934\u90e8\u7684\u7a7a\u683c\u3002 string rtrim(string a) \u5220\u9664\u5b57\u7b26\u4e32\u5c3e\u90e8\u7684\u7a7a\u683c\u3002 string left(string a, int count) \u8fd4\u56de\u5b57\u7b26\u4e32\u5de6\u4fa7 count \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c count \u8d85\u8fc7\u5b57\u7b26\u4e32a\u7684\u957f\u5ea6\uff0c\u5219\u8fd4\u56de\u5b57\u7b26\u4e32a\u3002 string right(string a, int count) \u8fd4\u56de\u5b57\u7b26\u4e32\u53f3\u4fa7 count \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c count \u8d85\u8fc7\u5b57\u7b26\u4e32a\u7684\u957f\u5ea6\uff0c\u5219\u8fd4\u56de\u5b57\u7b26\u4e32a\u3002 string lpad(string a, int size, string letters) \u5728\u5b57\u7b26\u4e32a\u7684\u5de6\u4fa7\u586b\u5145 letters \u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de size \u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 string rpad(string a, int size, string letters) \u5728\u5b57\u7b26\u4e32a\u7684\u53f3\u4fa7\u586b\u5145 letters \u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de size \u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 string substr(string a, int pos, int count) \u4ece\u5b57\u7b26\u4e32a\u7684\u6307\u5b9a\u4f4d\u7f6e pos \u5f00\u59cb\uff08\u4e0d\u5305\u62ec pos \u4f4d\u7f6e\u7684\u5b57\u7b26\uff09\uff0c\u63d0\u53d6\u53f3\u4fa7\u7684 count \u4e2a\u5b57\u7b26\uff0c\u7ec4\u6210\u65b0\u7684\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u3002 string substring(string a, int pos, int count) \u548c substr() \u76f8\u540c\u3002 string reverse(string) \u9006\u5e8f\u8fd4\u56de\u5b57\u7b26\u4e32\u3002 string replace(string a, string b, string c) \u5c06\u5b57\u7b26\u4e32a\u4e2d\u7684\u5b50\u5b57\u7b26\u4e32b\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32c\u3002 list split(string a, string b) \u5728\u5b50\u5b57\u7b26\u4e32b\u5904\u62c6\u5206\u5b57\u7b26\u4e32a\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\u3002 string toString() \u5c06\u4efb\u610f\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\u3002 int hash() \u83b7\u53d6\u4efb\u610f\u5bf9\u8c61\u7684\u54c8\u5e0c\u503c\u3002 \u8bf4\u660e \uff1a\u5982\u679c\u53c2\u6570\u4e3a NULL \uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\u3002 substr() \u548c substring() \u7684\u8fd4\u56de\u8bf4\u660e \u00b6 \u5b57\u7b26\u7d22\u5f15\uff08\u4f4d\u7f6e\uff09\u4ece 0 \u5f00\u59cb\u3002 \u5982\u679c pos \u4e3a0\uff0c\u5219\u8fd4\u56de\u6574\u4e2a\u5b57\u7b26\u4e32\u3002 \u5982\u679c pos \u5927\u4e8e\u6700\u5927\u5b57\u7b26\u7d22\u5f15\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u5982\u679c pos \u662f\u8d1f\u6570\uff0c\u5219\u8fd4\u56de BAD_DATA \u3002 \u5982\u679c\u7701\u7565 count \uff0c\u5219\u8fd4\u56de\u4ece pos \u4f4d\u7f6e\u5f00\u59cb\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u5982\u679c count \u4e3a0\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u4f7f\u7528 NULL \u4f5c\u4e3a\u4efb\u4f55\u53c2\u6570\u4f1a\u51fa\u73b0 \u9519\u8bef \u3002 OpenCypher\u517c\u5bb9\u6027 \uff1a \u5728openCypher\u4e2d\uff0c\u5982\u679c\u5b57\u7b26\u4e32 a \u4e3a null \uff0c\u4f1a\u8fd4\u56de null \u3002 \u5728openCypher\u4e2d\uff0c\u5982\u679c pos \u4e3a0\uff0cIn openCypher, if pos is 0, \u4f1a\u8fd4\u56de\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u3001 count \u4e2a\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u5728openCypher\u4e2d\uff0c\u5982\u679c pos \u6216 count \u4e3a null \u6216\u8d1f\u6574\u6570\uff0c\u4f1a\u51fa\u73b0\u9519\u8bef\u3002","title":"String"},{"location":"3.ngql-guide/6.functions-and-expressions/2.string/#_1","text":"Nebula Graph\u652f\u6301\u4ee5\u4e0b\u5185\u7f6e\u5b57\u7b26\u4e32\u51fd\u6570\u3002 \u8bf4\u660e \uff1a\u548cSQL\u4e00\u6837\uff0cnGQL\u7684\u5b57\u7b26\u7d22\u5f15\uff08\u4f4d\u7f6e\uff09\u4ece 1 \u5f00\u59cb\u3002\u4f46\u662fC\u8bed\u8a00\u7684\u5b57\u7b26\u7d22\u5f15\u662f\u4ece 0 \u5f00\u59cb\u7684\u3002 \u51fd\u6570 \u8bf4\u660e int strcasecmp(string a, string b) \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\u3002\u5f53a=b\u65f6\uff0c\u8fd4\u56de0\uff0c\u5f53a>b\u662f\uff0c\u8fd4\u56de\u5927\u4e8e0\u7684\u6570\uff0c\u5f53a<b\u65f6\uff0c\u8fd4\u56de\u5c0f\u4e8e0\u7684\u6570\u3002 string lower(string a) \u8fd4\u56de\u5c0f\u5199\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002 string toLower(string a) \u548c lower() \u76f8\u540c\u3002 string upper(string a) \u8fd4\u56de\u5927\u5199\u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u3002 string toUpper(string a) \u548c upper() \u76f8\u540c\u3002 int length(string a) \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u8fd4\u56de\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 string trim(string a) \u5220\u9664\u5b57\u7b26\u4e32\u5934\u90e8\u548c\u5c3e\u90e8\u7684\u7a7a\u683c\u3002 string ltrim(string a) \u5220\u9664\u5b57\u7b26\u4e32\u5934\u90e8\u7684\u7a7a\u683c\u3002 string rtrim(string a) \u5220\u9664\u5b57\u7b26\u4e32\u5c3e\u90e8\u7684\u7a7a\u683c\u3002 string left(string a, int count) \u8fd4\u56de\u5b57\u7b26\u4e32\u5de6\u4fa7 count \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c count \u8d85\u8fc7\u5b57\u7b26\u4e32a\u7684\u957f\u5ea6\uff0c\u5219\u8fd4\u56de\u5b57\u7b26\u4e32a\u3002 string right(string a, int count) \u8fd4\u56de\u5b57\u7b26\u4e32\u53f3\u4fa7 count \u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c count \u8d85\u8fc7\u5b57\u7b26\u4e32a\u7684\u957f\u5ea6\uff0c\u5219\u8fd4\u56de\u5b57\u7b26\u4e32a\u3002 string lpad(string a, int size, string letters) \u5728\u5b57\u7b26\u4e32a\u7684\u5de6\u4fa7\u586b\u5145 letters \u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de size \u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 string rpad(string a, int size, string letters) \u5728\u5b57\u7b26\u4e32a\u7684\u53f3\u4fa7\u586b\u5145 letters \u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de size \u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 string substr(string a, int pos, int count) \u4ece\u5b57\u7b26\u4e32a\u7684\u6307\u5b9a\u4f4d\u7f6e pos \u5f00\u59cb\uff08\u4e0d\u5305\u62ec pos \u4f4d\u7f6e\u7684\u5b57\u7b26\uff09\uff0c\u63d0\u53d6\u53f3\u4fa7\u7684 count \u4e2a\u5b57\u7b26\uff0c\u7ec4\u6210\u65b0\u7684\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u3002 string substring(string a, int pos, int count) \u548c substr() \u76f8\u540c\u3002 string reverse(string) \u9006\u5e8f\u8fd4\u56de\u5b57\u7b26\u4e32\u3002 string replace(string a, string b, string c) \u5c06\u5b57\u7b26\u4e32a\u4e2d\u7684\u5b50\u5b57\u7b26\u4e32b\u66ff\u6362\u4e3a\u5b57\u7b26\u4e32c\u3002 list split(string a, string b) \u5728\u5b50\u5b57\u7b26\u4e32b\u5904\u62c6\u5206\u5b57\u7b26\u4e32a\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\u3002 string toString() \u5c06\u4efb\u610f\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\u3002 int hash() \u83b7\u53d6\u4efb\u610f\u5bf9\u8c61\u7684\u54c8\u5e0c\u503c\u3002 \u8bf4\u660e \uff1a\u5982\u679c\u53c2\u6570\u4e3a NULL \uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\u3002","title":"\u5185\u7f6e\u5b57\u7b26\u4e32\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/2.string/#substrsubstring","text":"\u5b57\u7b26\u7d22\u5f15\uff08\u4f4d\u7f6e\uff09\u4ece 0 \u5f00\u59cb\u3002 \u5982\u679c pos \u4e3a0\uff0c\u5219\u8fd4\u56de\u6574\u4e2a\u5b57\u7b26\u4e32\u3002 \u5982\u679c pos \u5927\u4e8e\u6700\u5927\u5b57\u7b26\u7d22\u5f15\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u5982\u679c pos \u662f\u8d1f\u6570\uff0c\u5219\u8fd4\u56de BAD_DATA \u3002 \u5982\u679c\u7701\u7565 count \uff0c\u5219\u8fd4\u56de\u4ece pos \u4f4d\u7f6e\u5f00\u59cb\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u5982\u679c count \u4e3a0\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u4f7f\u7528 NULL \u4f5c\u4e3a\u4efb\u4f55\u53c2\u6570\u4f1a\u51fa\u73b0 \u9519\u8bef \u3002 OpenCypher\u517c\u5bb9\u6027 \uff1a \u5728openCypher\u4e2d\uff0c\u5982\u679c\u5b57\u7b26\u4e32 a \u4e3a null \uff0c\u4f1a\u8fd4\u56de null \u3002 \u5728openCypher\u4e2d\uff0c\u5982\u679c pos \u4e3a0\uff0cIn openCypher, if pos is 0, \u4f1a\u8fd4\u56de\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u3001 count \u4e2a\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u5728openCypher\u4e2d\uff0c\u5982\u679c pos \u6216 count \u4e3a null \u6216\u8d1f\u6574\u6570\uff0c\u4f1a\u51fa\u73b0\u9519\u8bef\u3002","title":"substr()\u548csubstring()\u7684\u8fd4\u56de\u8bf4\u660e"},{"location":"3.ngql-guide/6.functions-and-expressions/3.date-and-time/","text":"\u5185\u7f6e\u65e5\u671f\u65f6\u95f4\u51fd\u6570 \u00b6 Nebula Graph\u652f\u6301\u4ee5\u4e0b\u5185\u7f6e\u65e5\u671f\u65f6\u95f4\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e int now() \u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u65f6\u533a\u7684\u65f6\u95f4\u6233\u3002 date date() \u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u65e5\u671f\uff08UTC\u65f6\u95f4\uff09\u3002 time time() \u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\uff08UTC\u65f6\u95f4\uff09\u3002 datetime datetime() \u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\uff08UTC\u65f6\u95f4\uff09\u3002 date() \u3001 time() \u548c datetime() \u51fd\u6570\u9664\u4e86\u4f20\u5165\u7a7a\u503c\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u6216\u65e5\u671f\uff0c\u8fd8\u63a5\u53d7string\u548cmap\u7c7b\u578b\u7684\u53c2\u6570\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u5728openCypher\u4e2d\uff0c\u65f6\u95f4\u7cbe\u786e\u5230\u6beb\u79d2\u3002 \u5728nGQL\u4e2d\uff0c\u65f6\u95f4\u7cbe\u786e\u5230\u79d2\u3002\u6beb\u79d2\u6570\u663e\u793a\u4e3a 000 \u3002 \u793a\u4f8b \u00b6 > RETURN now(), date(), time(), datetime(); +------------+------------+--------------+-------------------------+ | now() | date() | time() | datetime() | +------------+------------+--------------+-------------------------+ | 1611907165 | 2021-01-29 | 07:59:22.000 | 2021-01-29T07:59:22.000 | +------------+------------+--------------+-------------------------+","title":"Date and time"},{"location":"3.ngql-guide/6.functions-and-expressions/3.date-and-time/#_1","text":"Nebula Graph\u652f\u6301\u4ee5\u4e0b\u5185\u7f6e\u65e5\u671f\u65f6\u95f4\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e int now() \u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u65f6\u533a\u7684\u65f6\u95f4\u6233\u3002 date date() \u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u65e5\u671f\uff08UTC\u65f6\u95f4\uff09\u3002 time time() \u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\uff08UTC\u65f6\u95f4\uff09\u3002 datetime datetime() \u6839\u636e\u5f53\u524d\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\uff08UTC\u65f6\u95f4\uff09\u3002 date() \u3001 time() \u548c datetime() \u51fd\u6570\u9664\u4e86\u4f20\u5165\u7a7a\u503c\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u6216\u65e5\u671f\uff0c\u8fd8\u63a5\u53d7string\u548cmap\u7c7b\u578b\u7684\u53c2\u6570\u3002","title":"\u5185\u7f6e\u65e5\u671f\u65f6\u95f4\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/3.date-and-time/#opencypher","text":"\u5728openCypher\u4e2d\uff0c\u65f6\u95f4\u7cbe\u786e\u5230\u6beb\u79d2\u3002 \u5728nGQL\u4e2d\uff0c\u65f6\u95f4\u7cbe\u786e\u5230\u79d2\u3002\u6beb\u79d2\u6570\u663e\u793a\u4e3a 000 \u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/6.functions-and-expressions/3.date-and-time/#_2","text":"> RETURN now(), date(), time(), datetime(); +------------+------------+--------------+-------------------------+ | now() | date() | time() | datetime() | +------------+------------+--------------+-------------------------+ | 1611907165 | 2021-01-29 | 07:59:22.000 | 2021-01-29T07:59:22.000 | +------------+------------+--------------+-------------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/4.schema/","text":"Schema\u51fd\u6570 \u00b6 Nebula Graph\u652f\u6301\u4ee5\u4e0bSchema\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e id(vertex) \u8fd4\u56de\u70b9ID\u3002\u6570\u636e\u7c7b\u578b\u548c\u70b9ID\u7684\u7c7b\u578b\u4fdd\u6301\u4e00\u81f4\u3002 list tags(vertex) \u8fd4\u56de\u70b9\u7684\u6807\u7b7e\u3002 list labels(vertex) \u8fd4\u56de\u70b9\u7684\u6807\u7b7e\u3002 map properties(vertex_or_edge) \u63a5\u6536\u70b9\u6216\u8fb9\u5e76\u8fd4\u56de\u5176\u5c5e\u6027\u3002 string type(edge) \u8fd4\u56de\u8fb9\u7684\u8fb9\u7c7b\u578b\u3002 vertex startNode(path) \u83b7\u53d6\u4e00\u6761\u8fb9\u6216\u4e00\u6761\u8def\u5f84\u5e76\u8fd4\u56de\u5b83\u7684\u8d77\u59cb\u70b9ID\u3002 string endNode(path) \u83b7\u53d6\u4e00\u6761\u8fb9\u6216\u4e00\u6761\u8def\u5f84\u5e76\u8fd4\u56de\u5b83\u7684\u76ee\u7684\u70b9ID\u3002 int rank(edge) \u8fd4\u56de\u8fb9\u7684rank\u3002 \u793a\u4f8b \u00b6 nebula> MATCH (a:player) WHERE id(a) == \"player100\" \\ RETURN tags(a), labels(a), properties(a); +------------+------------+-------------------------------+ | tags(a) | labels(a) | properties(a) | +------------+------------+-------------------------------+ | [\"player\"] | [\"player\"] | {age: 42, name: \"Tim Duncan\"} | +------------+------------+-------------------------------+ nebula> MATCH p = (a :player {name : \"Tim Duncan\"})-[r:serve]-(t) \\ RETURN type(r), rank(r); +---------+---------+ | type(r) | rank(r) | +---------+---------+ | \"serve\" | 0 | +---------+---------+ nebula> MATCH p = (a :player {name : \"Tim Duncan\"})-[r:serve]-(t) \\ RETURN startNode(p), endNode(p); +----------------------------------------------------+----------------------------------+ | startNode(p) | endNode(p) | +----------------------------------------------------+----------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | (\"team204\" :team{name: \"Spurs\"}) | +----------------------------------------------------+----------------------------------+","title":"Schema"},{"location":"3.ngql-guide/6.functions-and-expressions/4.schema/#schema","text":"Nebula Graph\u652f\u6301\u4ee5\u4e0bSchema\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e id(vertex) \u8fd4\u56de\u70b9ID\u3002\u6570\u636e\u7c7b\u578b\u548c\u70b9ID\u7684\u7c7b\u578b\u4fdd\u6301\u4e00\u81f4\u3002 list tags(vertex) \u8fd4\u56de\u70b9\u7684\u6807\u7b7e\u3002 list labels(vertex) \u8fd4\u56de\u70b9\u7684\u6807\u7b7e\u3002 map properties(vertex_or_edge) \u63a5\u6536\u70b9\u6216\u8fb9\u5e76\u8fd4\u56de\u5176\u5c5e\u6027\u3002 string type(edge) \u8fd4\u56de\u8fb9\u7684\u8fb9\u7c7b\u578b\u3002 vertex startNode(path) \u83b7\u53d6\u4e00\u6761\u8fb9\u6216\u4e00\u6761\u8def\u5f84\u5e76\u8fd4\u56de\u5b83\u7684\u8d77\u59cb\u70b9ID\u3002 string endNode(path) \u83b7\u53d6\u4e00\u6761\u8fb9\u6216\u4e00\u6761\u8def\u5f84\u5e76\u8fd4\u56de\u5b83\u7684\u76ee\u7684\u70b9ID\u3002 int rank(edge) \u8fd4\u56de\u8fb9\u7684rank\u3002","title":"Schema\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/4.schema/#_1","text":"nebula> MATCH (a:player) WHERE id(a) == \"player100\" \\ RETURN tags(a), labels(a), properties(a); +------------+------------+-------------------------------+ | tags(a) | labels(a) | properties(a) | +------------+------------+-------------------------------+ | [\"player\"] | [\"player\"] | {age: 42, name: \"Tim Duncan\"} | +------------+------------+-------------------------------+ nebula> MATCH p = (a :player {name : \"Tim Duncan\"})-[r:serve]-(t) \\ RETURN type(r), rank(r); +---------+---------+ | type(r) | rank(r) | +---------+---------+ | \"serve\" | 0 | +---------+---------+ nebula> MATCH p = (a :player {name : \"Tim Duncan\"})-[r:serve]-(t) \\ RETURN startNode(p), endNode(p); +----------------------------------------------------+----------------------------------+ | startNode(p) | endNode(p) | +----------------------------------------------------+----------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | (\"team204\" :team{name: \"Spurs\"}) | +----------------------------------------------------+----------------------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/","text":"CASE\u8868\u8fbe\u5f0f \u00b6 CASE \u8868\u8fbe\u5f0f\u4f7f\u7528\u6761\u4ef6\u6765\u8fc7\u6ee4nGQL\u67e5\u8be2\u8bed\u53e5\u7684\u7ed3\u679c\uff0c\u5e38\u7528\u4e8e YIELD \u548c RETURN \u5b50\u53e5\u4e2d\u3002\u548copenCypher\u4e00\u6837\uff0cnGQL\u63d0\u4f9b\u4e24\u79cd\u5f62\u5f0f\u7684 CASE \u8868\u8fbe\u5f0f\uff1a\u7b80\u5355\u5f62\u5f0f\u548c\u901a\u7528\u5f62\u5f0f\u3002 CASE \u8868\u8fbe\u5f0f\u4f1a\u904d\u5386\u6240\u6709\u6761\u4ef6\uff0c\u5e76\u5728\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\u65f6\u505c\u6b62\u8bfb\u53d6\u540e\u7eed\u6761\u4ef6\uff0c\u7136\u540e\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u4efb\u4f55\u6761\u4ef6\uff0c\u5c06\u901a\u8fc7 ELSE \u5b50\u53e5\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u6ca1\u6709 ELSE \u5b50\u53e5\u4e14\u4e0d\u6ee1\u8db3\u4efb\u4f55\u6761\u4ef6\uff0c\u5219\u8fd4\u56de NULL \u3002 \u4e0b\u56fe\u4e3a\u672c\u6587\u7684\u793a\u4f8b\u56fe\u3002 \u7b80\u5355\u5f62\u5f0f \u00b6 \u8bed\u6cd5 \u00b6 CASE <comparer> WHEN <value> THEN <result> [WHEN ...] [ELSE <default>] END \u8b66\u544a \uff1a CASE \u8868\u8fbe\u5f0f\u4e00\u5b9a\u8981\u7528 END \u7ed3\u5c3e\u3002 \u53c2\u6570 \u8bf4\u660e comparer \u7528\u4e8e\u4e0e value \u8fdb\u884c\u6bd4\u8f83\u7684\u503c\u6216\u8005\u6709\u6548\u8868\u8fbe\u5f0f\u3002 value \u548c comparer \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5339\u914d\uff0c\u5219\u6ee1\u8db3\u6b64\u6761\u4ef6\u3002 result \u5982\u679c value \u5339\u914d comparer \uff0c\u5219\u8fd4\u56de\u8be5 result \u3002 default \u5982\u679c\u6ca1\u6709\u6761\u4ef6\u5339\u914d\uff0c\u5219\u8fd4\u56de\u8be5 default \u3002 \u793a\u4f8b \u00b6 nebula> RETURN \\ CASE 2+3 \\ WHEN 4 THEN 0 \\ WHEN 5 THEN 1 \\ ELSE -1 \\ END \\ AS result; +--------+ | result | +--------+ | 1 | +--------+ nebula> GO FROM \"player100\" OVER follow \\ YIELD $$.player.name AS Name, \\ CASE $$.player.age > 35 \\ WHEN true THEN \"Yes\" \\ WHEN false THEN \"No\" \\ ELSE \"Nah\" \\ END \\ AS Age_above_35; +---------------------+--------------+ | Name | Age_above_35 | +---------------------+--------------+ | \"Tony Parker\" | \"Yes\" | +---------------------+--------------+ | \"LaMarcus Aldridge\" | \"No\" | +---------------------+--------------+ \u901a\u7528\u5f62\u5f0f \u00b6 \u8bed\u6cd5 \u00b6 CASE WHEN <condition> THEN <result> [WHEN ...] [ELSE <default>] END \u53c2\u6570 \u8bf4\u660e condition \u5982\u679c\u6761\u4ef6 condition \u4e3atrue\uff0c\u8868\u793a\u6ee1\u8db3\u6b64\u6761\u4ef6\u3002 result condition \u4e3atrue\uff0c\u5219\u8fd4\u56de\u6b64 result \u3002 default \u5982\u679c\u6ca1\u6709\u6761\u4ef6\u5339\u914d\uff0c\u5219\u8fd4\u56de\u8be5 default \u3002 \u793a\u4f8b \u00b6 nebula> YIELD \\ CASE WHEN 4 > 5 THEN 0 \\ WHEN 3+4==7 THEN 1 \\ ELSE 2 \\ END \\ AS result; +--------+ | result | +--------+ | 1 | +--------+ nebula> MATCH (v:player) WHERE v.age > 30 \\ RETURN v.name AS Name, \\ CASE \\ WHEN v.name STARTS WITH \"T\" THEN \"Yes\" \\ ELSE \"No\" \\ END \\ AS Starts_with_T; +---------------------+---------------+ | Name | Starts_with_T | +---------------------+---------------+ | \"Tim\" | \"Yes\" | +---------------------+---------------+ | \"LaMarcus Aldridge\" | \"No\" | +---------------------+---------------+ | \"Tony Parker\" | \"Yes\" | +---------------------+---------------+ \u7b80\u5355\u5f62\u5f0f\u548c\u901a\u7528\u5f62\u5f0f\u7684\u533a\u522b \u00b6 \u4e3a\u4e86\u907f\u514d\u8bef\u7528\u7b80\u5355\u5f62\u5f0f\u548c\u901a\u7528\u5f62\u5f0f\uff0c\u60a8\u9700\u8981\u4e86\u89e3\u5b83\u4eec\u7684\u5dee\u5f02\u3002\u8bf7\u53c2\u89c1\u5982\u4e0b\u793a\u4f8b\uff1a nebula> GO FROM \"player100\" OVER follow \\ YIELD $$.player.name AS Name, $$.player.age AS Age, \\ CASE $$.player.age \\ WHEN $$.player.age > 35 THEN \"Yes\" \\ ELSE \"No\" \\ END \\ AS Age_above_35; +---------------------+-----+--------------+ | Name | Age | Age_above_35 | +---------------------+-----+--------------+ | \"Tony Parker\" | 36 | \"No\" | +---------------------+-----+--------------+ | \"LaMarcus Aldridge\" | 33 | \"No\" | +---------------------+-----+--------------+ \u793a\u4f8b\u672c\u610f\u4e3a\u5f53\u73a9\u5bb6\u5e74\u9f84\u5927\u4e8e35\u65f6\u8f93\u51fa Yes \u3002\u4f46\u662f\u67e5\u770b\u8f93\u51fa\u7ed3\u679c\uff0c\u5e74\u9f84\u4e3a36\u65f6\u8f93\u51fa\u7684\u5374\u662f No \u3002 \u8fd9\u662f\u56e0\u4e3a\u67e5\u8be2\u4f7f\u7528\u4e86\u7b80\u5355\u5f62\u5f0f\u7684 CASE \u8868\u8fbe\u5f0f\uff0c\u6bd4\u8f83\u5bf9\u8c61\u662f $$.player.age \u548c $$.player.age > 35 \u3002\u5f53\u5e74\u9f84\u4e3a36\u65f6\uff1a $$.player.age \u7684\u503c\u4e3a 36 \uff0c\u6570\u636e\u7c7b\u578b\u4e3aint\u3002 $$.player.age > 35 \u7684\u503c\u4e3a true \uff0c\u6570\u636e\u7c7b\u578b\u4e3aboolean\u3002 \u8fd9\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u65e0\u6cd5\u5339\u914d\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u56e0\u6b64\u8fd4\u56de No \u3002","title":"Case expressions"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/#case","text":"CASE \u8868\u8fbe\u5f0f\u4f7f\u7528\u6761\u4ef6\u6765\u8fc7\u6ee4nGQL\u67e5\u8be2\u8bed\u53e5\u7684\u7ed3\u679c\uff0c\u5e38\u7528\u4e8e YIELD \u548c RETURN \u5b50\u53e5\u4e2d\u3002\u548copenCypher\u4e00\u6837\uff0cnGQL\u63d0\u4f9b\u4e24\u79cd\u5f62\u5f0f\u7684 CASE \u8868\u8fbe\u5f0f\uff1a\u7b80\u5355\u5f62\u5f0f\u548c\u901a\u7528\u5f62\u5f0f\u3002 CASE \u8868\u8fbe\u5f0f\u4f1a\u904d\u5386\u6240\u6709\u6761\u4ef6\uff0c\u5e76\u5728\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\u65f6\u505c\u6b62\u8bfb\u53d6\u540e\u7eed\u6761\u4ef6\uff0c\u7136\u540e\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\u4efb\u4f55\u6761\u4ef6\uff0c\u5c06\u901a\u8fc7 ELSE \u5b50\u53e5\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u6ca1\u6709 ELSE \u5b50\u53e5\u4e14\u4e0d\u6ee1\u8db3\u4efb\u4f55\u6761\u4ef6\uff0c\u5219\u8fd4\u56de NULL \u3002 \u4e0b\u56fe\u4e3a\u672c\u6587\u7684\u793a\u4f8b\u56fe\u3002","title":"CASE\u8868\u8fbe\u5f0f"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/#_1","text":"","title":"\u7b80\u5355\u5f62\u5f0f"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/#_2","text":"CASE <comparer> WHEN <value> THEN <result> [WHEN ...] [ELSE <default>] END \u8b66\u544a \uff1a CASE \u8868\u8fbe\u5f0f\u4e00\u5b9a\u8981\u7528 END \u7ed3\u5c3e\u3002 \u53c2\u6570 \u8bf4\u660e comparer \u7528\u4e8e\u4e0e value \u8fdb\u884c\u6bd4\u8f83\u7684\u503c\u6216\u8005\u6709\u6548\u8868\u8fbe\u5f0f\u3002 value \u548c comparer \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5339\u914d\uff0c\u5219\u6ee1\u8db3\u6b64\u6761\u4ef6\u3002 result \u5982\u679c value \u5339\u914d comparer \uff0c\u5219\u8fd4\u56de\u8be5 result \u3002 default \u5982\u679c\u6ca1\u6709\u6761\u4ef6\u5339\u914d\uff0c\u5219\u8fd4\u56de\u8be5 default \u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/#_3","text":"nebula> RETURN \\ CASE 2+3 \\ WHEN 4 THEN 0 \\ WHEN 5 THEN 1 \\ ELSE -1 \\ END \\ AS result; +--------+ | result | +--------+ | 1 | +--------+ nebula> GO FROM \"player100\" OVER follow \\ YIELD $$.player.name AS Name, \\ CASE $$.player.age > 35 \\ WHEN true THEN \"Yes\" \\ WHEN false THEN \"No\" \\ ELSE \"Nah\" \\ END \\ AS Age_above_35; +---------------------+--------------+ | Name | Age_above_35 | +---------------------+--------------+ | \"Tony Parker\" | \"Yes\" | +---------------------+--------------+ | \"LaMarcus Aldridge\" | \"No\" | +---------------------+--------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/#_4","text":"","title":"\u901a\u7528\u5f62\u5f0f"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/#_5","text":"CASE WHEN <condition> THEN <result> [WHEN ...] [ELSE <default>] END \u53c2\u6570 \u8bf4\u660e condition \u5982\u679c\u6761\u4ef6 condition \u4e3atrue\uff0c\u8868\u793a\u6ee1\u8db3\u6b64\u6761\u4ef6\u3002 result condition \u4e3atrue\uff0c\u5219\u8fd4\u56de\u6b64 result \u3002 default \u5982\u679c\u6ca1\u6709\u6761\u4ef6\u5339\u914d\uff0c\u5219\u8fd4\u56de\u8be5 default \u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/#_6","text":"nebula> YIELD \\ CASE WHEN 4 > 5 THEN 0 \\ WHEN 3+4==7 THEN 1 \\ ELSE 2 \\ END \\ AS result; +--------+ | result | +--------+ | 1 | +--------+ nebula> MATCH (v:player) WHERE v.age > 30 \\ RETURN v.name AS Name, \\ CASE \\ WHEN v.name STARTS WITH \"T\" THEN \"Yes\" \\ ELSE \"No\" \\ END \\ AS Starts_with_T; +---------------------+---------------+ | Name | Starts_with_T | +---------------------+---------------+ | \"Tim\" | \"Yes\" | +---------------------+---------------+ | \"LaMarcus Aldridge\" | \"No\" | +---------------------+---------------+ | \"Tony Parker\" | \"Yes\" | +---------------------+---------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/5.case-expressions/#_7","text":"\u4e3a\u4e86\u907f\u514d\u8bef\u7528\u7b80\u5355\u5f62\u5f0f\u548c\u901a\u7528\u5f62\u5f0f\uff0c\u60a8\u9700\u8981\u4e86\u89e3\u5b83\u4eec\u7684\u5dee\u5f02\u3002\u8bf7\u53c2\u89c1\u5982\u4e0b\u793a\u4f8b\uff1a nebula> GO FROM \"player100\" OVER follow \\ YIELD $$.player.name AS Name, $$.player.age AS Age, \\ CASE $$.player.age \\ WHEN $$.player.age > 35 THEN \"Yes\" \\ ELSE \"No\" \\ END \\ AS Age_above_35; +---------------------+-----+--------------+ | Name | Age | Age_above_35 | +---------------------+-----+--------------+ | \"Tony Parker\" | 36 | \"No\" | +---------------------+-----+--------------+ | \"LaMarcus Aldridge\" | 33 | \"No\" | +---------------------+-----+--------------+ \u793a\u4f8b\u672c\u610f\u4e3a\u5f53\u73a9\u5bb6\u5e74\u9f84\u5927\u4e8e35\u65f6\u8f93\u51fa Yes \u3002\u4f46\u662f\u67e5\u770b\u8f93\u51fa\u7ed3\u679c\uff0c\u5e74\u9f84\u4e3a36\u65f6\u8f93\u51fa\u7684\u5374\u662f No \u3002 \u8fd9\u662f\u56e0\u4e3a\u67e5\u8be2\u4f7f\u7528\u4e86\u7b80\u5355\u5f62\u5f0f\u7684 CASE \u8868\u8fbe\u5f0f\uff0c\u6bd4\u8f83\u5bf9\u8c61\u662f $$.player.age \u548c $$.player.age > 35 \u3002\u5f53\u5e74\u9f84\u4e3a36\u65f6\uff1a $$.player.age \u7684\u503c\u4e3a 36 \uff0c\u6570\u636e\u7c7b\u578b\u4e3aint\u3002 $$.player.age > 35 \u7684\u503c\u4e3a true \uff0c\u6570\u636e\u7c7b\u578b\u4e3aboolean\u3002 \u8fd9\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u65e0\u6cd5\u5339\u914d\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u56e0\u6b64\u8fd4\u56de No \u3002","title":"\u7b80\u5355\u5f62\u5f0f\u548c\u901a\u7528\u5f62\u5f0f\u7684\u533a\u522b"},{"location":"3.ngql-guide/6.functions-and-expressions/6.list/","text":"\u5217\u8868\u51fd\u6570 \u00b6 Nebula Graph\u652f\u6301\u4ee5\u4e0b\u5217\u8868\uff08List\uff09\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e keys(expr) \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5305\u542b\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u70b9\u3001\u8fb9\u6216\u6620\u5c04\u7684\u6240\u6709\u5c5e\u6027\u3002 labels(vertex) \u8fd4\u56de\u70b9\u7684\u6807\u7b7e\u5217\u8868\u3002 nodes(path) \u8fd4\u56de\u8def\u5f84\u4e2d\u6240\u6709\u70b9\u7684\u5217\u8868\u3002 range(start, end [, step]) \u8fd4\u56de [start,end] \u8303\u56f4\u5185\u56fa\u5b9a\u6b65\u957f\u7684\u5217\u8868\uff0c\u9ed8\u8ba4\u6b65\u957f step \u4e3a1\u3002 relationships(path) \u8fd4\u56de\u8def\u5f84\u4e2d\u6240\u6709\u5173\u7cfb\u7684\u5217\u8868\u3002 reverse(list) \u8fd4\u56de\u5c06\u539f\u5217\u8868\u9006\u5e8f\u6392\u5217\u7684\u65b0\u5217\u8868\u3002 tail(list) \u8fd4\u56de\u4e0d\u5305\u542b\u539f\u5217\u8868\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u65b0\u5217\u8868. head(list) \u8fd4\u56de\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 last(list) \u8fd4\u56de\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 coalesce(list) \u8fd4\u56de\u5217\u8868\u4e2d\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5143\u7d20\u3002 reduce() \u8bf7\u53c2\u89c1 reduce\u51fd\u6570 \u3002 \u8bf4\u660e \uff1a\u5982\u679c\u53c2\u6570\u4e3a NULL \uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\u3002 \u793a\u4f8b \u00b6 nebula> WITH [NULL, 4923, 'abc', 521, 487] AS ids \\ RETURN reverse(ids), tail(ids), head(ids), last(ids), coalesce(ids); +-----------------------------------+-------------------------+-----------+-----------+---------------+ | reverse(ids) | tail(ids) | head(ids) | last(ids) | coalesce(ids) | +-----------------------------------+-------------------------+-----------+-----------+---------------+ | [487, 521, \"abc\", 4923, __NULL__] | [4923, \"abc\", 521, 487] | __NULL__ | 487 | 4923 | +-----------------------------------+-------------------------+-----------+-----------+---------------+ nebula> MATCH (a:player)-[r]->() \\ WHERE id(a) == \"player100\" \\ RETURN labels(a), keys(r); +------------+----------------------------+ | labels(a) | keys(r) | +------------+----------------------------+ | [\"player\"] | [\"degree\"] | +------------+----------------------------+ | [\"player\"] | [\"degree\"] | +------------+----------------------------+ | [\"player\"] | [\"end_year\", \"start_year\"] | +------------+----------------------------+ nebula> MATCH p = (a:player)-[]->(b)-[]->(c:team) \\ WHERE a.name == \"Tim Duncan\" AND c.name == \"Spurs\" \\ RETURN nodes(p); +-----------------------------------------------------------------------------------------------------------------------------------------------+ | nodes(p) | +-----------------------------------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :player{age: 42, name: \"Tim Duncan\"}), (\"player101\" :player{age: 36, name: \"Tony Parker\"}), (\"team204\" :team{name: \"Spurs\"})] | +-----------------------------------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :player{age: 42, name: \"Tim Duncan\"}), (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}), (\"team204\" :team{name: \"Spurs\"})] | +-----------------------------------------------------------------------------------------------------------------------------------------------+ nebula> MATCH p = (a:player)-[]->(b)-[]->(c:team) WHERE a.name == \"Tim Duncan\" AND c.name == \"Spurs\" RETURN relationships(p) +-----------------------------------------------------------------------------------------------------------------------------+ | relationships(p) | +-----------------------------------------------------------------------------------------------------------------------------+ | [[:follow \"player100\"->\"player101\" @0 {degree: 95}], [:serve \"player101\"->\"team204\" @0 {end_year: 2018, start_year: 1999}]] | +-----------------------------------------------------------------------------------------------------------------------------+ | [[:follow \"player100\"->\"player125\" @0 {degree: 95}], [:serve \"player125\"->\"team204\" @0 {end_year: 2018, start_year: 2002}]] | +-----------------------------------------------------------------------------------------------------------------------------+","title":"List"},{"location":"3.ngql-guide/6.functions-and-expressions/6.list/#_1","text":"Nebula Graph\u652f\u6301\u4ee5\u4e0b\u5217\u8868\uff08List\uff09\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e keys(expr) \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5305\u542b\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u70b9\u3001\u8fb9\u6216\u6620\u5c04\u7684\u6240\u6709\u5c5e\u6027\u3002 labels(vertex) \u8fd4\u56de\u70b9\u7684\u6807\u7b7e\u5217\u8868\u3002 nodes(path) \u8fd4\u56de\u8def\u5f84\u4e2d\u6240\u6709\u70b9\u7684\u5217\u8868\u3002 range(start, end [, step]) \u8fd4\u56de [start,end] \u8303\u56f4\u5185\u56fa\u5b9a\u6b65\u957f\u7684\u5217\u8868\uff0c\u9ed8\u8ba4\u6b65\u957f step \u4e3a1\u3002 relationships(path) \u8fd4\u56de\u8def\u5f84\u4e2d\u6240\u6709\u5173\u7cfb\u7684\u5217\u8868\u3002 reverse(list) \u8fd4\u56de\u5c06\u539f\u5217\u8868\u9006\u5e8f\u6392\u5217\u7684\u65b0\u5217\u8868\u3002 tail(list) \u8fd4\u56de\u4e0d\u5305\u542b\u539f\u5217\u8868\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u65b0\u5217\u8868. head(list) \u8fd4\u56de\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 last(list) \u8fd4\u56de\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 coalesce(list) \u8fd4\u56de\u5217\u8868\u4e2d\u7b2c\u4e00\u4e2a\u975e\u7a7a\u5143\u7d20\u3002 reduce() \u8bf7\u53c2\u89c1 reduce\u51fd\u6570 \u3002 \u8bf4\u660e \uff1a\u5982\u679c\u53c2\u6570\u4e3a NULL \uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\u3002","title":"\u5217\u8868\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/6.list/#_2","text":"nebula> WITH [NULL, 4923, 'abc', 521, 487] AS ids \\ RETURN reverse(ids), tail(ids), head(ids), last(ids), coalesce(ids); +-----------------------------------+-------------------------+-----------+-----------+---------------+ | reverse(ids) | tail(ids) | head(ids) | last(ids) | coalesce(ids) | +-----------------------------------+-------------------------+-----------+-----------+---------------+ | [487, 521, \"abc\", 4923, __NULL__] | [4923, \"abc\", 521, 487] | __NULL__ | 487 | 4923 | +-----------------------------------+-------------------------+-----------+-----------+---------------+ nebula> MATCH (a:player)-[r]->() \\ WHERE id(a) == \"player100\" \\ RETURN labels(a), keys(r); +------------+----------------------------+ | labels(a) | keys(r) | +------------+----------------------------+ | [\"player\"] | [\"degree\"] | +------------+----------------------------+ | [\"player\"] | [\"degree\"] | +------------+----------------------------+ | [\"player\"] | [\"end_year\", \"start_year\"] | +------------+----------------------------+ nebula> MATCH p = (a:player)-[]->(b)-[]->(c:team) \\ WHERE a.name == \"Tim Duncan\" AND c.name == \"Spurs\" \\ RETURN nodes(p); +-----------------------------------------------------------------------------------------------------------------------------------------------+ | nodes(p) | +-----------------------------------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :player{age: 42, name: \"Tim Duncan\"}), (\"player101\" :player{age: 36, name: \"Tony Parker\"}), (\"team204\" :team{name: \"Spurs\"})] | +-----------------------------------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :player{age: 42, name: \"Tim Duncan\"}), (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}), (\"team204\" :team{name: \"Spurs\"})] | +-----------------------------------------------------------------------------------------------------------------------------------------------+ nebula> MATCH p = (a:player)-[]->(b)-[]->(c:team) WHERE a.name == \"Tim Duncan\" AND c.name == \"Spurs\" RETURN relationships(p) +-----------------------------------------------------------------------------------------------------------------------------+ | relationships(p) | +-----------------------------------------------------------------------------------------------------------------------------+ | [[:follow \"player100\"->\"player101\" @0 {degree: 95}], [:serve \"player101\"->\"team204\" @0 {end_year: 2018, start_year: 1999}]] | +-----------------------------------------------------------------------------------------------------------------------------+ | [[:follow \"player100\"->\"player125\" @0 {degree: 95}], [:serve \"player125\"->\"team204\" @0 {end_year: 2018, start_year: 2002}]] | +-----------------------------------------------------------------------------------------------------------------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/7.count/","text":"count\u51fd\u6570 \u00b6 count() \u51fd\u6570\u53ef\u4ee5\u8ba1\u6570\u6307\u5b9a\u7684\u503c\u6216\u884c\u6570\u3002 \uff08nGQL\u6269\u5c55\uff09\u60a8\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528 count() \u548c GROUP BY \u5bf9\u6307\u5b9a\u7684\u503c\u8fdb\u884c\u5206\u7ec4\u548c\u8ba1\u6570\uff0c\u518d\u4f7f\u7528 YIELD \u8fd4\u56de\u7ed3\u679c\u3002 \uff08openCypher\u65b9\u5f0f\uff09\u60a8\u53ef\u4ee5\u4f7f\u7528 count() \u5bf9\u6307\u5b9a\u7684\u503c\u8fdb\u884c\u8ba1\u6570\uff0c\u518d\u4f7f\u7528 RETURN \u8fd4\u56de\u7ed3\u679c\u3002\u4e0d\u9700\u8981\u4f7f\u7528 GROUP BY \u3002 \u8bed\u6cd5 \u00b6 count({expr | *}) count(*)\u8fd4\u56de\u603b\u884c\u6570\uff08\u5305\u62ecNULL\uff09\u3002 count(expr)\u8fd4\u56de\u6ee1\u8db3\u8868\u8fbe\u5f0f\u7684\u975e\u7a7a\u503c\u7684\u603b\u6570\u3002 count() \u548c size() \u662f\u4e0d\u540c\u7684\u3002 \u793a\u4f8b \u00b6 nebula> WITH [NULL, 1, 1, 2, 2] As a UNWIND a AS b \\ RETURN count(b), count(*), count(DISTINCT b); +----------+----------+-------------------+ | COUNT(b) | COUNT(*) | COUNT(distinct b) | +----------+----------+-------------------+ | 4 | 5 | 2 | +----------+----------+-------------------+ # \u8fd4\u56deplayer101 follow\u7684\u4eba\uff0c\u4ee5\u53cafollow player101\u7684\u4eba\uff0c\u5373\u53cc\u5411\u67e5\u8be2\u3002 nebula> GO FROM \"player101\" OVER follow BIDIRECT \\ YIELD $$.player.name AS Name \\ | GROUP BY $-.Name YIELD $-.Name, count(*); +---------------------+----------+ | $-.Name | COUNT(*) | +---------------------+----------+ | \"Dejounte Murray\" | 1 | +---------------------+----------+ | \"LaMarcus Aldridge\" | 2 | +---------------------+----------+ | \"Tim Duncan\" | 2 | +---------------------+----------+ | \"Marco Belinelli\" | 1 | +---------------------+----------+ | \"Manu Ginobili\" | 1 | +---------------------+----------+ | \"Boris Diaw\" | 1 | +---------------------+----------+ \u4e0a\u8ff0\u793a\u4f8b\u7684\u8fd4\u56de\u7ed3\u679c\u6709\u4e24\u5217\uff1a $-.Name \uff1a\u67e5\u8be2\u7ed3\u679c\u5305\u542b\u7684\u59d3\u540d\u3002 COUNT(*) \uff1a\u59d3\u540d\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u56e0\u4e3a\u6d4b\u8bd5\u6570\u636e\u5e93 nba \u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u59d3\u540d\uff0c COUNT(*) \u5217\u4e2d\u6570\u5b57 2 \u8868\u793a\u8be5\u884c\u7684\u4eba\u548c player101 \u662f\u4e92\u76f8 follow \u7684\u5173\u7cfb\u3002 # \u65b9\u6cd5\u4e00\uff1a\u7edf\u8ba1\u6570\u636e\u5e93\u4e2d\u7684\u5e74\u9f84\u5206\u5e03\u60c5\u51b5\u3002 nebula> LOOKUP ON player \\ YIELD player.age As playerage \\ | GROUP BY $-.playerage \\ YIELD $-.playerage as age, count(*) AS number \\ | ORDER BY number DESC, age DESC; +-----+--------+ | age | number | +-----+--------+ | 34 | 4 | +-----+--------+ | 33 | 4 | +-----+--------+ | 30 | 4 | +-----+--------+ | 29 | 4 | +-----+--------+ | 38 | 3 | +-----+--------+ ... # \u65b9\u6cd5\u4e8c\uff1a\u7edf\u8ba1\u6570\u636e\u5e93\u4e2d\u7684\u5e74\u9f84\u5206\u5e03\u60c5\u51b5\u3002 nebula> MATCH (n:player) \\ RETURN n.age as age, count(*) as number \\ ORDER BY number DESC, age DESC; +-----+--------+ | age | number | +-----+--------+ | 34 | 4 | +-----+--------+ | 33 | 4 | +-----+--------+ | 30 | 4 | +-----+--------+ | 29 | 4 | +-----+--------+ | 38 | 3 | +-----+--------+ ... # \u7edf\u8ba1Tim Duncan\u5173\u8054\u7684\u8fb9\u6570\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) -- (v2) \\ RETURN count(DISTINCT v2); +--------------------+ | COUNT(distinct v2) | +--------------------+ | 11 | +--------------------+ # \u591a\u8df3\u67e5\u8be2\uff0c\u7edf\u8ba1Tim Duncan\u5173\u8054\u7684\u8fb9\u6570\uff0c\u8fd4\u56de\u4e24\u5217\uff08\u4e0d\u53bb\u91cd\u548c\u53bb\u91cd\uff09\u3002 nebula> MATCH (n:player {name : \"Tim Duncan\"})-[]->(friend:player)-[]->(fof:player) \\ RETURN count(fof), count(DISTINCT fof); +------------+---------------------+ | COUNT(fof) | COUNT(distinct fof) | +------------+---------------------+ | 4 | 3 | +------------+---------------------+","title":"count()"},{"location":"3.ngql-guide/6.functions-and-expressions/7.count/#count","text":"count() \u51fd\u6570\u53ef\u4ee5\u8ba1\u6570\u6307\u5b9a\u7684\u503c\u6216\u884c\u6570\u3002 \uff08nGQL\u6269\u5c55\uff09\u60a8\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528 count() \u548c GROUP BY \u5bf9\u6307\u5b9a\u7684\u503c\u8fdb\u884c\u5206\u7ec4\u548c\u8ba1\u6570\uff0c\u518d\u4f7f\u7528 YIELD \u8fd4\u56de\u7ed3\u679c\u3002 \uff08openCypher\u65b9\u5f0f\uff09\u60a8\u53ef\u4ee5\u4f7f\u7528 count() \u5bf9\u6307\u5b9a\u7684\u503c\u8fdb\u884c\u8ba1\u6570\uff0c\u518d\u4f7f\u7528 RETURN \u8fd4\u56de\u7ed3\u679c\u3002\u4e0d\u9700\u8981\u4f7f\u7528 GROUP BY \u3002","title":"count\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/7.count/#_1","text":"count({expr | *}) count(*)\u8fd4\u56de\u603b\u884c\u6570\uff08\u5305\u62ecNULL\uff09\u3002 count(expr)\u8fd4\u56de\u6ee1\u8db3\u8868\u8fbe\u5f0f\u7684\u975e\u7a7a\u503c\u7684\u603b\u6570\u3002 count() \u548c size() \u662f\u4e0d\u540c\u7684\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/6.functions-and-expressions/7.count/#_2","text":"nebula> WITH [NULL, 1, 1, 2, 2] As a UNWIND a AS b \\ RETURN count(b), count(*), count(DISTINCT b); +----------+----------+-------------------+ | COUNT(b) | COUNT(*) | COUNT(distinct b) | +----------+----------+-------------------+ | 4 | 5 | 2 | +----------+----------+-------------------+ # \u8fd4\u56deplayer101 follow\u7684\u4eba\uff0c\u4ee5\u53cafollow player101\u7684\u4eba\uff0c\u5373\u53cc\u5411\u67e5\u8be2\u3002 nebula> GO FROM \"player101\" OVER follow BIDIRECT \\ YIELD $$.player.name AS Name \\ | GROUP BY $-.Name YIELD $-.Name, count(*); +---------------------+----------+ | $-.Name | COUNT(*) | +---------------------+----------+ | \"Dejounte Murray\" | 1 | +---------------------+----------+ | \"LaMarcus Aldridge\" | 2 | +---------------------+----------+ | \"Tim Duncan\" | 2 | +---------------------+----------+ | \"Marco Belinelli\" | 1 | +---------------------+----------+ | \"Manu Ginobili\" | 1 | +---------------------+----------+ | \"Boris Diaw\" | 1 | +---------------------+----------+ \u4e0a\u8ff0\u793a\u4f8b\u7684\u8fd4\u56de\u7ed3\u679c\u6709\u4e24\u5217\uff1a $-.Name \uff1a\u67e5\u8be2\u7ed3\u679c\u5305\u542b\u7684\u59d3\u540d\u3002 COUNT(*) \uff1a\u59d3\u540d\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u56e0\u4e3a\u6d4b\u8bd5\u6570\u636e\u5e93 nba \u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u59d3\u540d\uff0c COUNT(*) \u5217\u4e2d\u6570\u5b57 2 \u8868\u793a\u8be5\u884c\u7684\u4eba\u548c player101 \u662f\u4e92\u76f8 follow \u7684\u5173\u7cfb\u3002 # \u65b9\u6cd5\u4e00\uff1a\u7edf\u8ba1\u6570\u636e\u5e93\u4e2d\u7684\u5e74\u9f84\u5206\u5e03\u60c5\u51b5\u3002 nebula> LOOKUP ON player \\ YIELD player.age As playerage \\ | GROUP BY $-.playerage \\ YIELD $-.playerage as age, count(*) AS number \\ | ORDER BY number DESC, age DESC; +-----+--------+ | age | number | +-----+--------+ | 34 | 4 | +-----+--------+ | 33 | 4 | +-----+--------+ | 30 | 4 | +-----+--------+ | 29 | 4 | +-----+--------+ | 38 | 3 | +-----+--------+ ... # \u65b9\u6cd5\u4e8c\uff1a\u7edf\u8ba1\u6570\u636e\u5e93\u4e2d\u7684\u5e74\u9f84\u5206\u5e03\u60c5\u51b5\u3002 nebula> MATCH (n:player) \\ RETURN n.age as age, count(*) as number \\ ORDER BY number DESC, age DESC; +-----+--------+ | age | number | +-----+--------+ | 34 | 4 | +-----+--------+ | 33 | 4 | +-----+--------+ | 30 | 4 | +-----+--------+ | 29 | 4 | +-----+--------+ | 38 | 3 | +-----+--------+ ... # \u7edf\u8ba1Tim Duncan\u5173\u8054\u7684\u8fb9\u6570\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) -- (v2) \\ RETURN count(DISTINCT v2); +--------------------+ | COUNT(distinct v2) | +--------------------+ | 11 | +--------------------+ # \u591a\u8df3\u67e5\u8be2\uff0c\u7edf\u8ba1Tim Duncan\u5173\u8054\u7684\u8fb9\u6570\uff0c\u8fd4\u56de\u4e24\u5217\uff08\u4e0d\u53bb\u91cd\u548c\u53bb\u91cd\uff09\u3002 nebula> MATCH (n:player {name : \"Tim Duncan\"})-[]->(friend:player)-[]->(fof:player) \\ RETURN count(fof), count(DISTINCT fof); +------------+---------------------+ | COUNT(fof) | COUNT(distinct fof) | +------------+---------------------+ | 4 | 3 | +------------+---------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/8.predicate/","text":"\u8c13\u8bcd\u51fd\u6570 \u00b6 \u8c13\u8bcd\u51fd\u6570\u53ea\u8fd4\u56de true \u6216 false \uff0c\u901a\u5e38\u7528\u4e8e WHERE \u5b50\u53e5\u4e2d\u3002 Nebula Graph\u652f\u6301\u4ee5\u4e0b\u8c13\u8bcd\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e exists() \u5982\u679c\u6307\u5b9a\u7684\u5c5e\u6027\u5728\u70b9\u3001\u8fb9\u6216\u6620\u5c04\u4e2d\u5b58\u5728\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 any() \u5982\u679c\u6307\u5b9a\u7684\u8c13\u8bcd\u9002\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 all() \u5982\u679c\u6307\u5b9a\u7684\u8c13\u8bcd\u9002\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 none() \u5982\u679c\u6307\u5b9a\u7684\u8c13\u8bcd\u4e0d\u9002\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 single() \u5982\u679c\u6307\u5b9a\u7684\u8c13\u8bcd\u9002\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u552f\u4e00\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u8bf4\u660e \uff1a \u5982\u679c\u5217\u8868\u4e3a\u7a7a\uff0c\u6216\u8005\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56deNULL\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u5728openCypher\u4e2d\uff0c\u53ea\u5b9a\u4e49\u4e86\u51fd\u6570 exists() \uff0c\u5176\u4ed6\u51fd\u6570\u4f9d\u8d56\u5de5\u5177\u5b9e\u73b0\u3002 \u8bed\u6cd5 \u00b6 <predicate>(<variable> IN <list> WHERE <condition>) \u793a\u4f8b \u00b6 nebula> RETURN any(n IN [1, 2, 3, 4, 5, NULL] \\ WHERE n > 2) AS r; +------+ | r | +------+ | true | +------+ nebula> RETURN single(n IN range(1, 5) \\ WHERE n == 3) AS r; +------+ | r | +------+ | true | +------+ nebula> RETURN none(n IN range(1, 3) \\ WHERE n == 0) AS r; +------+ | r | +------+ | true | +------+ nebula> WITH [1, 2, 3, 4, 5, NULL] AS a \\ RETURN any(n IN a WHERE n > 2); +-------------------------+ | any(n IN a WHERE (n>2)) | +-------------------------+ | true | +-------------------------+ nebula> MATCH p = (n:player{name:\"LeBron James\"})<-[:follow]-(m) \\ RETURN nodes(p)[0].name AS n1, nodes(p)[1].name AS n2, \\ all(n IN nodes(p) WHERE n.name NOT STARTS WITH \"D\") AS b; +----------------+-------------------+-------+ | n1 | n2 | b | +----------------+-------------------+-------+ | \"LeBron James\" | \"Danny Green\" | false | +----------------+-------------------+-------+ | \"LeBron James\" | \"Dejounte Murray\" | false | +----------------+-------------------+-------+ | \"LeBron James\" | \"Chris Paul\" | true | +----------------+-------------------+-------+ | \"LeBron James\" | \"Kyrie Irving\" | true | +----------------+-------------------+-------+ | \"LeBron James\" | \"Carmelo Anthony\" | true | +----------------+-------------------+-------+ | \"LeBron James\" | \"Dwyane Wade\" | false | +----------------+-------------------+-------+ nebula> MATCH p = (n:player{name:\"LeBron James\"})-[:follow]->(m) \\ RETURN single(n IN nodes(p) WHERE n.age > 40) AS b; +------+ | b | +------+ | true | +------+ nebula> MATCH (n:player) \\ RETURN exists(n.id), n IS NOT NULL; +--------------+---------------+ | exists(n.id) | n IS NOT NULL | +--------------+---------------+ | false | true | +--------------+---------------+ ...","title":"Predicate"},{"location":"3.ngql-guide/6.functions-and-expressions/8.predicate/#_1","text":"\u8c13\u8bcd\u51fd\u6570\u53ea\u8fd4\u56de true \u6216 false \uff0c\u901a\u5e38\u7528\u4e8e WHERE \u5b50\u53e5\u4e2d\u3002 Nebula Graph\u652f\u6301\u4ee5\u4e0b\u8c13\u8bcd\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e exists() \u5982\u679c\u6307\u5b9a\u7684\u5c5e\u6027\u5728\u70b9\u3001\u8fb9\u6216\u6620\u5c04\u4e2d\u5b58\u5728\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 any() \u5982\u679c\u6307\u5b9a\u7684\u8c13\u8bcd\u9002\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 all() \u5982\u679c\u6307\u5b9a\u7684\u8c13\u8bcd\u9002\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 none() \u5982\u679c\u6307\u5b9a\u7684\u8c13\u8bcd\u4e0d\u9002\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 single() \u5982\u679c\u6307\u5b9a\u7684\u8c13\u8bcd\u9002\u7528\u4e8e\u5217\u8868\u4e2d\u7684\u552f\u4e00\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u8bf4\u660e \uff1a \u5982\u679c\u5217\u8868\u4e3a\u7a7a\uff0c\u6216\u8005\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56deNULL\u3002","title":"\u8c13\u8bcd\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/8.predicate/#opencypher","text":"\u5728openCypher\u4e2d\uff0c\u53ea\u5b9a\u4e49\u4e86\u51fd\u6570 exists() \uff0c\u5176\u4ed6\u51fd\u6570\u4f9d\u8d56\u5de5\u5177\u5b9e\u73b0\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/6.functions-and-expressions/8.predicate/#_2","text":"<predicate>(<variable> IN <list> WHERE <condition>)","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/6.functions-and-expressions/8.predicate/#_3","text":"nebula> RETURN any(n IN [1, 2, 3, 4, 5, NULL] \\ WHERE n > 2) AS r; +------+ | r | +------+ | true | +------+ nebula> RETURN single(n IN range(1, 5) \\ WHERE n == 3) AS r; +------+ | r | +------+ | true | +------+ nebula> RETURN none(n IN range(1, 3) \\ WHERE n == 0) AS r; +------+ | r | +------+ | true | +------+ nebula> WITH [1, 2, 3, 4, 5, NULL] AS a \\ RETURN any(n IN a WHERE n > 2); +-------------------------+ | any(n IN a WHERE (n>2)) | +-------------------------+ | true | +-------------------------+ nebula> MATCH p = (n:player{name:\"LeBron James\"})<-[:follow]-(m) \\ RETURN nodes(p)[0].name AS n1, nodes(p)[1].name AS n2, \\ all(n IN nodes(p) WHERE n.name NOT STARTS WITH \"D\") AS b; +----------------+-------------------+-------+ | n1 | n2 | b | +----------------+-------------------+-------+ | \"LeBron James\" | \"Danny Green\" | false | +----------------+-------------------+-------+ | \"LeBron James\" | \"Dejounte Murray\" | false | +----------------+-------------------+-------+ | \"LeBron James\" | \"Chris Paul\" | true | +----------------+-------------------+-------+ | \"LeBron James\" | \"Kyrie Irving\" | true | +----------------+-------------------+-------+ | \"LeBron James\" | \"Carmelo Anthony\" | true | +----------------+-------------------+-------+ | \"LeBron James\" | \"Dwyane Wade\" | false | +----------------+-------------------+-------+ nebula> MATCH p = (n:player{name:\"LeBron James\"})-[:follow]->(m) \\ RETURN single(n IN nodes(p) WHERE n.age > 40) AS b; +------+ | b | +------+ | true | +------+ nebula> MATCH (n:player) \\ RETURN exists(n.id), n IS NOT NULL; +--------------+---------------+ | exists(n.id) | n IS NOT NULL | +--------------+---------------+ | false | true | +--------------+---------------+ ...","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/6.functions-and-expressions/9.user-defined-functions/","text":"\u81ea\u5b9a\u4e49\u51fd\u6570 \u00b6 openCypher\u517c\u5bb9\u6027 \u00b6 Nebula Graph 2.x\u6682\u4e0d\u652f\u6301\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u4e5f\u6ca1\u6709\u76f8\u5e94\u8ba1\u5212\u3002","title":"User-defined functions"},{"location":"3.ngql-guide/6.functions-and-expressions/9.user-defined-functions/#_1","text":"","title":"\u81ea\u5b9a\u4e49\u51fd\u6570"},{"location":"3.ngql-guide/6.functions-and-expressions/9.user-defined-functions/#opencypher","text":"Nebula Graph 2.x\u6682\u4e0d\u652f\u6301\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u4e5f\u6ca1\u6709\u76f8\u5e94\u8ba1\u5212\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/7.general-query-statements/2.match/","text":"MATCH \u00b6 MATCH \u8bed\u53e5\u63d0\u4f9b\u57fa\u4e8e\u6a21\u5f0f\uff08pattern\uff09\u5339\u914d\u7684\u641c\u7d22\u529f\u80fd\u3002 \u4e00\u4e2a MATCH \u8bed\u53e5\u5b9a\u4e49\u4e86\u4e00\u4e2a \u641c\u7d22\u6a21\u5f0f \uff0c\u7528\u8be5\u6a21\u5f0f\u5339\u914d\u5b58\u50a8\u5728Nebula Graph\u4e2d\u7684\u6570\u636e\uff0c\u7136\u540e\u7528 RETURN \u5b50\u53e5\u68c0\u7d22\u6570\u636e\u3002 \u672c\u6587\u793a\u4f8b\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u5e93 nba \u8fdb\u884c\u6f14\u793a\u3002 \u8bed\u6cd5 \u00b6 \u4e0e GO \u6216 LOOKUP \u7b49\u5176\u4ed6\u67e5\u8be2\u8bed\u53e5\u76f8\u6bd4\uff0c MATCH \u7684\u8bed\u6cd5\u66f4\u7075\u6d3b\u3002 MATCH \u8bed\u6cd5\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a MATCH <pattern> [<WHERE clause>] RETURN <output> MATCH\u5de5\u4f5c\u6d41\u7a0b \u00b6 MATCH \u8bed\u53e5\u4f7f\u7528\u539f\u751f\u7d22\u5f15\u67e5\u627e\u8d77\u59cb\u70b9\uff0c\u8d77\u59cb\u70b9\u53ef\u4ee5\u5728\u6a21\u5f0f\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002\u5373\u4e00\u4e2a\u6709\u6548\u7684 MATCH \u8bed\u53e5\uff0c \u5fc5\u987b\u6709\u4e00\u4e2a\u5c5e\u6027\u3001\u6807\u7b7e\u6216\u8005\u70b9\u5df2\u7ecf\u521b\u5efa\u7d22\u5f15 \u3002\u5982\u4f55\u521b\u5efa\u7d22\u5f15\uff0c\u8bf7\u53c2\u89c1 \u521b\u5efa\u539f\u751f\u7d22\u5f15 \u3002 MATCH \u8bed\u53e5\u5728\u6a21\u5f0f\u4e2d\u641c\u7d22\uff0c\u5bfb\u627e\u5339\u914d\u7684\u8fb9\u6216\u70b9\u3002 MATCH \u8bed\u53e5\u6839\u636e RETURN \u5b50\u53e5\u68c0\u7d22\u6570\u636e\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 nGQL\u6682\u4e0d\u652f\u6301\u904d\u5386\u6240\u6709\u70b9\u548c\u8fb9\uff0c\u4f8b\u5982 MATCH (v) RETURN v \u3002 \u4f7f\u7528\u6a21\u5f0f\uff08pattern\uff09 \u00b6 \u524d\u63d0\u6761\u4ef6 \u00b6 \u8bf7\u786e\u4fdd MATCH \u8bed\u53e5\u6709\u81f3\u5c11\u4e00\u4e2a\u7d22\u5f15\u53ef\u7528\u3002\u5982\u679c\u60a8\u9700\u8981\u521b\u5efa\u7d22\u5f15\uff0c\u4f46\u662f\u5df2\u7ecf\u6709\u76f8\u5173\u7684\u70b9\u3001\u8fb9\u6216\u5c5e\u6027\uff0c\u60a8\u5fc5\u987b\u5728\u521b\u5efa\u7d22\u5f15\u540e\u91cd\u5efa\u7d22\u5f15\uff0c\u7d22\u5f15\u624d\u80fd\u751f\u6548\u3002 \u8b66\u544a \uff1a\u6b63\u786e\u4f7f\u7528\u7d22\u5f15\u53ef\u4ee5\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\uff0c\u4f46\u662f\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5199\u6027\u80fd\u5927\u5e45\u964d\u4f4e\uff08\u964d\u4f4e90%\u751a\u81f3\u66f4\u591a\uff09\u3002\u8bf7 \u4e0d\u8981\u968f\u610f \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u7d22\u5f15\uff0c\u9664\u975e\u60a8\u5f88\u6e05\u695a\u4f7f\u7528\u7d22\u5f15\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002 # \u5728\u5c5e\u6027name\u4e0a\u521b\u5efa\u7d22\u5f15\u3002 nebula> CREATE TAG INDEX name ON player(name(20)); # \u91cd\u5efa\u7d22\u5f15\u4f7f\u5176\u751f\u6548\u3002 nebula> REBUILD TAG INDEX name; +------------+ | New Job Id | +------------+ | 121 | +------------+ # \u786e\u8ba4\u91cd\u5efa\u7d22\u5f15\u6210\u529f\u3002 nebula> SHOW JOB 121; +----------------+---------------------+------------+------------+------------+ | Job Id(TaskId) | Command(Dest) | Status | Start Time | Stop Time | +----------------+---------------------+------------+------------+------------+ | 121 | \"REBUILD_TAG_INDEX\" | \"FINISHED\" | 1607073046 | 1607073046 | +----------------+---------------------+------------+------------+------------+ | 0 | \"storaged2\" | \"FINISHED\" | 1607073046 | 1607073046 | +----------------+---------------------+------------+------------+------------+ | 1 | \"storaged0\" | \"FINISHED\" | 1607073046 | 1607073046 | +----------------+---------------------+------------+------------+------------+ | 2 | \"storaged1\" | \"FINISHED\" | 1607073046 | 1607073046 | +----------------+---------------------+------------+------------+------------+ \u5339\u914d\u70b9 \u00b6 \u60a8\u53ef\u4ee5\u5728\u4e00\u5bf9\u62ec\u53f7\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u6765\u8868\u793a\u6a21\u5f0f\u4e2d\u7684\u70b9\u3002\u4f8b\u5982 (v) \u3002 \u5339\u914d\u6807\u7b7e \u00b6 \u8bf4\u660e \uff1a\u6807\u7b7e\u7684\u7d22\u5f15\u548c\u5c5e\u6027\u7684\u7d22\u5f15\u4e0d\u540c\u3002\u5982\u679c\u6807\u7b7e\u7684\u67d0\u4e2a\u5c5e\u6027\u6709\u7d22\u5f15\uff0c\u4f46\u662f\u6807\u7b7e\u672c\u8eab\u6ca1\u6709\u7d22\u5f15\uff0c\u60a8\u65e0\u6cd5\u57fa\u4e8e\u8be5\u6807\u7b7e\u6267\u884c MATCH \u8bed\u53e5\u3002 \u60a8\u53ef\u4ee5\u5728\u70b9\u7684\u53f3\u4fa7\u7528 :<tag_name> \u8868\u793a\u6a21\u5f0f\u4e2d\u7684\u6807\u7b7e\u3002 nebula> MATCH (v:player) RETURN v; +---------------------------------------------------------------+ | v | +---------------------------------------------------------------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | +---------------------------------------------------------------+ | (\"player106\" :player{age: 25, name: \"Kyle Anderson\"}) | +---------------------------------------------------------------+ | (\"player115\" :player{age: 40, name: \"Kobe Bryant\"}) | +---------------------------------------------------------------+ ... \u5339\u914d\u70b9\u7684\u5c5e\u6027 \u00b6 \u60a8\u53ef\u4ee5\u5728\u6807\u7b7e\u7684\u53f3\u4fa7\u7528 {<prop_name>: <prop_value>} \u8868\u793a\u6a21\u5f0f\u4e2d\u70b9\u7684\u5c5e\u6027\u3002 # \u4f7f\u7528\u5c5e\u6027name\u641c\u7d22\u5339\u914d\u7684\u70b9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) RETURN v; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +----------------------------------------------------+ \u4f7f\u7528 WHERE \u5b50\u53e5\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u64cd\u4f5c\uff1a nebula> MATCH (v:player) WHERE v.name == \"Tim Duncan\" RETURN v; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +----------------------------------------------------+ openCypher\u517c\u5bb9\u6027 \uff1a\u5728openCypher 9\u4e2d\uff0c = \u662f\u76f8\u7b49\u8fd0\u7b97\u7b26\uff0c\u5728nGQL\u4e2d\uff0c == \u662f\u76f8\u7b49\u8fd0\u7b97\u7b26\uff0c = \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 \u5339\u914d\u70b9ID \u00b6 \u60a8\u53ef\u4ee5\u4f7f\u7528\u70b9ID\u53bb\u5339\u914d\u70b9\u3002 id() \u51fd\u6570\u53ef\u4ee5\u68c0\u7d22\u70b9\u7684ID\u3002 nebula> MATCH (v) WHERE id(v) == 'player101' RETURN v; +---------------------------------------------------+ | v | +---------------------------------------------------+ | (player101) player.name:Tony Parker,player.age:36 | +---------------------------------------------------+ \u8981\u5339\u914d\u591a\u4e2a\u70b9\u7684ID\uff0c\u53ef\u4ee5\u7528 WHERE id(v) IN [vid_list] \u3002 nebula> MATCH (v:player { name: 'Tim Duncan' })--(v2) \\ WHERE id(v2) IN [\"player101\", \"player102\"] RETURN v2; +-----------------------------------------------------------+ | v2 | +-----------------------------------------------------------+ | (\"player101\" :player{name: \"Tony Parker\", age: 36}) | +-----------------------------------------------------------+ | (\"player102\" :player{name: \"LaMarcus Aldridge\", age: 33}) | +-----------------------------------------------------------+ | (\"player101\" :player{name: \"Tony Parker\", age: 36}) | +-----------------------------------------------------------+ \u5339\u914d\u8fde\u63a5\u7684\u70b9 \u00b6 \u60a8\u53ef\u4ee5\u4f7f\u7528 -- \u7b26\u53f7\u8868\u793a\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9\uff0c\u5e76\u5339\u914d\u8fd9\u4e9b\u8fb9\u8fde\u63a5\u7684\u70b9\u3002 \u8bf4\u660e \uff1a\u5728nGQL 1.x\u4e2d\uff0c -- \u7b26\u53f7\u7528\u4e8e\u884c\u5185\u6ce8\u91ca\uff0c\u5728nGQL 2.x\u4e2d\uff0c -- \u7b26\u53f7\u8868\u793a\u51fa\u8fb9\u6216\u5165\u8fb9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})--(v2) \\ RETURN v2.name AS Name; +---------------------+ | Name | +---------------------+ | \"Tony Parker\" | +---------------------+ | \"LaMarcus Aldridge\" | +---------------------+ | \"Marco Belinelli\" | +---------------------+ | \"Danny Green\" | +---------------------+ | \"Aron Baynes\" | +---------------------+ ... \u60a8\u53ef\u4ee5\u5728 -- \u7b26\u53f7\u4e0a\u589e\u52a0 < \u6216 > \u7b26\u53f7\u6307\u5b9a\u8fb9\u7684\u65b9\u5411\u3002 # -->\u8868\u793a\u8fb9\u4ecev\u5f00\u59cb\uff0c\u6307\u5411v2\u3002\u5bf9\u4e8e\u70b9v\u6765\u8bf4\u662f\u51fa\u8fb9\uff0c\u5bf9\u4e8e\u70b9v2\u6765\u8bf4\u662f\u5165\u8fb9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-->(v2) \\ RETURN v2.name AS Name; +-----------------+ | Name | +-----------------+ | \"Spurs\" | +-----------------+ | \"Tony Parker\" | +-----------------+ | \"Manu Ginobili\" | +-----------------+ \u5982\u679c\u9700\u8981\u6269\u5c55\u6a21\u5f0f\uff0c\u53ef\u4ee5\u589e\u52a0\u66f4\u591a\u70b9\u548c\u8fb9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-->(v2)<--(v3) \\ RETURN v3.name AS Name; +---------------------+ | Name | +---------------------+ | \"Tony Parker\" | +---------------------+ | \"Tiago Splitter\" | +---------------------+ | \"Dejounte Murray\" | +---------------------+ | \"Tony Parker\" | +---------------------+ | \"LaMarcus Aldridge\" | +---------------------+ ... \u5982\u679c\u60a8\u4e0d\u9700\u8981\u5f15\u7528\u70b9\uff0c\u53ef\u4ee5\u7701\u7565\u62ec\u53f7\u4e2d\u8868\u793a\u70b9\u7684\u53d8\u91cf\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-->()<--(v3) \\ RETURN v3.name AS Name; +---------------------+ | Name | +---------------------+ | \"Tony Parker\" | +---------------------+ | \"LaMarcus Aldridge\" | +---------------------+ | \"Rudy Gay\" | +---------------------+ | \"Danny Green\" | +---------------------+ | \"Kyle Anderson\" | +---------------------+ ... \u5339\u914d\u8def\u5f84 \u00b6 \u8fde\u63a5\u8d77\u6765\u7684\u70b9\u548c\u8fb9\u6784\u6210\u4e86\u8def\u5f84\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u547d\u540d\u8def\u5f84\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-->(v2) \\ RETURN p; +-------------------------------------------+ | p | +-------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})> | +-------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})> | +-------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:serve@0 {end_year: 2016, start_year: 1997}]->(\"team204\" :team{name: \"Spurs\"})> | +-------------------------------------------+ openCypher\u517c\u5bb9\u6027 \uff1a\u5728nGQL\u4e2d\uff0c @ \u7b26\u53f7\u8868\u793a\u8fb9\u7684rank\uff0c\u5728openCypher\u4e2d\uff0c\u6ca1\u6709rank\u6982\u5ff5\u3002 \u5339\u914d\u8fb9 \u00b6 \u9664\u4e86\u7528 -- \u3001 --> \u3001 <-- \u8868\u793a\u672a\u547d\u540d\u7684\u8fb9\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u5728\u65b9\u62ec\u53f7\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u547d\u540d\u8fb9\u3002\u4f8b\u5982 -[e]- \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e]-(v2) \\ RETURN e; +---------------------------------------------------------------------------+ | e | +---------------------------------------------------------------------------+ | [:follow \"player101\"->\"player100\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:follow \"player102\"->\"player100\" @0 {degree: 75}] | +---------------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +---------------------------------------------------------------------------+ ... \u5339\u914d\u8fb9\u7c7b\u578b\u548c\u5c5e\u6027 \u00b6 \u548c\u70b9\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u7528 :<edge_type> \u8868\u793a\u6a21\u5f0f\u4e2d\u7684\u8fb9\u7c7b\u578b\u3002\u4f8b\u5982 -[e:serve]- \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e:serve]-(v2) \\ RETURN e; +---------------------------------------------------------------------------+ | e | +---------------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +---------------------------------------------------------------------------+ \u60a8\u53ef\u4ee5\u7528 {<prop_name>: <prop_value>} \u8868\u793a\u6a21\u5f0f\u4e2d\u8fb9\u7c7b\u578b\u7684\u5c5e\u6027\u3002\u4f8b\u5982 [e:follow{likeness:95}] \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e:follow{degree:95}]->(v2) \\ RETURN e; +--------------------------------------------------------+ | e | +--------------------------------------------------------+ | [:follow \"player100\"->\"player101\" @0 {degree: 95}] | +--------------------------------------------------------+ | [:follow \"player100\"->\"player125\" @0 {degree: 95}] | +--------------------------------------------------------+ \u5339\u914d\u591a\u4e2a\u8fb9\u7c7b\u578b \u00b6 \u4f7f\u7528 | \u53ef\u4ee5\u5339\u914d\u591a\u4e2a\u8fb9\u7c7b\u578b\u3002\u4f8b\u5982 [e:follow|:serve] \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e:follow|:serve]->(v2) \\ RETURN e; +---------------------------------------------------------------------------+ | e | +---------------------------------------------------------------------------+ | [:follow \"player100\"->\"player101\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:follow \"player100\"->\"player125\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +---------------------------------------------------------------------------+ \u5339\u914d\u591a\u6761\u8fb9 \u00b6 \u60a8\u53ef\u4ee5\u6269\u5c55\u6a21\u5f0f\uff0c\u5339\u914d\u8def\u5f84\u4e2d\u7684\u591a\u6761\u8fb9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[]->(v2)<-[e:serve]-(v3) \\ RETURN v2, v3; +------------------------------------+-----------------------------------------------------------+ | v2 | v3 | +------------------------------------+-----------------------------------------------------------+ | (\"player204\" :team{name: \"Spurs\"}) | (\"player101\" :player{name: \"Tony Parker\", age: 36}) | +------------------------------------+-----------------------------------------------------------+ | (\"player204\" :team{name: \"Spurs\"}) | (\"player102\" :player{name: \"LaMarcus Aldridge\", age: 33}) | +------------------------------------+-----------------------------------------------------------+ | (\"player204\" :team{name: \"Spurs\"}) | (\"player103\" :player{age: 32, name: \"Rudy Gay\"}) | +------------------------------------+-----------------------------------------------------------+ ... \u5339\u914d\u5b9a\u957f\u8def\u5f84 \u00b6 \u60a8\u53ef\u4ee5\u5728\u6a21\u5f0f\u4e2d\u4f7f\u7528 :<edge_type>*<hop> \u5339\u914d\u5b9a\u957f\u8def\u5f84\u3002 hop \u5fc5\u987b\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow*2]->(v2) \\ RETURN DISTINCT v2 AS Friends; +-----------------------------------------------------------+ | Friends | +-----------------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +-----------------------------------------------------------+ | (\"player102\" :player{name: \"LaMarcus Aldridge\", age: 33}) | +-----------------------------------------------------------+ | (\"player125\" :player{name: \"Manu Ginobili\", age: 41}) | +-----------------------------------------------------------+ \u5982\u679c hop \u4e3a0\uff0c\u6a21\u5f0f\u4f1a\u5339\u914d\u8def\u5f84\u4e0a\u7684\u8d77\u59cb\u70b9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) -[*0]-> (v2) \\ RETURN v2; +----------------------------------------------------+ | v2 | +----------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------+ \u5339\u914d\u53d8\u957f\u8def\u5f84 \u00b6 \u60a8\u53ef\u4ee5\u5728\u6a21\u5f0f\u4e2d\u4f7f\u7528 :<edge_type>*[minHop]..<maxHop> \u5339\u914d\u53d8\u957f\u8def\u5f84\u3002 \u53c2\u6570 \u8bf4\u660e minHop \u53ef\u9009\u9879\u3002\u8868\u793a\u8def\u5f84\u7684\u6700\u5c0f\u957f\u5ea6\u3002 minHop \u5fc5\u987b\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a1\u3002 maxHop \u5fc5\u9009\u9879\u3002\u8868\u793a\u8def\u5f84\u7684\u6700\u5927\u957f\u5ea6\u3002 maxHop \u5fc5\u987b\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u6ca1\u6709\u9ed8\u8ba4\u503c\u3002 openCypher\u517c\u5bb9\u6027 \uff1a\u5728openCypher\u4e2d\uff0c maxHop \u662f\u53ef\u9009\u9879\uff0c\u9ed8\u8ba4\u4e3a\u65e0\u7a77\u5927\u3002\u5f53\u6ca1\u6709\u8bbe\u7f6e\u65f6\uff0c .. \u53ef\u4ee5\u7701\u7565\u3002\u5728nGQL\u4e2d\uff0c maxHop \u662f\u5fc5\u9009\u9879\uff0c\u800c\u4e14 .. \u4e0d\u53ef\u4ee5\u7701\u7565\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow*1..3]->(v2) \\ RETURN v2 AS Friends; +-----------------------------------------------------------+ | Friends | +-----------------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +-----------------------------------------------------------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +-----------------------------------------------------------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | +-----------------------------------------------------------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | +-----------------------------------------------------------+ \u60a8\u53ef\u4ee5\u4f7f\u7528 DISTINCT \u5173\u952e\u5b57\u805a\u5408\u91cd\u590d\u7ed3\u679c\u3002 ```ngql nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow*1..3]->(v2:player) \\ RETURN DISTINCT v2 AS Friends, count(v2); +-----------------------------------------------------------+-----------+ | Friends | COUNT(v2) | +-----------------------------------------------------------+-----------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | 3 | +-----------------------------------------------------------+-----------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | 1 | +-----------------------------------------------------------+-----------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | 4 | +-----------------------------------------------------------+-----------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | 3 | +-----------------------------------------------------------+-----------+ \u5982\u679c`minHop`\u4e3a`0`\uff0c\u6a21\u5f0f\u4f1a\u5339\u914d\u8def\u5f84\u4e0a\u7684\u8d77\u59cb\u70b9\u3002\u4e0e\u4e0a\u4e2a\u793a\u4f8b\u76f8\u6bd4\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u8bbe\u7f6e`minHop`\u4e3a`0`\uff0c\u56e0\u4e3a\u5b83\u662f\u8d77\u59cb\u70b9\uff0c\u6240\u4ee5\u7ed3\u679c\u96c6\u4e2d`\"Tim Duncan\"`\u6bd4\u4e0a\u4e2a\u793a\u4f8b\u591a\u8ba1\u7b97\u4e00\u6b21\u3002 ```ngql nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow*0..3]->(v2:player) \\ RETURN DISTINCT v2 AS Friends, count(v2); +-----------------------------------------------------------+-----------+ | Friends | COUNT(v2) | +-----------------------------------------------------------+-----------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | 3 | +-----------------------------------------------------------+-----------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | 3 | +-----------------------------------------------------------+-----------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | 1 | +-----------------------------------------------------------+-----------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | 5 | +-----------------------------------------------------------+-----------+ \u5339\u914d\u591a\u4e2a\u8fb9\u7c7b\u578b\u7684\u53d8\u957f\u8def\u5f84 \u00b6 \u60a8\u53ef\u4ee5\u5728\u53d8\u957f\u6216\u5b9a\u957f\u6a21\u5f0f\u4e2d\u6307\u5b9a\u591a\u4e2a\u8fb9\u7c7b\u578b\u3002 hop \u3001 minHop \u548c maxHop \u5bf9\u6240\u6709\u8fb9\u7c7b\u578b\u90fd\u751f\u6548\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow|serve*2]->(v2) \\ RETURN DISTINCT v2; +-----------------------------------------------------------+ | v2 | +-----------------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +-----------------------------------------------------------+ | (\"player102\" :player{name: \"LaMarcus Aldridge\", age: 33}) | +-----------------------------------------------------------+ | (\"player125\" :player{name: \"Manu Ginobili\", age: 41}) | +-----------------------------------------------------------+ | (\"player204\" :team{name: \"Spurs\"}) | +-----------------------------------------------------------+ | (\"player215\" :team{name: \"Hornets\"}) | +-----------------------------------------------------------+ \u5e38\u7528\u68c0\u7d22\u64cd\u4f5c \u00b6 \u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u4fe1\u606f \u00b6 \u4f7f\u7528 RETURN {<vertex_name> | <edge_name>} \u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u6240\u6709\u4fe1\u606f\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN v; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +----------------------------------------------------+ nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e]->(v2) \\ RETURN e; +---------------------------------------------------------------------------+ | e | +---------------------------------------------------------------------------+ | [:follow \"player100\"->\"player101\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:follow \"player100\"->\"player125\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +---------------------------------------------------------------------------+ \u68c0\u7d22\u70b9ID \u00b6 \u4f7f\u7528 id() \u51fd\u6570\u68c0\u7d22\u70b9ID\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN id(v); +-------------+ | id(v) | +-------------+ | \"player100\" | +-------------+ \u68c0\u7d22\u6807\u7b7e \u00b6 \u4f7f\u7528 labels() \u51fd\u6570\u68c0\u7d22\u70b9\u4e0a\u7684\u6807\u7b7e\u5217\u8868\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN labels(v); +------------+ | labels(v) | +------------+ | [\"player\"] | +------------+ \u68c0\u7d22\u5217\u8868 labels(v) \u4e2d\u7684\u7b2cN\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 labels(v)[n-1] \u3002\u4f8b\u5982\u4e0b\u9762\u793a\u4f8b\u4f7f\u7528 labels(v)[0] \u68c0\u7d22\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN labels(v)[0]; +--------------+ | labels(v)[0] | +--------------+ | \"player\" | +--------------+ \u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u5355\u4e2a\u5c5e\u6027 \u00b6 \u4f7f\u7528 RETURN {<vertex_name> | <edge_name>}.<property> \u68c0\u7d22\u5355\u4e2a\u5c5e\u6027\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN v.age; +-------+ | v.age | +-------+ | 42 | +-------+ \u4f7f\u7528 AS \u8bbe\u7f6e\u5c5e\u6027\u7684\u522b\u540d\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN v.age AS Age; +-----+ | Age | +-----+ | 42 | +-----+ \u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u6240\u6709\u5c5e\u6027 \u00b6 \u4f7f\u7528 properties() \u51fd\u6570\u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u6240\u6709\u5c5e\u6027\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[]->(v2) \\ RETURN properties(v2); +------------------------------------+ | properties(v2) | +------------------------------------+ | {\"name\":\"Spurs\"} | +------------------------------------+ | {\"name\":\"Tony Parker\", \"age\":36} | +------------------------------------+ | {\"age\":41, \"name\":\"Manu Ginobili\"} | +------------------------------------+ \u68c0\u7d22\u8fb9\u7c7b\u578b \u00b6 \u4f7f\u7528 type() \u51fd\u6570\u68c0\u7d22\u5339\u914d\u7684\u8fb9\u7c7b\u578b\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e]->() \\ RETURN DISTINCT type(e); +----------+ | type(e) | +----------+ | \"follow\" | +----------+ | \"serve\" | +----------+ \u68c0\u7d22\u8def\u5f84 \u00b6 \u4f7f\u7528 RETURN <path_name> \u68c0\u7d22\u5339\u914d\u8def\u5f84\u7684\u6240\u6709\u4fe1\u606f\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[*3]->() \\ RETURN p; +-------------------------------------------------------------------------------------------------+ | p | +-------------------------------------------------------------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 90}]->(\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"})-[:serve@0 {end_year: 2019, start_year: 2015}]->(\"team204\" :team{name: \"Spurs\"})> | +-------------------------------------------------------------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 90}]->(\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"})-[:serve@0 {end_year: 2015, start_year: 2006}]->(\"team203\" :team{name: \"Trail Blazers\"})> | +-------------------------------------------------------------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 90}]->(\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"})-[:follow@0 {degree: 75}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})> | +-------------------------------------------------------------------------------------------------+ ... \u68c0\u7d22\u8def\u5f84\u4e2d\u7684\u70b9 \u00b6 \u4f7f\u7528 nodes() \u51fd\u6570\u68c0\u7d22\u8def\u5f84\u4e2d\u7684\u6240\u6709\u70b9\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[]->(v2) \\ RETURN nodes(p); +---------------------------------------------------------------------------------------------------------------------+ | nodes(p) | +---------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :star{} :player{age: 42, name: \"Tim Duncan\"}), (\"player204\" :team{name: \"Spurs\"})] | +---------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :star{} :player{age: 42, name: \"Tim Duncan\"}), (\"player101\" :player{name: \"Tony Parker\", age: 36})] | +---------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :star{} :player{age: 42, name: \"Tim Duncan\"}), (\"player125\" :player{name: \"Manu Ginobili\", age: 41})] | +---------------------------------------------------------------------------------------------------------------------+ \u68c0\u7d22\u8def\u5f84\u4e2d\u7684\u8fb9 \u00b6 \u4f7f\u7528 relationships() \u51fd\u6570\u68c0\u7d22\u8def\u5f84\u4e2d\u7684\u6240\u6709\u8fb9\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[]->(v2) \\ RETURN relationships(p); +-----------------------------------------------------------------------------+ | relationships(p) | +-----------------------------------------------------------------------------+ | [[:follow \"player100\"->\"player101\" @0 {degree: 95}]] | +-----------------------------------------------------------------------------+ | [[:follow \"player100\"->\"player125\" @0 {degree: 95}]] | +-----------------------------------------------------------------------------+ | [[:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}]] | +-----------------------------------------------------------------------------+ \u68c0\u7d22\u8def\u5f84\u957f\u5ea6 \u00b6 \u4f7f\u7528 length() \u51fd\u6570\u68c0\u7d22\u8def\u5f84\u7684\u957f\u5ea6\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[*..2]->(v2) \\ RETURN p AS Paths, length(p) AS Length; +----------------------------------------------------------------------+--------+ | Paths | Length | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})-[:serve@0 {end_year: 2018, start_year: 2002}]->(\"team204\" :team{name: \"Spurs\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})-[:follow@0 {degree: 90}]->(\"player100\" :player{age: 42, name: \"Tim Duncan\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:serve@0 {end_year: 2019, start_year: 2018}]->(\"team215\" :team{name: \"Hornets\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:serve@0 {end_year: 2018, start_year: 1999}]->(\"team204\" :team{name: \"Spurs\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 90}]->(\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 95}]->(\"player100\" :player{age: 42, name: \"Tim Duncan\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:serve@0 {end_year: 2016, start_year: 1997}]->(\"team204\" :team{name: \"Spurs\"})> | 1 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})> | 1 | +----------------------------------------------------------------------+--------+","title":"Match"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#match","text":"MATCH \u8bed\u53e5\u63d0\u4f9b\u57fa\u4e8e\u6a21\u5f0f\uff08pattern\uff09\u5339\u914d\u7684\u641c\u7d22\u529f\u80fd\u3002 \u4e00\u4e2a MATCH \u8bed\u53e5\u5b9a\u4e49\u4e86\u4e00\u4e2a \u641c\u7d22\u6a21\u5f0f \uff0c\u7528\u8be5\u6a21\u5f0f\u5339\u914d\u5b58\u50a8\u5728Nebula Graph\u4e2d\u7684\u6570\u636e\uff0c\u7136\u540e\u7528 RETURN \u5b50\u53e5\u68c0\u7d22\u6570\u636e\u3002 \u672c\u6587\u793a\u4f8b\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u5e93 nba \u8fdb\u884c\u6f14\u793a\u3002","title":"MATCH"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_1","text":"\u4e0e GO \u6216 LOOKUP \u7b49\u5176\u4ed6\u67e5\u8be2\u8bed\u53e5\u76f8\u6bd4\uff0c MATCH \u7684\u8bed\u6cd5\u66f4\u7075\u6d3b\u3002 MATCH \u8bed\u6cd5\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a MATCH <pattern> [<WHERE clause>] RETURN <output>","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#match_1","text":"MATCH \u8bed\u53e5\u4f7f\u7528\u539f\u751f\u7d22\u5f15\u67e5\u627e\u8d77\u59cb\u70b9\uff0c\u8d77\u59cb\u70b9\u53ef\u4ee5\u5728\u6a21\u5f0f\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002\u5373\u4e00\u4e2a\u6709\u6548\u7684 MATCH \u8bed\u53e5\uff0c \u5fc5\u987b\u6709\u4e00\u4e2a\u5c5e\u6027\u3001\u6807\u7b7e\u6216\u8005\u70b9\u5df2\u7ecf\u521b\u5efa\u7d22\u5f15 \u3002\u5982\u4f55\u521b\u5efa\u7d22\u5f15\uff0c\u8bf7\u53c2\u89c1 \u521b\u5efa\u539f\u751f\u7d22\u5f15 \u3002 MATCH \u8bed\u53e5\u5728\u6a21\u5f0f\u4e2d\u641c\u7d22\uff0c\u5bfb\u627e\u5339\u914d\u7684\u8fb9\u6216\u70b9\u3002 MATCH \u8bed\u53e5\u6839\u636e RETURN \u5b50\u53e5\u68c0\u7d22\u6570\u636e\u3002","title":"MATCH\u5de5\u4f5c\u6d41\u7a0b"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#opencypher","text":"nGQL\u6682\u4e0d\u652f\u6301\u904d\u5386\u6240\u6709\u70b9\u548c\u8fb9\uff0c\u4f8b\u5982 MATCH (v) RETURN v \u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#pattern","text":"","title":"\u4f7f\u7528\u6a21\u5f0f\uff08pattern\uff09"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_2","text":"\u8bf7\u786e\u4fdd MATCH \u8bed\u53e5\u6709\u81f3\u5c11\u4e00\u4e2a\u7d22\u5f15\u53ef\u7528\u3002\u5982\u679c\u60a8\u9700\u8981\u521b\u5efa\u7d22\u5f15\uff0c\u4f46\u662f\u5df2\u7ecf\u6709\u76f8\u5173\u7684\u70b9\u3001\u8fb9\u6216\u5c5e\u6027\uff0c\u60a8\u5fc5\u987b\u5728\u521b\u5efa\u7d22\u5f15\u540e\u91cd\u5efa\u7d22\u5f15\uff0c\u7d22\u5f15\u624d\u80fd\u751f\u6548\u3002 \u8b66\u544a \uff1a\u6b63\u786e\u4f7f\u7528\u7d22\u5f15\u53ef\u4ee5\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\uff0c\u4f46\u662f\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5199\u6027\u80fd\u5927\u5e45\u964d\u4f4e\uff08\u964d\u4f4e90%\u751a\u81f3\u66f4\u591a\uff09\u3002\u8bf7 \u4e0d\u8981\u968f\u610f \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u7d22\u5f15\uff0c\u9664\u975e\u60a8\u5f88\u6e05\u695a\u4f7f\u7528\u7d22\u5f15\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002 # \u5728\u5c5e\u6027name\u4e0a\u521b\u5efa\u7d22\u5f15\u3002 nebula> CREATE TAG INDEX name ON player(name(20)); # \u91cd\u5efa\u7d22\u5f15\u4f7f\u5176\u751f\u6548\u3002 nebula> REBUILD TAG INDEX name; +------------+ | New Job Id | +------------+ | 121 | +------------+ # \u786e\u8ba4\u91cd\u5efa\u7d22\u5f15\u6210\u529f\u3002 nebula> SHOW JOB 121; +----------------+---------------------+------------+------------+------------+ | Job Id(TaskId) | Command(Dest) | Status | Start Time | Stop Time | +----------------+---------------------+------------+------------+------------+ | 121 | \"REBUILD_TAG_INDEX\" | \"FINISHED\" | 1607073046 | 1607073046 | +----------------+---------------------+------------+------------+------------+ | 0 | \"storaged2\" | \"FINISHED\" | 1607073046 | 1607073046 | +----------------+---------------------+------------+------------+------------+ | 1 | \"storaged0\" | \"FINISHED\" | 1607073046 | 1607073046 | +----------------+---------------------+------------+------------+------------+ | 2 | \"storaged1\" | \"FINISHED\" | 1607073046 | 1607073046 | +----------------+---------------------+------------+------------+------------+","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_3","text":"\u60a8\u53ef\u4ee5\u5728\u4e00\u5bf9\u62ec\u53f7\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u6765\u8868\u793a\u6a21\u5f0f\u4e2d\u7684\u70b9\u3002\u4f8b\u5982 (v) \u3002","title":"\u5339\u914d\u70b9"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_4","text":"\u8bf4\u660e \uff1a\u6807\u7b7e\u7684\u7d22\u5f15\u548c\u5c5e\u6027\u7684\u7d22\u5f15\u4e0d\u540c\u3002\u5982\u679c\u6807\u7b7e\u7684\u67d0\u4e2a\u5c5e\u6027\u6709\u7d22\u5f15\uff0c\u4f46\u662f\u6807\u7b7e\u672c\u8eab\u6ca1\u6709\u7d22\u5f15\uff0c\u60a8\u65e0\u6cd5\u57fa\u4e8e\u8be5\u6807\u7b7e\u6267\u884c MATCH \u8bed\u53e5\u3002 \u60a8\u53ef\u4ee5\u5728\u70b9\u7684\u53f3\u4fa7\u7528 :<tag_name> \u8868\u793a\u6a21\u5f0f\u4e2d\u7684\u6807\u7b7e\u3002 nebula> MATCH (v:player) RETURN v; +---------------------------------------------------------------+ | v | +---------------------------------------------------------------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | +---------------------------------------------------------------+ | (\"player106\" :player{age: 25, name: \"Kyle Anderson\"}) | +---------------------------------------------------------------+ | (\"player115\" :player{age: 40, name: \"Kobe Bryant\"}) | +---------------------------------------------------------------+ ...","title":"\u5339\u914d\u6807\u7b7e"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_5","text":"\u60a8\u53ef\u4ee5\u5728\u6807\u7b7e\u7684\u53f3\u4fa7\u7528 {<prop_name>: <prop_value>} \u8868\u793a\u6a21\u5f0f\u4e2d\u70b9\u7684\u5c5e\u6027\u3002 # \u4f7f\u7528\u5c5e\u6027name\u641c\u7d22\u5339\u914d\u7684\u70b9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) RETURN v; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +----------------------------------------------------+ \u4f7f\u7528 WHERE \u5b50\u53e5\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u64cd\u4f5c\uff1a nebula> MATCH (v:player) WHERE v.name == \"Tim Duncan\" RETURN v; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +----------------------------------------------------+ openCypher\u517c\u5bb9\u6027 \uff1a\u5728openCypher 9\u4e2d\uff0c = \u662f\u76f8\u7b49\u8fd0\u7b97\u7b26\uff0c\u5728nGQL\u4e2d\uff0c == \u662f\u76f8\u7b49\u8fd0\u7b97\u7b26\uff0c = \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002","title":"\u5339\u914d\u70b9\u7684\u5c5e\u6027"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#id","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528\u70b9ID\u53bb\u5339\u914d\u70b9\u3002 id() \u51fd\u6570\u53ef\u4ee5\u68c0\u7d22\u70b9\u7684ID\u3002 nebula> MATCH (v) WHERE id(v) == 'player101' RETURN v; +---------------------------------------------------+ | v | +---------------------------------------------------+ | (player101) player.name:Tony Parker,player.age:36 | +---------------------------------------------------+ \u8981\u5339\u914d\u591a\u4e2a\u70b9\u7684ID\uff0c\u53ef\u4ee5\u7528 WHERE id(v) IN [vid_list] \u3002 nebula> MATCH (v:player { name: 'Tim Duncan' })--(v2) \\ WHERE id(v2) IN [\"player101\", \"player102\"] RETURN v2; +-----------------------------------------------------------+ | v2 | +-----------------------------------------------------------+ | (\"player101\" :player{name: \"Tony Parker\", age: 36}) | +-----------------------------------------------------------+ | (\"player102\" :player{name: \"LaMarcus Aldridge\", age: 33}) | +-----------------------------------------------------------+ | (\"player101\" :player{name: \"Tony Parker\", age: 36}) | +-----------------------------------------------------------+","title":"\u5339\u914d\u70b9ID"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_6","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528 -- \u7b26\u53f7\u8868\u793a\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9\uff0c\u5e76\u5339\u914d\u8fd9\u4e9b\u8fb9\u8fde\u63a5\u7684\u70b9\u3002 \u8bf4\u660e \uff1a\u5728nGQL 1.x\u4e2d\uff0c -- \u7b26\u53f7\u7528\u4e8e\u884c\u5185\u6ce8\u91ca\uff0c\u5728nGQL 2.x\u4e2d\uff0c -- \u7b26\u53f7\u8868\u793a\u51fa\u8fb9\u6216\u5165\u8fb9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})--(v2) \\ RETURN v2.name AS Name; +---------------------+ | Name | +---------------------+ | \"Tony Parker\" | +---------------------+ | \"LaMarcus Aldridge\" | +---------------------+ | \"Marco Belinelli\" | +---------------------+ | \"Danny Green\" | +---------------------+ | \"Aron Baynes\" | +---------------------+ ... \u60a8\u53ef\u4ee5\u5728 -- \u7b26\u53f7\u4e0a\u589e\u52a0 < \u6216 > \u7b26\u53f7\u6307\u5b9a\u8fb9\u7684\u65b9\u5411\u3002 # -->\u8868\u793a\u8fb9\u4ecev\u5f00\u59cb\uff0c\u6307\u5411v2\u3002\u5bf9\u4e8e\u70b9v\u6765\u8bf4\u662f\u51fa\u8fb9\uff0c\u5bf9\u4e8e\u70b9v2\u6765\u8bf4\u662f\u5165\u8fb9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-->(v2) \\ RETURN v2.name AS Name; +-----------------+ | Name | +-----------------+ | \"Spurs\" | +-----------------+ | \"Tony Parker\" | +-----------------+ | \"Manu Ginobili\" | +-----------------+ \u5982\u679c\u9700\u8981\u6269\u5c55\u6a21\u5f0f\uff0c\u53ef\u4ee5\u589e\u52a0\u66f4\u591a\u70b9\u548c\u8fb9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-->(v2)<--(v3) \\ RETURN v3.name AS Name; +---------------------+ | Name | +---------------------+ | \"Tony Parker\" | +---------------------+ | \"Tiago Splitter\" | +---------------------+ | \"Dejounte Murray\" | +---------------------+ | \"Tony Parker\" | +---------------------+ | \"LaMarcus Aldridge\" | +---------------------+ ... \u5982\u679c\u60a8\u4e0d\u9700\u8981\u5f15\u7528\u70b9\uff0c\u53ef\u4ee5\u7701\u7565\u62ec\u53f7\u4e2d\u8868\u793a\u70b9\u7684\u53d8\u91cf\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-->()<--(v3) \\ RETURN v3.name AS Name; +---------------------+ | Name | +---------------------+ | \"Tony Parker\" | +---------------------+ | \"LaMarcus Aldridge\" | +---------------------+ | \"Rudy Gay\" | +---------------------+ | \"Danny Green\" | +---------------------+ | \"Kyle Anderson\" | +---------------------+ ...","title":"\u5339\u914d\u8fde\u63a5\u7684\u70b9"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_7","text":"\u8fde\u63a5\u8d77\u6765\u7684\u70b9\u548c\u8fb9\u6784\u6210\u4e86\u8def\u5f84\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u547d\u540d\u8def\u5f84\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-->(v2) \\ RETURN p; +-------------------------------------------+ | p | +-------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})> | +-------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})> | +-------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:serve@0 {end_year: 2016, start_year: 1997}]->(\"team204\" :team{name: \"Spurs\"})> | +-------------------------------------------+ openCypher\u517c\u5bb9\u6027 \uff1a\u5728nGQL\u4e2d\uff0c @ \u7b26\u53f7\u8868\u793a\u8fb9\u7684rank\uff0c\u5728openCypher\u4e2d\uff0c\u6ca1\u6709rank\u6982\u5ff5\u3002","title":"\u5339\u914d\u8def\u5f84"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_8","text":"\u9664\u4e86\u7528 -- \u3001 --> \u3001 <-- \u8868\u793a\u672a\u547d\u540d\u7684\u8fb9\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u5728\u65b9\u62ec\u53f7\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u53d8\u91cf\u547d\u540d\u8fb9\u3002\u4f8b\u5982 -[e]- \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e]-(v2) \\ RETURN e; +---------------------------------------------------------------------------+ | e | +---------------------------------------------------------------------------+ | [:follow \"player101\"->\"player100\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:follow \"player102\"->\"player100\" @0 {degree: 75}] | +---------------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +---------------------------------------------------------------------------+ ...","title":"\u5339\u914d\u8fb9"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_9","text":"\u548c\u70b9\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u7528 :<edge_type> \u8868\u793a\u6a21\u5f0f\u4e2d\u7684\u8fb9\u7c7b\u578b\u3002\u4f8b\u5982 -[e:serve]- \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e:serve]-(v2) \\ RETURN e; +---------------------------------------------------------------------------+ | e | +---------------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +---------------------------------------------------------------------------+ \u60a8\u53ef\u4ee5\u7528 {<prop_name>: <prop_value>} \u8868\u793a\u6a21\u5f0f\u4e2d\u8fb9\u7c7b\u578b\u7684\u5c5e\u6027\u3002\u4f8b\u5982 [e:follow{likeness:95}] \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e:follow{degree:95}]->(v2) \\ RETURN e; +--------------------------------------------------------+ | e | +--------------------------------------------------------+ | [:follow \"player100\"->\"player101\" @0 {degree: 95}] | +--------------------------------------------------------+ | [:follow \"player100\"->\"player125\" @0 {degree: 95}] | +--------------------------------------------------------+","title":"\u5339\u914d\u8fb9\u7c7b\u578b\u548c\u5c5e\u6027"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_10","text":"\u4f7f\u7528 | \u53ef\u4ee5\u5339\u914d\u591a\u4e2a\u8fb9\u7c7b\u578b\u3002\u4f8b\u5982 [e:follow|:serve] \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e:follow|:serve]->(v2) \\ RETURN e; +---------------------------------------------------------------------------+ | e | +---------------------------------------------------------------------------+ | [:follow \"player100\"->\"player101\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:follow \"player100\"->\"player125\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +---------------------------------------------------------------------------+","title":"\u5339\u914d\u591a\u4e2a\u8fb9\u7c7b\u578b"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_11","text":"\u60a8\u53ef\u4ee5\u6269\u5c55\u6a21\u5f0f\uff0c\u5339\u914d\u8def\u5f84\u4e2d\u7684\u591a\u6761\u8fb9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[]->(v2)<-[e:serve]-(v3) \\ RETURN v2, v3; +------------------------------------+-----------------------------------------------------------+ | v2 | v3 | +------------------------------------+-----------------------------------------------------------+ | (\"player204\" :team{name: \"Spurs\"}) | (\"player101\" :player{name: \"Tony Parker\", age: 36}) | +------------------------------------+-----------------------------------------------------------+ | (\"player204\" :team{name: \"Spurs\"}) | (\"player102\" :player{name: \"LaMarcus Aldridge\", age: 33}) | +------------------------------------+-----------------------------------------------------------+ | (\"player204\" :team{name: \"Spurs\"}) | (\"player103\" :player{age: 32, name: \"Rudy Gay\"}) | +------------------------------------+-----------------------------------------------------------+ ...","title":"\u5339\u914d\u591a\u6761\u8fb9"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_12","text":"\u60a8\u53ef\u4ee5\u5728\u6a21\u5f0f\u4e2d\u4f7f\u7528 :<edge_type>*<hop> \u5339\u914d\u5b9a\u957f\u8def\u5f84\u3002 hop \u5fc5\u987b\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow*2]->(v2) \\ RETURN DISTINCT v2 AS Friends; +-----------------------------------------------------------+ | Friends | +-----------------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +-----------------------------------------------------------+ | (\"player102\" :player{name: \"LaMarcus Aldridge\", age: 33}) | +-----------------------------------------------------------+ | (\"player125\" :player{name: \"Manu Ginobili\", age: 41}) | +-----------------------------------------------------------+ \u5982\u679c hop \u4e3a0\uff0c\u6a21\u5f0f\u4f1a\u5339\u914d\u8def\u5f84\u4e0a\u7684\u8d77\u59cb\u70b9\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) -[*0]-> (v2) \\ RETURN v2; +----------------------------------------------------+ | v2 | +----------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------+","title":"\u5339\u914d\u5b9a\u957f\u8def\u5f84"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_13","text":"\u60a8\u53ef\u4ee5\u5728\u6a21\u5f0f\u4e2d\u4f7f\u7528 :<edge_type>*[minHop]..<maxHop> \u5339\u914d\u53d8\u957f\u8def\u5f84\u3002 \u53c2\u6570 \u8bf4\u660e minHop \u53ef\u9009\u9879\u3002\u8868\u793a\u8def\u5f84\u7684\u6700\u5c0f\u957f\u5ea6\u3002 minHop \u5fc5\u987b\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a1\u3002 maxHop \u5fc5\u9009\u9879\u3002\u8868\u793a\u8def\u5f84\u7684\u6700\u5927\u957f\u5ea6\u3002 maxHop \u5fc5\u987b\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u6ca1\u6709\u9ed8\u8ba4\u503c\u3002 openCypher\u517c\u5bb9\u6027 \uff1a\u5728openCypher\u4e2d\uff0c maxHop \u662f\u53ef\u9009\u9879\uff0c\u9ed8\u8ba4\u4e3a\u65e0\u7a77\u5927\u3002\u5f53\u6ca1\u6709\u8bbe\u7f6e\u65f6\uff0c .. \u53ef\u4ee5\u7701\u7565\u3002\u5728nGQL\u4e2d\uff0c maxHop \u662f\u5fc5\u9009\u9879\uff0c\u800c\u4e14 .. \u4e0d\u53ef\u4ee5\u7701\u7565\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow*1..3]->(v2) \\ RETURN v2 AS Friends; +-----------------------------------------------------------+ | Friends | +-----------------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +-----------------------------------------------------------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +-----------------------------------------------------------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | +-----------------------------------------------------------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | +-----------------------------------------------------------+ \u60a8\u53ef\u4ee5\u4f7f\u7528 DISTINCT \u5173\u952e\u5b57\u805a\u5408\u91cd\u590d\u7ed3\u679c\u3002 ```ngql nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow*1..3]->(v2:player) \\ RETURN DISTINCT v2 AS Friends, count(v2); +-----------------------------------------------------------+-----------+ | Friends | COUNT(v2) | +-----------------------------------------------------------+-----------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | 3 | +-----------------------------------------------------------+-----------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | 1 | +-----------------------------------------------------------+-----------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | 4 | +-----------------------------------------------------------+-----------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | 3 | +-----------------------------------------------------------+-----------+ \u5982\u679c`minHop`\u4e3a`0`\uff0c\u6a21\u5f0f\u4f1a\u5339\u914d\u8def\u5f84\u4e0a\u7684\u8d77\u59cb\u70b9\u3002\u4e0e\u4e0a\u4e2a\u793a\u4f8b\u76f8\u6bd4\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u8bbe\u7f6e`minHop`\u4e3a`0`\uff0c\u56e0\u4e3a\u5b83\u662f\u8d77\u59cb\u70b9\uff0c\u6240\u4ee5\u7ed3\u679c\u96c6\u4e2d`\"Tim Duncan\"`\u6bd4\u4e0a\u4e2a\u793a\u4f8b\u591a\u8ba1\u7b97\u4e00\u6b21\u3002 ```ngql nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow*0..3]->(v2:player) \\ RETURN DISTINCT v2 AS Friends, count(v2); +-----------------------------------------------------------+-----------+ | Friends | COUNT(v2) | +-----------------------------------------------------------+-----------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | 3 | +-----------------------------------------------------------+-----------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | 3 | +-----------------------------------------------------------+-----------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | 1 | +-----------------------------------------------------------+-----------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | 5 | +-----------------------------------------------------------+-----------+","title":"\u5339\u914d\u53d8\u957f\u8def\u5f84"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_14","text":"\u60a8\u53ef\u4ee5\u5728\u53d8\u957f\u6216\u5b9a\u957f\u6a21\u5f0f\u4e2d\u6307\u5b9a\u591a\u4e2a\u8fb9\u7c7b\u578b\u3002 hop \u3001 minHop \u548c maxHop \u5bf9\u6240\u6709\u8fb9\u7c7b\u578b\u90fd\u751f\u6548\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e:follow|serve*2]->(v2) \\ RETURN DISTINCT v2; +-----------------------------------------------------------+ | v2 | +-----------------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +-----------------------------------------------------------+ | (\"player102\" :player{name: \"LaMarcus Aldridge\", age: 33}) | +-----------------------------------------------------------+ | (\"player125\" :player{name: \"Manu Ginobili\", age: 41}) | +-----------------------------------------------------------+ | (\"player204\" :team{name: \"Spurs\"}) | +-----------------------------------------------------------+ | (\"player215\" :team{name: \"Hornets\"}) | +-----------------------------------------------------------+","title":"\u5339\u914d\u591a\u4e2a\u8fb9\u7c7b\u578b\u7684\u53d8\u957f\u8def\u5f84"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_15","text":"","title":"\u5e38\u7528\u68c0\u7d22\u64cd\u4f5c"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_16","text":"\u4f7f\u7528 RETURN {<vertex_name> | <edge_name>} \u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u6240\u6709\u4fe1\u606f\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN v; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{name: \"Tim Duncan\", age: 42}) | +----------------------------------------------------+ nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e]->(v2) \\ RETURN e; +---------------------------------------------------------------------------+ | e | +---------------------------------------------------------------------------+ | [:follow \"player100\"->\"player101\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:follow \"player100\"->\"player125\" @0 {degree: 95}] | +---------------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +---------------------------------------------------------------------------+","title":"\u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u4fe1\u606f"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#id_1","text":"\u4f7f\u7528 id() \u51fd\u6570\u68c0\u7d22\u70b9ID\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN id(v); +-------------+ | id(v) | +-------------+ | \"player100\" | +-------------+","title":"\u68c0\u7d22\u70b9ID"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_17","text":"\u4f7f\u7528 labels() \u51fd\u6570\u68c0\u7d22\u70b9\u4e0a\u7684\u6807\u7b7e\u5217\u8868\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN labels(v); +------------+ | labels(v) | +------------+ | [\"player\"] | +------------+ \u68c0\u7d22\u5217\u8868 labels(v) \u4e2d\u7684\u7b2cN\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 labels(v)[n-1] \u3002\u4f8b\u5982\u4e0b\u9762\u793a\u4f8b\u4f7f\u7528 labels(v)[0] \u68c0\u7d22\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN labels(v)[0]; +--------------+ | labels(v)[0] | +--------------+ | \"player\" | +--------------+","title":"\u68c0\u7d22\u6807\u7b7e"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_18","text":"\u4f7f\u7528 RETURN {<vertex_name> | <edge_name>}.<property> \u68c0\u7d22\u5355\u4e2a\u5c5e\u6027\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN v.age; +-------+ | v.age | +-------+ | 42 | +-------+ \u4f7f\u7528 AS \u8bbe\u7f6e\u5c5e\u6027\u7684\u522b\u540d\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN v.age AS Age; +-----+ | Age | +-----+ | 42 | +-----+","title":"\u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u5355\u4e2a\u5c5e\u6027"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_19","text":"\u4f7f\u7528 properties() \u51fd\u6570\u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u6240\u6709\u5c5e\u6027\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[]->(v2) \\ RETURN properties(v2); +------------------------------------+ | properties(v2) | +------------------------------------+ | {\"name\":\"Spurs\"} | +------------------------------------+ | {\"name\":\"Tony Parker\", \"age\":36} | +------------------------------------+ | {\"age\":41, \"name\":\"Manu Ginobili\"} | +------------------------------------+","title":"\u68c0\u7d22\u70b9\u6216\u8fb9\u7684\u6240\u6709\u5c5e\u6027"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_20","text":"\u4f7f\u7528 type() \u51fd\u6570\u68c0\u7d22\u5339\u914d\u7684\u8fb9\u7c7b\u578b\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[e]->() \\ RETURN DISTINCT type(e); +----------+ | type(e) | +----------+ | \"follow\" | +----------+ | \"serve\" | +----------+","title":"\u68c0\u7d22\u8fb9\u7c7b\u578b"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_21","text":"\u4f7f\u7528 RETURN <path_name> \u68c0\u7d22\u5339\u914d\u8def\u5f84\u7684\u6240\u6709\u4fe1\u606f\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[*3]->() \\ RETURN p; +-------------------------------------------------------------------------------------------------+ | p | +-------------------------------------------------------------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 90}]->(\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"})-[:serve@0 {end_year: 2019, start_year: 2015}]->(\"team204\" :team{name: \"Spurs\"})> | +-------------------------------------------------------------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 90}]->(\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"})-[:serve@0 {end_year: 2015, start_year: 2006}]->(\"team203\" :team{name: \"Trail Blazers\"})> | +-------------------------------------------------------------------------------------------------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 90}]->(\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"})-[:follow@0 {degree: 75}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})> | +-------------------------------------------------------------------------------------------------+ ...","title":"\u68c0\u7d22\u8def\u5f84"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_22","text":"\u4f7f\u7528 nodes() \u51fd\u6570\u68c0\u7d22\u8def\u5f84\u4e2d\u7684\u6240\u6709\u70b9\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[]->(v2) \\ RETURN nodes(p); +---------------------------------------------------------------------------------------------------------------------+ | nodes(p) | +---------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :star{} :player{age: 42, name: \"Tim Duncan\"}), (\"player204\" :team{name: \"Spurs\"})] | +---------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :star{} :player{age: 42, name: \"Tim Duncan\"}), (\"player101\" :player{name: \"Tony Parker\", age: 36})] | +---------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :star{} :player{age: 42, name: \"Tim Duncan\"}), (\"player125\" :player{name: \"Manu Ginobili\", age: 41})] | +---------------------------------------------------------------------------------------------------------------------+","title":"\u68c0\u7d22\u8def\u5f84\u4e2d\u7684\u70b9"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_23","text":"\u4f7f\u7528 relationships() \u51fd\u6570\u68c0\u7d22\u8def\u5f84\u4e2d\u7684\u6240\u6709\u8fb9\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[]->(v2) \\ RETURN relationships(p); +-----------------------------------------------------------------------------+ | relationships(p) | +-----------------------------------------------------------------------------+ | [[:follow \"player100\"->\"player101\" @0 {degree: 95}]] | +-----------------------------------------------------------------------------+ | [[:follow \"player100\"->\"player125\" @0 {degree: 95}]] | +-----------------------------------------------------------------------------+ | [[:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}]] | +-----------------------------------------------------------------------------+","title":"\u68c0\u7d22\u8def\u5f84\u4e2d\u7684\u8fb9"},{"location":"3.ngql-guide/7.general-query-statements/2.match/#_24","text":"\u4f7f\u7528 length() \u51fd\u6570\u68c0\u7d22\u8def\u5f84\u7684\u957f\u5ea6\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})-[*..2]->(v2) \\ RETURN p AS Paths, length(p) AS Length; +----------------------------------------------------------------------+--------+ | Paths | Length | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})-[:serve@0 {end_year: 2018, start_year: 2002}]->(\"team204\" :team{name: \"Spurs\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})-[:follow@0 {degree: 90}]->(\"player100\" :player{age: 42, name: \"Tim Duncan\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:serve@0 {end_year: 2019, start_year: 2018}]->(\"team215\" :team{name: \"Hornets\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:serve@0 {end_year: 2018, start_year: 1999}]->(\"team204\" :team{name: \"Spurs\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 90}]->(\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player101\" :player{age: 36, name: \"Tony Parker\"})-[:follow@0 {degree: 95}]->(\"player100\" :player{age: 42, name: \"Tim Duncan\"})> | 2 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:serve@0 {end_year: 2016, start_year: 1997}]->(\"team204\" :team{name: \"Spurs\"})> | 1 | +----------------------------------------------------------------------+--------+ | <(\"player100\" :player{age: 42, name: \"Tim Duncan\"})-[:follow@0 {degree: 95}]->(\"player125\" :player{age: 41, name: \"Manu Ginobili\"})> | 1 | +----------------------------------------------------------------------+--------+","title":"\u68c0\u7d22\u8def\u5f84\u957f\u5ea6"},{"location":"3.ngql-guide/7.general-query-statements/3.go/","text":"GO \u00b6 GO \u7528\u6307\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\u904d\u5386\u56fe\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u8bed\u6cd5 \u00b6 GO [[<M> TO] <N> STEPS ] FROM <vertex_list> OVER <edge_type_list> [{REVERSELY | BIDIRECT}] [ WHERE <expression> [ {AND | OR} expression ...]) ] [YIELD [DISTINCT] <return_list>] [| ORDER BY <expression> [{ASC | DESC}]] [| LIMIT [<offset_value>,] <number_rows>] GO [[<M> TO] <N> STEPS ] FROM <vertex_list> OVER <edge_type_list> [{REVERSELY | BIDIRECT}] [ WHERE <expression> [ {AND | OR} expression ...]) ] [| GROUP BY {col_name | expr | position} YIELD <col_name>] <vertex_list> ::= <vid> [, <vid> ...] <edge_type_list> ::= edge_type [, edge_type ...] | * <return_list> ::= <col_name> [AS <col_alias>] [, <col_name> [AS <col_alias>] ...] <N> STEPS \uff1a\u6307\u5b9a\u8df3\u6570\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u8df3\u6570\uff0c\u9ed8\u8ba4\u503c N \u4e3a 1 \u3002\u5982\u679c N \u4e3a 0 \uff0cNebula Graph\u4e0d\u4f1a\u68c0\u7d22\u4efb\u4f55\u8fb9\u3002 M TO N STEPS \uff1a\u904d\u5386 M~N \u8df3\u7684\u8fb9\u3002\u5982\u679c M \u4e3a 0 \uff0c\u8f93\u51fa\u7ed3\u679c\u548c M \u4e3a 1 \u76f8\u540c\uff0c\u5373 GO 0 TO 2 \u548c GO 1 TO 2 \u662f\u76f8\u540c\u7684\u3002 <vertex_list> \uff1a\u7528\u9017\u53f7\u5206\u9694\u7684\u70b9ID\u5217\u8868\uff0c\u6216\u7279\u6b8a\u7684\u5f15\u7528\u7b26 $-.id \u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u7ba1\u9053\u7b26 \u3002 <edge_type_list> \uff1a\u904d\u5386\u7684\u8fb9\u7c7b\u578b\u5217\u8868\u3002 REVERSELY | BIDIRECT \uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u68c0\u7d22\u7684\u662f <vertex_list> \u7684\u51fa\u8fb9\uff0c REVERSELY \u8868\u793a\u53cd\u5411\uff0c\u5373\u68c0\u7d22\u5165\u8fb9\uff0c BIDIRECT \u8868\u793a\u53cc\u5411\uff0c\u5373\u68c0\u7d22\u51fa\u8fb9\u548c\u5165\u8fb9\u3002 WHERE <expression> \uff1a\u6307\u5b9a\u904d\u5386\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u60a8\u53ef\u4ee5\u5728\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u548c\u8fb9\u4f7f\u7528 WHERE \u5b50\u53e5\uff0c\u8fd8\u53ef\u4ee5\u7ed3\u5408 AND \u3001 OR \u3001 NOT \u4e00\u8d77\u4f7f\u7528\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 WHERE \u3002 \u8bf4\u660e \uff1a\u904d\u5386\u591a\u4e2a\u8fb9\u7c7b\u578b\u65f6\uff0c WHERE \u5b50\u53e5\u6709\u4e00\u4e9b\u9650\u5236\u3002\u4f8b\u5982\u4e0d\u652f\u6301 WHERE edge1.prop1 > edge2.prop2 \u3002 YIELD [DISTINCT] <return_list> \uff1a\u6307\u5b9a\u8f93\u51fa\u7ed3\u679c\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 YIELD \u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u9ed8\u8ba4\u8fd4\u56de\u76ee\u7684\u70b9ID\u3002 ORDER BY \uff1a\u6307\u5b9a\u8f93\u51fa\u7ed3\u679c\u7684\u6392\u5e8f\u89c4\u5219\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 ORDER BY \u3002 \u8bf4\u660e \uff1a\u6ca1\u6709\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u4e0d\u662f\u56fa\u5b9a\u7684\u3002 LIMIT \uff1a\u9650\u5236\u8f93\u51fa\u7ed3\u679c\u7684\u884c\u6570\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 LIMIT \u3002 GROUP BY \uff1a\u6839\u636e\u6307\u5b9a\u5c5e\u6027\u7684\u503c\u5c06\u8f93\u51fa\u5206\u7ec4\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 GROUP BY \u3002 \u793a\u4f8b \u00b6 # \u8fd4\u56deplayer102\u6240\u5c5e\u961f\u4f0d\u3002 nebula> GO FROM \"player102\" OVER serve; +------------+ | serve._dst | +------------+ | \"team203\" | +------------+ | \"team204\" | +------------+ # \u8fd4\u56de\u8ddd\u79bbplayer102\u4e24\u8df3\u7684\u670b\u53cb\u3002 nebula> GO 2 STEPS FROM \"player102\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+ ... # \u6dfb\u52a0\u8fc7\u6ee4\u6761\u4ef6\u3002 nebula> GO FROM \"player100\", \"player102\" OVER serve \\ WHERE serve.start_year > 1995 \\ YIELD DISTINCT $$.team.name AS team_name, serve.start_year AS start_year, $^.player.name AS player_name; +-----------------+------------+---------------------+ | team_name | start_year | player_name | +-----------------+------------+---------------------+ | \"Spurs\" | 1997 | \"Tim Duncan\" | +-----------------+------------+---------------------+ | \"Trail Blazers\" | 2006 | \"LaMarcus Aldridge\" | +-----------------+------------+---------------------+ | \"Spurs\" | 2015 | \"LaMarcus Aldridge\" | +-----------------+------------+---------------------+ # \u904d\u5386\u591a\u4e2a\u8fb9\u7c7b\u578b\u3002\u5c5e\u6027\u6ca1\u6709\u503c\u65f6\uff0c\u4f1a\u663e\u793a__EMPTY__\u3002 nebula> GO FROM \"player100\" OVER follow, serve \\ YIELD follow.degree, serve.start_year; +---------------+------------------+ | follow.degree | serve.start_year | +---------------+------------------+ | 95 | __EMPTY__ | +---------------+------------------+ | 95 | __EMPTY__ | +---------------+------------------+ | __EMPTY__ | 1997 | +---------------+------------------+ # \u8fd4\u56deplayer100\u7684\u5165\u8fb9\u3002 nebula> GO FROM \"player100\" OVER follow REVERSELY \\ YIELD follow._dst AS destination; +-------------+ | destination | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ ... # \u8be5MATCH\u67e5\u8be2\u4e0e\u4e0a\u4e00\u4e2aGO\u67e5\u8be2\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002 nebula> MATCH (v)<-[e:follow]- (v2) WHERE id(v) == 'player100' \\ RETURN id(v2) AS destination; +-------------+ | destination | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ ... # \u67e5\u8be2player100\u7684\u670b\u53cb\u548c\u670b\u53cb\u6240\u5c5e\u961f\u4f0d\u3002 nebula> GO FROM \"player100\" OVER follow REVERSELY \\ YIELD follow._dst AS id | \\ GO FROM $-.id OVER serve \\ WHERE $^.player.age > 20 \\ YIELD $^.player.name AS FriendOf, $$.team.name AS Team; +---------------------+-----------------+ | FriendOf | Team | +---------------------+-----------------+ | \"Tony Parker\" | \"Spurs\" | +---------------------+-----------------+ | \"Tony Parker\" | \"Hornets\" | +---------------------+-----------------+ ... # \u8be5MATCH\u67e5\u8be2\u4e0e\u4e0a\u4e00\u4e2aGO\u67e5\u8be2\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002 nebula> MATCH (v)<-[e:follow]- (v2)-[e2:serve]->(v3) \\ WHERE id(v) == 'player100' \\ RETURN v2.name AS FriendOf, v3.name AS Team; +---------------------+-----------------+ | FriendOf | Team | +---------------------+-----------------+ | \"Tony Parker\" | \"Spurs\" | +---------------------+-----------------+ | \"Tony Parker\" | \"Hornets\" | +---------------------+-----------------+ ... # \u8fd4\u56deplayer102\u7684\u51fa\u8fb9\u548c\u5165\u8fb9\u3002 nebula> GO FROM \"player102\" OVER follow BIDIRECT \\ YIELD follow._dst AS both; +-------------+ | both | +-------------+ | \"player100\" | +-------------+ | \"player101\" | +-------------+ ... # \u8be5MATCH\u67e5\u8be2\u4e0e\u4e0a\u4e00\u4e2aGO\u67e5\u8be2\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002 nebula> MATCH (v) -[e:follow]-(v2) \\ WHERE id(v)== \"player102\" \\ RETURN id(v2) AS both; +-------------+ | both | +-------------+ | \"player101\" | +-------------+ | \"player103\" | +-------------+ ... # \u67e5\u8be2player100 1~2\u8df3\u5185\u7684\u670b\u53cb\u3002 nebula> GO 1 TO 2 STEPS FROM \"player100\" OVER follow \\ YIELD follow._dst AS destination; +-------------+ | destination | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+ ... # \u8be5MATCH\u67e5\u8be2\u4e0e\u4e0a\u4e00\u4e2aGO\u67e5\u8be2\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002 nebula> MATCH (v) -[e:follow*1..2]->(v2) \\ WHERE id(v) == \"player100\" \\ RETURN id(v2) AS destination; +-------------+ | destination | +-------------+ | \"player100\" | +-------------+ | \"player102\" | +-------------+ # \u6839\u636e\u5e74\u9f84\u5206\u7ec4\u3002 nebula> GO 2 STEPS FROM \"player100\" OVER follow \\ YIELD follow._src AS src, follow._dst AS dst, $$.player.age AS age \\ | GROUP BY $-.dst \\ YIELD $-.dst AS dst, collect_set($-.src) AS src, collect($-.age) AS age +-------------+----------------------------+----------+ | dst | src | age | +-------------+----------------------------+----------+ | \"player125\" | [\"player101\"] | [41] | +-------------+----------------------------+----------+ | \"player100\" | [\"player125\", \"player101\"] | [42, 42] | +-------------+----------------------------+----------+ | \"player102\" | [\"player101\"] | [33] | +-------------+----------------------------+----------+ # \u5206\u7ec4\u5e76\u9650\u5236\u8f93\u51fa\u7ed3\u679c\u7684\u884c\u6570\u3002 nebula> $a = GO FROM \"player100\" OVER follow YIELD follow._src AS src, follow._dst AS dst; \\ GO 2 STEPS FROM $a.dst OVER follow \\ YIELD $a.src AS src, $a.dst, follow._src, follow._dst \\ | ORDER BY $-.src | OFFSET 1 LIMIT 2; +-------------+-------------+-------------+-------------+ | src | $a.dst | follow._src | follow._dst | +-------------+-------------+-------------+-------------+ | \"player100\" | \"player125\" | \"player100\" | \"player101\" | +-------------+-------------+-------------+-------------+ | \"player100\" | \"player101\" | \"player100\" | \"player125\" | +-------------+-------------+-------------+-------------+","title":"GO"},{"location":"3.ngql-guide/7.general-query-statements/3.go/#go","text":"GO \u7528\u6307\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\u904d\u5386\u56fe\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002","title":"GO"},{"location":"3.ngql-guide/7.general-query-statements/3.go/#opencypher","text":"\u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/7.general-query-statements/3.go/#_1","text":"GO [[<M> TO] <N> STEPS ] FROM <vertex_list> OVER <edge_type_list> [{REVERSELY | BIDIRECT}] [ WHERE <expression> [ {AND | OR} expression ...]) ] [YIELD [DISTINCT] <return_list>] [| ORDER BY <expression> [{ASC | DESC}]] [| LIMIT [<offset_value>,] <number_rows>] GO [[<M> TO] <N> STEPS ] FROM <vertex_list> OVER <edge_type_list> [{REVERSELY | BIDIRECT}] [ WHERE <expression> [ {AND | OR} expression ...]) ] [| GROUP BY {col_name | expr | position} YIELD <col_name>] <vertex_list> ::= <vid> [, <vid> ...] <edge_type_list> ::= edge_type [, edge_type ...] | * <return_list> ::= <col_name> [AS <col_alias>] [, <col_name> [AS <col_alias>] ...] <N> STEPS \uff1a\u6307\u5b9a\u8df3\u6570\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u8df3\u6570\uff0c\u9ed8\u8ba4\u503c N \u4e3a 1 \u3002\u5982\u679c N \u4e3a 0 \uff0cNebula Graph\u4e0d\u4f1a\u68c0\u7d22\u4efb\u4f55\u8fb9\u3002 M TO N STEPS \uff1a\u904d\u5386 M~N \u8df3\u7684\u8fb9\u3002\u5982\u679c M \u4e3a 0 \uff0c\u8f93\u51fa\u7ed3\u679c\u548c M \u4e3a 1 \u76f8\u540c\uff0c\u5373 GO 0 TO 2 \u548c GO 1 TO 2 \u662f\u76f8\u540c\u7684\u3002 <vertex_list> \uff1a\u7528\u9017\u53f7\u5206\u9694\u7684\u70b9ID\u5217\u8868\uff0c\u6216\u7279\u6b8a\u7684\u5f15\u7528\u7b26 $-.id \u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u7ba1\u9053\u7b26 \u3002 <edge_type_list> \uff1a\u904d\u5386\u7684\u8fb9\u7c7b\u578b\u5217\u8868\u3002 REVERSELY | BIDIRECT \uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u68c0\u7d22\u7684\u662f <vertex_list> \u7684\u51fa\u8fb9\uff0c REVERSELY \u8868\u793a\u53cd\u5411\uff0c\u5373\u68c0\u7d22\u5165\u8fb9\uff0c BIDIRECT \u8868\u793a\u53cc\u5411\uff0c\u5373\u68c0\u7d22\u51fa\u8fb9\u548c\u5165\u8fb9\u3002 WHERE <expression> \uff1a\u6307\u5b9a\u904d\u5386\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u60a8\u53ef\u4ee5\u5728\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u548c\u8fb9\u4f7f\u7528 WHERE \u5b50\u53e5\uff0c\u8fd8\u53ef\u4ee5\u7ed3\u5408 AND \u3001 OR \u3001 NOT \u4e00\u8d77\u4f7f\u7528\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 WHERE \u3002 \u8bf4\u660e \uff1a\u904d\u5386\u591a\u4e2a\u8fb9\u7c7b\u578b\u65f6\uff0c WHERE \u5b50\u53e5\u6709\u4e00\u4e9b\u9650\u5236\u3002\u4f8b\u5982\u4e0d\u652f\u6301 WHERE edge1.prop1 > edge2.prop2 \u3002 YIELD [DISTINCT] <return_list> \uff1a\u6307\u5b9a\u8f93\u51fa\u7ed3\u679c\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 YIELD \u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u9ed8\u8ba4\u8fd4\u56de\u76ee\u7684\u70b9ID\u3002 ORDER BY \uff1a\u6307\u5b9a\u8f93\u51fa\u7ed3\u679c\u7684\u6392\u5e8f\u89c4\u5219\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 ORDER BY \u3002 \u8bf4\u660e \uff1a\u6ca1\u6709\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u4e0d\u662f\u56fa\u5b9a\u7684\u3002 LIMIT \uff1a\u9650\u5236\u8f93\u51fa\u7ed3\u679c\u7684\u884c\u6570\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 LIMIT \u3002 GROUP BY \uff1a\u6839\u636e\u6307\u5b9a\u5c5e\u6027\u7684\u503c\u5c06\u8f93\u51fa\u5206\u7ec4\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 GROUP BY \u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/3.go/#_2","text":"# \u8fd4\u56deplayer102\u6240\u5c5e\u961f\u4f0d\u3002 nebula> GO FROM \"player102\" OVER serve; +------------+ | serve._dst | +------------+ | \"team203\" | +------------+ | \"team204\" | +------------+ # \u8fd4\u56de\u8ddd\u79bbplayer102\u4e24\u8df3\u7684\u670b\u53cb\u3002 nebula> GO 2 STEPS FROM \"player102\" OVER follow; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+ ... # \u6dfb\u52a0\u8fc7\u6ee4\u6761\u4ef6\u3002 nebula> GO FROM \"player100\", \"player102\" OVER serve \\ WHERE serve.start_year > 1995 \\ YIELD DISTINCT $$.team.name AS team_name, serve.start_year AS start_year, $^.player.name AS player_name; +-----------------+------------+---------------------+ | team_name | start_year | player_name | +-----------------+------------+---------------------+ | \"Spurs\" | 1997 | \"Tim Duncan\" | +-----------------+------------+---------------------+ | \"Trail Blazers\" | 2006 | \"LaMarcus Aldridge\" | +-----------------+------------+---------------------+ | \"Spurs\" | 2015 | \"LaMarcus Aldridge\" | +-----------------+------------+---------------------+ # \u904d\u5386\u591a\u4e2a\u8fb9\u7c7b\u578b\u3002\u5c5e\u6027\u6ca1\u6709\u503c\u65f6\uff0c\u4f1a\u663e\u793a__EMPTY__\u3002 nebula> GO FROM \"player100\" OVER follow, serve \\ YIELD follow.degree, serve.start_year; +---------------+------------------+ | follow.degree | serve.start_year | +---------------+------------------+ | 95 | __EMPTY__ | +---------------+------------------+ | 95 | __EMPTY__ | +---------------+------------------+ | __EMPTY__ | 1997 | +---------------+------------------+ # \u8fd4\u56deplayer100\u7684\u5165\u8fb9\u3002 nebula> GO FROM \"player100\" OVER follow REVERSELY \\ YIELD follow._dst AS destination; +-------------+ | destination | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ ... # \u8be5MATCH\u67e5\u8be2\u4e0e\u4e0a\u4e00\u4e2aGO\u67e5\u8be2\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002 nebula> MATCH (v)<-[e:follow]- (v2) WHERE id(v) == 'player100' \\ RETURN id(v2) AS destination; +-------------+ | destination | +-------------+ | \"player101\" | +-------------+ | \"player102\" | +-------------+ ... # \u67e5\u8be2player100\u7684\u670b\u53cb\u548c\u670b\u53cb\u6240\u5c5e\u961f\u4f0d\u3002 nebula> GO FROM \"player100\" OVER follow REVERSELY \\ YIELD follow._dst AS id | \\ GO FROM $-.id OVER serve \\ WHERE $^.player.age > 20 \\ YIELD $^.player.name AS FriendOf, $$.team.name AS Team; +---------------------+-----------------+ | FriendOf | Team | +---------------------+-----------------+ | \"Tony Parker\" | \"Spurs\" | +---------------------+-----------------+ | \"Tony Parker\" | \"Hornets\" | +---------------------+-----------------+ ... # \u8be5MATCH\u67e5\u8be2\u4e0e\u4e0a\u4e00\u4e2aGO\u67e5\u8be2\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002 nebula> MATCH (v)<-[e:follow]- (v2)-[e2:serve]->(v3) \\ WHERE id(v) == 'player100' \\ RETURN v2.name AS FriendOf, v3.name AS Team; +---------------------+-----------------+ | FriendOf | Team | +---------------------+-----------------+ | \"Tony Parker\" | \"Spurs\" | +---------------------+-----------------+ | \"Tony Parker\" | \"Hornets\" | +---------------------+-----------------+ ... # \u8fd4\u56deplayer102\u7684\u51fa\u8fb9\u548c\u5165\u8fb9\u3002 nebula> GO FROM \"player102\" OVER follow BIDIRECT \\ YIELD follow._dst AS both; +-------------+ | both | +-------------+ | \"player100\" | +-------------+ | \"player101\" | +-------------+ ... # \u8be5MATCH\u67e5\u8be2\u4e0e\u4e0a\u4e00\u4e2aGO\u67e5\u8be2\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002 nebula> MATCH (v) -[e:follow]-(v2) \\ WHERE id(v)== \"player102\" \\ RETURN id(v2) AS both; +-------------+ | both | +-------------+ | \"player101\" | +-------------+ | \"player103\" | +-------------+ ... # \u67e5\u8be2player100 1~2\u8df3\u5185\u7684\u670b\u53cb\u3002 nebula> GO 1 TO 2 STEPS FROM \"player100\" OVER follow \\ YIELD follow._dst AS destination; +-------------+ | destination | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+ ... # \u8be5MATCH\u67e5\u8be2\u4e0e\u4e0a\u4e00\u4e2aGO\u67e5\u8be2\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002 nebula> MATCH (v) -[e:follow*1..2]->(v2) \\ WHERE id(v) == \"player100\" \\ RETURN id(v2) AS destination; +-------------+ | destination | +-------------+ | \"player100\" | +-------------+ | \"player102\" | +-------------+ # \u6839\u636e\u5e74\u9f84\u5206\u7ec4\u3002 nebula> GO 2 STEPS FROM \"player100\" OVER follow \\ YIELD follow._src AS src, follow._dst AS dst, $$.player.age AS age \\ | GROUP BY $-.dst \\ YIELD $-.dst AS dst, collect_set($-.src) AS src, collect($-.age) AS age +-------------+----------------------------+----------+ | dst | src | age | +-------------+----------------------------+----------+ | \"player125\" | [\"player101\"] | [41] | +-------------+----------------------------+----------+ | \"player100\" | [\"player125\", \"player101\"] | [42, 42] | +-------------+----------------------------+----------+ | \"player102\" | [\"player101\"] | [33] | +-------------+----------------------------+----------+ # \u5206\u7ec4\u5e76\u9650\u5236\u8f93\u51fa\u7ed3\u679c\u7684\u884c\u6570\u3002 nebula> $a = GO FROM \"player100\" OVER follow YIELD follow._src AS src, follow._dst AS dst; \\ GO 2 STEPS FROM $a.dst OVER follow \\ YIELD $a.src AS src, $a.dst, follow._src, follow._dst \\ | ORDER BY $-.src | OFFSET 1 LIMIT 2; +-------------+-------------+-------------+-------------+ | src | $a.dst | follow._src | follow._dst | +-------------+-------------+-------------+-------------+ | \"player100\" | \"player125\" | \"player100\" | \"player101\" | +-------------+-------------+-------------+-------------+ | \"player100\" | \"player101\" | \"player100\" | \"player125\" | +-------------+-------------+-------------+-------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/","text":"FETCH \u00b6 FETCH \u53ef\u4ee5\u83b7\u53d6\u6307\u5b9a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u503c\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u83b7\u53d6\u70b9\u7684\u5c5e\u6027\u503c \u00b6 \u8bed\u6cd5 \u00b6 FETCH PROP ON {<tag_name>[, tag_name ...] | *} <vid> [, vid ...] [YIELD <output>] \u53c2\u6570 \u8bf4\u660e tag_name \u6807\u7b7e\u540d\u79f0\u3002 * \u8868\u793a\u5f53\u524d\u56fe\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u6807\u7b7e\u3002 vid \u70b9ID\u3002 output \u6307\u5b9a\u8981\u8fd4\u56de\u7684\u4fe1\u606f\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 YIELD \u3002\u5982\u679c\u6ca1\u6709 YIELD \u5b50\u53e5\uff0c\u5c06\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u4fe1\u606f\u3002 \u57fa\u4e8e\u6807\u7b7e\u83b7\u53d6\u70b9\u7684\u5c5e\u6027\u503c \u00b6 \u5728 FETCH \u8bed\u53e5\u4e2d\u6307\u5b9a\u6807\u7b7e\u83b7\u53d6\u5bf9\u5e94\u70b9\u7684\u5c5e\u6027\u503c\u3002 nebula> FETCH PROP ON player \"player100\"; +----------------------------------------------------+ | vertices_ | +----------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------+ \u83b7\u53d6\u70b9\u7684\u6307\u5b9a\u5c5e\u6027\u503c \u00b6 \u4f7f\u7528 YIELD \u5b50\u53e5\u6307\u5b9a\u8fd4\u56de\u7684\u5c5e\u6027\u3002 nebula> FETCH PROP ON player \"player100\" \\ YIELD player.name; +-------------+--------------+ | VertexID | player.name | +-------------+--------------+ | \"player100\" | \"Tim Duncan\" | +-------------+--------------+ \u83b7\u53d6\u591a\u4e2a\u70b9\u7684\u5c5e\u6027\u503c \u00b6 \u6307\u5b9a\u591a\u4e2a\u70b9ID\u83b7\u53d6\u591a\u4e2a\u70b9\u7684\u5c5e\u6027\u503c\uff0c\u70b9\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 nebula> FETCH PROP ON player \"player101\", \"player102\", \"player103\"; +-----------------------------------------------------------+ | vertices_ | +-----------------------------------------------------------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +-----------------------------------------------------------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | +-----------------------------------------------------------+ | (\"player103\" :player{age: 32, name: \"Rudy Gay\"}) | +-----------------------------------------------------------+ \u57fa\u4e8e\u591a\u4e2a\u6807\u7b7e\u83b7\u53d6\u70b9\u7684\u5c5e\u6027\u503c \u00b6 \u5728 FETCH \u8bed\u53e5\u4e2d\u6307\u5b9a\u591a\u4e2a\u6807\u7b7e\u83b7\u53d6\u5c5e\u6027\u503c\u3002\u6807\u7b7e\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 # \u521b\u5efa\u65b0\u6807\u7b7et1\u3002 nebula> CREATE TAG t1(a string, b int); # \u4e3a\u70b9player100\u6dfb\u52a0\u6807\u7b7et1\u3002 nebula> INSERT VERTEX t1(a, b) VALUE \"player100\":(\"Hello\", 100); # \u57fa\u4e8e\u6807\u7b7eplayer\u548ct1\u83b7\u53d6\u70b9player100\u4e0a\u7684\u5c5e\u6027\u503c\u3002 nebula> FETCH PROP ON player, t1 \"player100\"; +----------------------------------------------------------------------------+ | vertices_ | +----------------------------------------------------------------------------+ | (\"player100\" :t1{a: \"Hello\", b: 100} :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------------------------------+ \u60a8\u53ef\u4ee5\u5728 FETCH \u8bed\u53e5\u4e2d\u7ec4\u5408\u591a\u4e2a\u6807\u7b7e\u548c\u591a\u4e2a\u70b9\u3002 ```ngql nebula> FETCH PROP ON player, t1 \"player100\", \"player103\"; +----------------------------------------------------------------------------+ | vertices_ | +----------------------------------------------------------------------------+ | (\"player100\" :t1{a: \"Hello\", b: 100} :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------------------------------+ | (\"player103\" :player{age: 32, name: \"Rudy Gay\"}) | +----------------------------------------------------------------------------+ ### \u83b7\u53d6\u70b9\u4e0a\u6240\u6709\u5c5e\u6027\u503c \u5728`FETCH`\u8bed\u53e5\u4e2d\u4f7f\u7528`*`\u83b7\u53d6\u70b9\u4e0a\u6240\u6709\u5c5e\u6027\u503c\u3002 ```ngql nebula> FETCH PROP ON * \"player100\", \"player106\", \"team200\"; +----------------------------------------------------------------------------+ | vertices_ | +----------------------------------------------------------------------------+ | (\"player106\" :player{age: 25, name: \"Kyle Anderson\"}) | +----------------------------------------------------------------------------+ | (\"team200\" :team{name: \"Warriors\"}) | +----------------------------------------------------------------------------+ | (\"player100\" :t1{a: \"Hello\", b: 100} :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------------------------------+ \u83b7\u53d6\u8fb9\u7684\u5c5e\u6027\u503c \u00b6 \u8bed\u6cd5 \u00b6 FETCH PROP ON <edge_type> <src_vid> -> <dst_vid>[@<rank>] [, <src_vid> -> <dst_vid> ...] [YIELD <output>] \u53c2\u6570 \u8bf4\u660e edge_type \u8fb9\u7c7b\u578b\u540d\u79f0\u3002 src_vid \u8d77\u59cb\u70b9ID\uff0c\u8868\u793a\u8fb9\u7684\u8d77\u70b9\u3002 dst_vid \u76ee\u7684\u70b9ID\uff0c\u8868\u793a\u8fb9\u7684\u7ec8\u70b9\u3002 rank \u8fb9\u7684rank\u3002\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a 0 \u3002\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u3001\u8fb9\u7c7b\u578b\u548crank\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u6761\u8fb9\u3002 output \u6307\u5b9a\u8981\u8fd4\u56de\u7684\u4fe1\u606f\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 YIELD \u3002\u5982\u679c\u6ca1\u6709 YIELD \u5b50\u53e5\uff0c\u5c06\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u4fe1\u606f\u3002 \u83b7\u53d6\u8fb9\u7684\u6240\u6709\u5c5e\u6027\u503c \u00b6 # \u83b7\u53d6\u8fde\u63a5player100\u548cteam204\u7684\u8fb9serve\u7684\u6240\u6709\u5c5e\u6027\u503c\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\"; +-----------------------------------------------------------------------+ | edges_ | +-----------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +-----------------------------------------------------------------------+ \u83b7\u53d6\u8fb9\u7684\u6307\u5b9a\u5c5e\u6027\u503c \u00b6 \u4f7f\u7528 YIELD \u5b50\u53e5\u6307\u5b9a\u8fd4\u56de\u7684\u5c5e\u6027\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\" \\ YIELD serve.start_year; +-------------+------------+-------------+------------------+ | serve._src | serve._dst | serve._rank | serve.start_year | +-------------+------------+-------------+------------------+ | \"player100\" | \"team204\" | 0 | 1997 | +-------------+------------+-------------+------------------+ \u83b7\u53d6\u591a\u6761\u8fb9\u7684\u5c5e\u6027\u503c \u00b6 \u6307\u5b9a\u591a\u4e2a\u8fb9\u6a21\u5f0f( <src_vid> -> <dst_vid>[@<rank>] )\u83b7\u53d6\u591a\u4e2a\u8fb9\u7684\u5c5e\u6027\u503c\u3002\u6a21\u5f0f\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\", \"player133\" -> \"team202\"; +-----------------------------------------------------------------------+ | edges_ | +-----------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +-----------------------------------------------------------------------+ | [:serve \"player133\"->\"team202\" @0 {end_year: 2011, start_year: 2002}] | +-----------------------------------------------------------------------+ \u57fa\u4e8erank\u83b7\u53d6\u5c5e\u6027\u503c \u00b6 \u5982\u679c\u6709\u591a\u6761\u8fb9\uff0c\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u548c\u8fb9\u7c7b\u578b\u90fd\u76f8\u540c\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9arank\u83b7\u53d6\u6b63\u786e\u7684\u8fb9\u5c5e\u6027\u503c\u3002 # \u63d2\u5165\u4e0d\u540c\u5c5e\u6027\u503c\u3001\u4e0d\u540crank\u7684\u8fb9\u3002 nebula> insert edge serve(start_year,end_year) \\ values \"player100\"->\"team204\"@1:(1998, 2017); nebula> insert edge serve(start_year,end_year) \\ values \"player100\"->\"team204\"@2:(1990, 2018); # \u9ed8\u8ba4\u8fd4\u56derank\u4e3a0\u7684\u8fb9\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\"; +-----------------------------------------------------------------------+ | edges_ | +-----------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +-----------------------------------------------------------------------+ # \u8981\u83b7\u53d6rank\u4e0d\u4e3a0\u7684\u8fb9\uff0c\u8bf7\u5728FETCH\u8bed\u53e5\u4e2d\u8bbe\u7f6erank\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\"@1; +-----------------------------------------------------------------------+ | edges_ | +-----------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @1 {end_year: 2017, start_year: 1998}] | +-----------------------------------------------------------------------+ \u590d\u5408\u8bed\u53e5\u4e2d\u4f7f\u7528FETCH \u00b6 \u5c06 FETCH \u4e0enGQL\u6269\u5c55\u7ed3\u5408\u4f7f\u7528\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982\u548c GO \u4e00\u8d77\u3002 # \u8fd4\u56de\u4ece\u70b9player101\u5f00\u59cb\u7684follow\u8fb9\u7684degree\u503c\u3002 nebula> GO FROM \"player101\" OVER follow \\ YIELD follow._src AS s, follow._dst AS d \\ | FETCH PROP ON follow $-.s -> $-.d \\ YIELD follow.degree; +-------------+-------------+--------------+---------------+ | follow._src | follow._dst | follow._rank | follow.degree | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player100\" | 0 | 95 | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player102\" | 0 | 90 | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player125\" | 0 | 95 | +-------------+-------------+--------------+---------------+ \u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u53d8\u91cf\u6784\u5efa\u7c7b\u4f3c\u7684\u67e5\u8be2\u3002 nebula> $var = GO FROM \"player101\" OVER follow \\ YIELD follow._src AS s, follow._dst AS d; \\ FETCH PROP ON follow $var.s -> $var.d \\ YIELD follow.degree; +-------------+-------------+--------------+---------------+ | follow._src | follow._dst | follow._rank | follow.degree | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player100\" | 0 | 95 | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player102\" | 0 | 90 | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player125\" | 0 | 95 | +-------------+-------------+--------------+---------------+ \u66f4\u591a\u590d\u5408\u8bed\u53e5\u7684\u8be6\u60c5\uff0c\u8bf7\u53c2\u89c1 \u590d\u5408\u67e5\u8be2\uff08\u5b50\u53e5\u7ed3\u6784\uff09 \u3002","title":"FETCH"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#fetch","text":"FETCH \u53ef\u4ee5\u83b7\u53d6\u6307\u5b9a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u503c\u3002","title":"FETCH"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#opencypher","text":"\u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_1","text":"","title":"\u83b7\u53d6\u70b9\u7684\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_2","text":"FETCH PROP ON {<tag_name>[, tag_name ...] | *} <vid> [, vid ...] [YIELD <output>] \u53c2\u6570 \u8bf4\u660e tag_name \u6807\u7b7e\u540d\u79f0\u3002 * \u8868\u793a\u5f53\u524d\u56fe\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u6807\u7b7e\u3002 vid \u70b9ID\u3002 output \u6307\u5b9a\u8981\u8fd4\u56de\u7684\u4fe1\u606f\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 YIELD \u3002\u5982\u679c\u6ca1\u6709 YIELD \u5b50\u53e5\uff0c\u5c06\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u4fe1\u606f\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_3","text":"\u5728 FETCH \u8bed\u53e5\u4e2d\u6307\u5b9a\u6807\u7b7e\u83b7\u53d6\u5bf9\u5e94\u70b9\u7684\u5c5e\u6027\u503c\u3002 nebula> FETCH PROP ON player \"player100\"; +----------------------------------------------------+ | vertices_ | +----------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------+","title":"\u57fa\u4e8e\u6807\u7b7e\u83b7\u53d6\u70b9\u7684\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_4","text":"\u4f7f\u7528 YIELD \u5b50\u53e5\u6307\u5b9a\u8fd4\u56de\u7684\u5c5e\u6027\u3002 nebula> FETCH PROP ON player \"player100\" \\ YIELD player.name; +-------------+--------------+ | VertexID | player.name | +-------------+--------------+ | \"player100\" | \"Tim Duncan\" | +-------------+--------------+","title":"\u83b7\u53d6\u70b9\u7684\u6307\u5b9a\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_5","text":"\u6307\u5b9a\u591a\u4e2a\u70b9ID\u83b7\u53d6\u591a\u4e2a\u70b9\u7684\u5c5e\u6027\u503c\uff0c\u70b9\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 nebula> FETCH PROP ON player \"player101\", \"player102\", \"player103\"; +-----------------------------------------------------------+ | vertices_ | +-----------------------------------------------------------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +-----------------------------------------------------------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | +-----------------------------------------------------------+ | (\"player103\" :player{age: 32, name: \"Rudy Gay\"}) | +-----------------------------------------------------------+","title":"\u83b7\u53d6\u591a\u4e2a\u70b9\u7684\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_6","text":"\u5728 FETCH \u8bed\u53e5\u4e2d\u6307\u5b9a\u591a\u4e2a\u6807\u7b7e\u83b7\u53d6\u5c5e\u6027\u503c\u3002\u6807\u7b7e\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 # \u521b\u5efa\u65b0\u6807\u7b7et1\u3002 nebula> CREATE TAG t1(a string, b int); # \u4e3a\u70b9player100\u6dfb\u52a0\u6807\u7b7et1\u3002 nebula> INSERT VERTEX t1(a, b) VALUE \"player100\":(\"Hello\", 100); # \u57fa\u4e8e\u6807\u7b7eplayer\u548ct1\u83b7\u53d6\u70b9player100\u4e0a\u7684\u5c5e\u6027\u503c\u3002 nebula> FETCH PROP ON player, t1 \"player100\"; +----------------------------------------------------------------------------+ | vertices_ | +----------------------------------------------------------------------------+ | (\"player100\" :t1{a: \"Hello\", b: 100} :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------------------------------+ \u60a8\u53ef\u4ee5\u5728 FETCH \u8bed\u53e5\u4e2d\u7ec4\u5408\u591a\u4e2a\u6807\u7b7e\u548c\u591a\u4e2a\u70b9\u3002 ```ngql nebula> FETCH PROP ON player, t1 \"player100\", \"player103\"; +----------------------------------------------------------------------------+ | vertices_ | +----------------------------------------------------------------------------+ | (\"player100\" :t1{a: \"Hello\", b: 100} :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------------------------------+ | (\"player103\" :player{age: 32, name: \"Rudy Gay\"}) | +----------------------------------------------------------------------------+ ### \u83b7\u53d6\u70b9\u4e0a\u6240\u6709\u5c5e\u6027\u503c \u5728`FETCH`\u8bed\u53e5\u4e2d\u4f7f\u7528`*`\u83b7\u53d6\u70b9\u4e0a\u6240\u6709\u5c5e\u6027\u503c\u3002 ```ngql nebula> FETCH PROP ON * \"player100\", \"player106\", \"team200\"; +----------------------------------------------------------------------------+ | vertices_ | +----------------------------------------------------------------------------+ | (\"player106\" :player{age: 25, name: \"Kyle Anderson\"}) | +----------------------------------------------------------------------------+ | (\"team200\" :team{name: \"Warriors\"}) | +----------------------------------------------------------------------------+ | (\"player100\" :t1{a: \"Hello\", b: 100} :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------------------------------+","title":"\u57fa\u4e8e\u591a\u4e2a\u6807\u7b7e\u83b7\u53d6\u70b9\u7684\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_7","text":"","title":"\u83b7\u53d6\u8fb9\u7684\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_8","text":"FETCH PROP ON <edge_type> <src_vid> -> <dst_vid>[@<rank>] [, <src_vid> -> <dst_vid> ...] [YIELD <output>] \u53c2\u6570 \u8bf4\u660e edge_type \u8fb9\u7c7b\u578b\u540d\u79f0\u3002 src_vid \u8d77\u59cb\u70b9ID\uff0c\u8868\u793a\u8fb9\u7684\u8d77\u70b9\u3002 dst_vid \u76ee\u7684\u70b9ID\uff0c\u8868\u793a\u8fb9\u7684\u7ec8\u70b9\u3002 rank \u8fb9\u7684rank\u3002\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a 0 \u3002\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u3001\u8fb9\u7c7b\u578b\u548crank\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u6761\u8fb9\u3002 output \u6307\u5b9a\u8981\u8fd4\u56de\u7684\u4fe1\u606f\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 YIELD \u3002\u5982\u679c\u6ca1\u6709 YIELD \u5b50\u53e5\uff0c\u5c06\u8fd4\u56de\u6240\u6709\u5339\u914d\u7684\u4fe1\u606f\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_9","text":"# \u83b7\u53d6\u8fde\u63a5player100\u548cteam204\u7684\u8fb9serve\u7684\u6240\u6709\u5c5e\u6027\u503c\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\"; +-----------------------------------------------------------------------+ | edges_ | +-----------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +-----------------------------------------------------------------------+","title":"\u83b7\u53d6\u8fb9\u7684\u6240\u6709\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_10","text":"\u4f7f\u7528 YIELD \u5b50\u53e5\u6307\u5b9a\u8fd4\u56de\u7684\u5c5e\u6027\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\" \\ YIELD serve.start_year; +-------------+------------+-------------+------------------+ | serve._src | serve._dst | serve._rank | serve.start_year | +-------------+------------+-------------+------------------+ | \"player100\" | \"team204\" | 0 | 1997 | +-------------+------------+-------------+------------------+","title":"\u83b7\u53d6\u8fb9\u7684\u6307\u5b9a\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#_11","text":"\u6307\u5b9a\u591a\u4e2a\u8fb9\u6a21\u5f0f( <src_vid> -> <dst_vid>[@<rank>] )\u83b7\u53d6\u591a\u4e2a\u8fb9\u7684\u5c5e\u6027\u503c\u3002\u6a21\u5f0f\u4e4b\u95f4\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\", \"player133\" -> \"team202\"; +-----------------------------------------------------------------------+ | edges_ | +-----------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +-----------------------------------------------------------------------+ | [:serve \"player133\"->\"team202\" @0 {end_year: 2011, start_year: 2002}] | +-----------------------------------------------------------------------+","title":"\u83b7\u53d6\u591a\u6761\u8fb9\u7684\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#rank","text":"\u5982\u679c\u6709\u591a\u6761\u8fb9\uff0c\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u548c\u8fb9\u7c7b\u578b\u90fd\u76f8\u540c\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9arank\u83b7\u53d6\u6b63\u786e\u7684\u8fb9\u5c5e\u6027\u503c\u3002 # \u63d2\u5165\u4e0d\u540c\u5c5e\u6027\u503c\u3001\u4e0d\u540crank\u7684\u8fb9\u3002 nebula> insert edge serve(start_year,end_year) \\ values \"player100\"->\"team204\"@1:(1998, 2017); nebula> insert edge serve(start_year,end_year) \\ values \"player100\"->\"team204\"@2:(1990, 2018); # \u9ed8\u8ba4\u8fd4\u56derank\u4e3a0\u7684\u8fb9\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\"; +-----------------------------------------------------------------------+ | edges_ | +-----------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | +-----------------------------------------------------------------------+ # \u8981\u83b7\u53d6rank\u4e0d\u4e3a0\u7684\u8fb9\uff0c\u8bf7\u5728FETCH\u8bed\u53e5\u4e2d\u8bbe\u7f6erank\u3002 nebula> FETCH PROP ON serve \"player100\" -> \"team204\"@1; +-----------------------------------------------------------------------+ | edges_ | +-----------------------------------------------------------------------+ | [:serve \"player100\"->\"team204\" @1 {end_year: 2017, start_year: 1998}] | +-----------------------------------------------------------------------+","title":"\u57fa\u4e8erank\u83b7\u53d6\u5c5e\u6027\u503c"},{"location":"3.ngql-guide/7.general-query-statements/4.fetch/#fetch_1","text":"\u5c06 FETCH \u4e0enGQL\u6269\u5c55\u7ed3\u5408\u4f7f\u7528\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982\u548c GO \u4e00\u8d77\u3002 # \u8fd4\u56de\u4ece\u70b9player101\u5f00\u59cb\u7684follow\u8fb9\u7684degree\u503c\u3002 nebula> GO FROM \"player101\" OVER follow \\ YIELD follow._src AS s, follow._dst AS d \\ | FETCH PROP ON follow $-.s -> $-.d \\ YIELD follow.degree; +-------------+-------------+--------------+---------------+ | follow._src | follow._dst | follow._rank | follow.degree | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player100\" | 0 | 95 | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player102\" | 0 | 90 | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player125\" | 0 | 95 | +-------------+-------------+--------------+---------------+ \u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u53d8\u91cf\u6784\u5efa\u7c7b\u4f3c\u7684\u67e5\u8be2\u3002 nebula> $var = GO FROM \"player101\" OVER follow \\ YIELD follow._src AS s, follow._dst AS d; \\ FETCH PROP ON follow $var.s -> $var.d \\ YIELD follow.degree; +-------------+-------------+--------------+---------------+ | follow._src | follow._dst | follow._rank | follow.degree | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player100\" | 0 | 95 | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player102\" | 0 | 90 | +-------------+-------------+--------------+---------------+ | \"player101\" | \"player125\" | 0 | 95 | +-------------+-------------+--------------+---------------+ \u66f4\u591a\u590d\u5408\u8bed\u53e5\u7684\u8be6\u60c5\uff0c\u8bf7\u53c2\u89c1 \u590d\u5408\u67e5\u8be2\uff08\u5b50\u53e5\u7ed3\u6784\uff09 \u3002","title":"\u590d\u5408\u8bed\u53e5\u4e2d\u4f7f\u7528FETCH"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/","text":"LOOKUP \u00b6 LOOKUP \u6839\u636e\u7d22\u5f15\u904d\u5386\u6570\u636e\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 LOOKUP \u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a \u6839\u636e WHERE \u5b50\u53e5\u641c\u7d22\u7279\u5b9a\u6570\u636e\u3002 \u901a\u8fc7\u6807\u7b7e\u5217\u51fa\u70b9: \u68c0\u7d22\u6307\u5b9a\u6807\u7b7e\u7684\u6240\u6709\u70b9ID\u3002 \u901a\u8fc7\u8fb9\u7c7b\u578b\u5217\u51fa\u8fb9\uff1a\u68c0\u7d22\u6307\u5b9a\u8fb9\u7c7b\u578b\u7684\u6240\u6709\u8fb9\u7684\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u548crank\u3002 \u8ba1\u6570\u6307\u5b9a\u6807\u7b7e\u7684\u70b9\u6216\u6307\u5b9a\u8fb9\u7c7b\u578b\u7684\u8fb9\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u8bf7\u786e\u4fdd LOOKUP \u8bed\u53e5\u6709\u81f3\u5c11\u4e00\u4e2a\u7d22\u5f15\u53ef\u7528\u3002\u5982\u679c\u60a8\u9700\u8981\u521b\u5efa\u7d22\u5f15\uff0c\u4f46\u662f\u5df2\u7ecf\u6709\u76f8\u5173\u7684\u70b9\u3001\u8fb9\u6216\u5c5e\u6027\uff0c\u60a8\u5fc5\u987b\u5728\u521b\u5efa\u7d22\u5f15\u540e\u91cd\u5efa\u7d22\u5f15\uff0c\u7d22\u5f15\u624d\u80fd\u751f\u6548\u3002 \u8b66\u544a \uff1a\u6b63\u786e\u4f7f\u7528\u7d22\u5f15\u53ef\u4ee5\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\uff0c\u4f46\u662f\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5199\u6027\u80fd\u5927\u5e45\u964d\u4f4e\uff08\u964d\u4f4e90%\u751a\u81f3\u66f4\u591a\uff09\u3002\u8bf7\u4e0d\u8981\u968f\u610f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u7d22\u5f15\uff0c\u9664\u975e\u60a8\u5f88\u6e05\u695a\u4f7f\u7528\u7d22\u5f15\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002 \u8bed\u6cd5 \u00b6 LOOKUP ON {<vertex_tag> | <edge_type>} [WHERE <expression> [AND <expression> ...]] [YIELD <return_list>]; <return_list> <prop_name> [AS <col_alias>] [, <prop_name> [AS <prop_alias>] ...]; WHERE <expression> \uff1a\u6307\u5b9a\u904d\u5386\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u7ed3\u5408AND\u3001OR\u4e00\u8d77\u4f7f\u7528\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 WHERE \u3002 YIELD <return_list> \uff1a\u6307\u5b9a\u8981\u8fd4\u56de\u7684\u7ed3\u679c\u548c\u683c\u5f0f. \u5982\u679c\u53ea\u6709 WHERE \u5b50\u53e5\uff0c\u6ca1\u6709 YIELD \u5b50\u53e5: LOOKUP \u6807\u7b7e\u65f6\uff0c\u8fd4\u56de\u70b9ID\u3002 LOOKUP \u8fb9\u7c7b\u578b\u65f6\uff0c\u8fd4\u56de\u8d77\u59cb\u70b9ID\u3001\u76ee\u7684\u70b9ID\u548crank\u3002 WHERE\u8bed\u53e5\u9650\u5236 \u00b6 \u5728 LOOKUP \u8bed\u53e5\u4e2d\u4f7f\u7528 WHERE \u5b50\u53e5\uff0c\u4e0d\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a $- \u548c $^ \u3002 \u5728\u5173\u7cfb\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4e0d\u652f\u6301\u8fd0\u7b97\u7b26\u4e24\u8fb9\u90fd\u6709\u5b57\u6bb5\u540d\uff0c\u4f8b\u5982 tagName.prop1> tagName.prop2 \u3002 \u4e0d\u652f\u6301\u8fd0\u7b97\u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u8868\u8fbe\u5f0f\u4e2d\u5d4c\u5957AliasProp\u8868\u8fbe\u5f0f\u3002 \u5b57\u7b26\u4e32\u7c7b\u578b\u7d22\u5f15\u4e0d\u652f\u6301\u8303\u56f4\u626b\u63cf\u3002 \u4e0d\u652f\u6301 OR \u548c XOR \u8fd0\u7b97\u7b26\u3002 \u68c0\u7d22\u70b9 \u00b6 \u8fd4\u56de\u6807\u7b7e\u4e3a player \u4e14 name \u4e3a Tony Parker \u7684\u70b9\u3002 nebula> CREATE TAG INDEX index_player ON player(name(30), age); nebula> REBUILD TAG INDEX index_player; +------------+ | New Job Id | +------------+ | 15 | +------------+ nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\"; ============ | VertexID | ============ | 101 | ------------ nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\" \\ YIELD player.name, player.age; ======================================= | VertexID | player.name | player.age | ======================================= | 101 | Tony Parker | 36 | --------------------------------------- nebula> LOOKUP ON player WHERE player.name == \"Kobe Bryant\" YIELD player.name AS name \\ | GO FROM $-.VertexID OVER serve \\ YIELD $-.name, serve.start_year, serve.end_year, $$.team.name; ================================================================== | $-.name | serve.start_year | serve.end_year | $$.team.name | ================================================================== | Kobe Bryant | 1996 | 2016 | Lakers | ------------------------------------------------------------------ \u68c0\u7d22\u8fb9 \u00b6 \u8fd4\u56de\u8fb9\u7c7b\u578b\u4e3a follow \u4e14 degree \u4e3a 90 \u7684\u8fb9\u3002 nebula> CREATE EDGE INDEX index_follow ON follow(degree); nebula> REBUILD EDGE INDEX index_follow; +------------+ | New Job Id | +------------+ | 62 | +------------+ nebula> LOOKUP ON follow WHERE follow.degree == 90; ============================= | SrcVID | DstVID | Ranking | ============================= | 100 | 106 | 0 | ----------------------------- nebula> LOOKUP ON follow WHERE follow.degree == 90 YIELD follow.degree; ============================================= | SrcVID | DstVID | Ranking | follow.degree | ============================================= | 100 | 106 | 0 | 90 | --------------------------------------------- nebula> LOOKUP ON follow WHERE follow.degree == 60 YIELD follow.degree AS Degree \\ | GO FROM $-.DstVID OVER serve \\ YIELD $-.DstVID, serve.start_year, serve.end_year, $$.team.name; ================================================================ | $-.DstVID | serve.start_year | serve.end_year | $$.team.name | ================================================================ | 105 | 2010 | 2018 | Spurs | ---------------------------------------------------------------- | 105 | 2009 | 2010 | Cavaliers | ---------------------------------------------------------------- | 105 | 2018 | 2019 | Raptors | ---------------------------------------------------------------- \u901a\u8fc7\u6807\u7b7e\u5217\u51fa\u70b9/\u901a\u8fc7\u8fb9\u7c7b\u578b\u5217\u51fa\u8fb9 \u00b6 \u5982\u679c\u9700\u8981\u901a\u8fc7\u6807\u7b7e\u5217\u51fa\u70b9\uff0c\u6216\u901a\u8fc7\u8fb9\u7c7b\u578b\u5217\u51fa\u8fb9\uff0c\u5219\u6807\u7b7e\u3001\u8fb9\u7c7b\u578b\u6216\u5c5e\u6027\u4e0a\u5fc5\u987b\u6709\u81f3\u5c11\u4e00\u4e2a\u7d22\u5f15\u3002 \u4f8b\u5982\u4e00\u4e2a\u6807\u7b7e player \u6709\u4e24\u4e2a\u5c5e\u6027 name \u548c age \uff0c\u4e3a\u4e86\u904d\u5386\u6240\u6709\u5305\u542b\u6807\u7b7e player \u7684\u70b9ID\uff0c\u6807\u7b7e player \u3001\u5c5e\u6027 name \u6216\u5c5e\u6027 age \u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u7d22\u5f15\u3002 \u68c0\u7d22\u6240\u6709\u6807\u8bb0\u4e3a player \u7684\u70b9ID\u3002 nebula> CREATE TAG player(name string,age int); nebula> CREATE TAG INDEX player_index on player(); nebula> REBUILD TAG INDEX player_index; +------------+ | New Job Id | +------------+ | 66 | +------------+ nebula> INSERT VERTEX player(name,age) VALUES \"player100\":(\"Tim Duncan\", 42), \"player101\":(\"Tony Parker\", 36); nebula> LOOKUP ON player; +-------------+ | _vid | +-------------+ | \"player100\" | +-------------+ | \"player101\" | +-------------+ \u68c0\u7d22\u8fb9\u7c7b\u578b\u4e3a like \u7684\u6240\u6709\u8fb9\u7684\u4fe1\u606f\u3002 nebula)> CREATE EDGE like(likeness int); nebula)> CREATE EDGE INDEX like_index on like(); nebula> REBUILD EDGE INDEX like_index; +------------+ | New Job Id | +------------+ | 88 | +------------+ nebula)> INSERT EDGE like(likeness) values \"player100\"->\"player101\":(95); nebula)> LOOKUP ON like; +-------------+----------+-------------+ | _src | _ranking | _dst | +-------------+----------+-------------+ | \"player100\" | 0 | \"player101\" | +-------------+----------+-------------+ \u8ba1\u6570\u70b9\u6216\u8fb9 \u00b6 \u8ba1\u6570\u6807\u7b7e\u4e3a player \u7684\u70b9\u548c\u8fb9\u7c7b\u578b\u4e3a like \u7684\u8fb9\u3002 nebula> LOOKUP ON player | YIELD COUNT(*) AS Player_Number; +---------------+ | Player_Number | +---------------+ | 2 | +---------------+ nebula> LOOKUP ON like | YIELD COUNT(*) AS Like_Number; +-------------+ | Like_Number | +-------------+ | 1 | +-------------+ FAQ \u00b6 \u9519\u8bef\u7801 411 \u00b6 [ ERROR ( -8 )] : Unknown error ( 411 ) : \u9519\u8bef\u7801 411 \u8868\u793a WHERE \u8fc7\u6ee4\u65f6\u6ca1\u6709\u6709\u6548\u7684\u7d22\u5f15\u3002Nebula Graph\u7684\u7d22\u5f15\u4f7f\u7528\u7684\u662f\u6700\u5de6\u5339\u914d\u539f\u5219\uff0c\u5373\u4ece\u6700\u5de6\u8fb9\u7684\u4e3a\u8d77\u70b9\u4efb\u4f55\u8fde\u7eed\u7684\u7d22\u5f15\u90fd\u80fd\u5339\u914d\u4e0a\u3002\u4f8b\u5982\uff1a # \u4e3a\u6807\u7b7et\u7684\u524d\u4e09\u4e2a\u5c5e\u6027\u521b\u5efa\u7d22\u5f15\u3002 nebula> CREATE TAG INDEX example_index ON TAG t(p1, p2, p3); # \u65e0\u6cd5\u5339\u914d\u7d22\u5f15\uff0c\u56e0\u4e3a\u4e0d\u662f\u4ecep1\u5f00\u59cb\u3002 nebula> LOOKUP ON t WHERE p2 == 1 and p3 == 1; # \u53ef\u4ee5\u5339\u914d\u7d22\u5f15\u3002 nebula> LOOKUP ON t WHERE p1 == 1; # \u53ef\u4ee5\u5339\u914d\u7d22\u5f15\uff0c\u56e0\u4e3ap1\u548cp2\u662f\u8fde\u7eed\u7684\u3002 nebula> LOOKUP ON t WHERE p1 == 1 and p2 == 1; # \u53ef\u4ee5\u5339\u914d\u7d22\u5f15\uff0c\u56e0\u4e3ap1\u3001p2\u3001p3\u662f\u8fde\u7eed\u7684\u3002 nebula> LOOKUP ON t WHERE p1 == 1 and p2 == 1 and p3 == 1; \u6ca1\u6709\u627e\u5230\u6709\u6548\u7d22\u5f15 \u00b6 No valid index found \u5982\u679c\u60a8\u7684\u67e5\u8be2\u8fc7\u6ee4\u5668\u5305\u542b\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5b57\u6bb5\uff0cNebula Graph\u4f1a\u9009\u62e9\u5339\u914d\u6240\u6709\u5b57\u6bb5\u7684\u7d22\u5f15\u3002\u4f8b\u5982\uff1a nebula> CREATE TAG t1 (c1 string, c2 int); nebula> CREATE TAG INDEX i1 ON t1 (c1, c2); # \u7d22\u5f15i1\u65e0\u6548\u3002 nebula> LOOKUP ON t1 WHERE t1.c1 == \"a\"; # \u7d22\u5f15i1\u6709\u6548\u3002 nebula> LOOKUP ON t1 WHERE t1.c1 == \"a\" and t1.c2 == 1;","title":"LOOKUP"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#lookup","text":"LOOKUP \u6839\u636e\u7d22\u5f15\u904d\u5386\u6570\u636e\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 LOOKUP \u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a \u6839\u636e WHERE \u5b50\u53e5\u641c\u7d22\u7279\u5b9a\u6570\u636e\u3002 \u901a\u8fc7\u6807\u7b7e\u5217\u51fa\u70b9: \u68c0\u7d22\u6307\u5b9a\u6807\u7b7e\u7684\u6240\u6709\u70b9ID\u3002 \u901a\u8fc7\u8fb9\u7c7b\u578b\u5217\u51fa\u8fb9\uff1a\u68c0\u7d22\u6307\u5b9a\u8fb9\u7c7b\u578b\u7684\u6240\u6709\u8fb9\u7684\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u548crank\u3002 \u8ba1\u6570\u6307\u5b9a\u6807\u7b7e\u7684\u70b9\u6216\u6307\u5b9a\u8fb9\u7c7b\u578b\u7684\u8fb9\u3002","title":"LOOKUP"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#opencypher","text":"\u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#_1","text":"\u8bf7\u786e\u4fdd LOOKUP \u8bed\u53e5\u6709\u81f3\u5c11\u4e00\u4e2a\u7d22\u5f15\u53ef\u7528\u3002\u5982\u679c\u60a8\u9700\u8981\u521b\u5efa\u7d22\u5f15\uff0c\u4f46\u662f\u5df2\u7ecf\u6709\u76f8\u5173\u7684\u70b9\u3001\u8fb9\u6216\u5c5e\u6027\uff0c\u60a8\u5fc5\u987b\u5728\u521b\u5efa\u7d22\u5f15\u540e\u91cd\u5efa\u7d22\u5f15\uff0c\u7d22\u5f15\u624d\u80fd\u751f\u6548\u3002 \u8b66\u544a \uff1a\u6b63\u786e\u4f7f\u7528\u7d22\u5f15\u53ef\u4ee5\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\uff0c\u4f46\u662f\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5199\u6027\u80fd\u5927\u5e45\u964d\u4f4e\uff08\u964d\u4f4e90%\u751a\u81f3\u66f4\u591a\uff09\u3002\u8bf7\u4e0d\u8981\u968f\u610f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u7d22\u5f15\uff0c\u9664\u975e\u60a8\u5f88\u6e05\u695a\u4f7f\u7528\u7d22\u5f15\u5bf9\u4e1a\u52a1\u7684\u5f71\u54cd\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#_2","text":"LOOKUP ON {<vertex_tag> | <edge_type>} [WHERE <expression> [AND <expression> ...]] [YIELD <return_list>]; <return_list> <prop_name> [AS <col_alias>] [, <prop_name> [AS <prop_alias>] ...]; WHERE <expression> \uff1a\u6307\u5b9a\u904d\u5386\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u7ed3\u5408AND\u3001OR\u4e00\u8d77\u4f7f\u7528\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 WHERE \u3002 YIELD <return_list> \uff1a\u6307\u5b9a\u8981\u8fd4\u56de\u7684\u7ed3\u679c\u548c\u683c\u5f0f. \u5982\u679c\u53ea\u6709 WHERE \u5b50\u53e5\uff0c\u6ca1\u6709 YIELD \u5b50\u53e5: LOOKUP \u6807\u7b7e\u65f6\uff0c\u8fd4\u56de\u70b9ID\u3002 LOOKUP \u8fb9\u7c7b\u578b\u65f6\uff0c\u8fd4\u56de\u8d77\u59cb\u70b9ID\u3001\u76ee\u7684\u70b9ID\u548crank\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#where","text":"\u5728 LOOKUP \u8bed\u53e5\u4e2d\u4f7f\u7528 WHERE \u5b50\u53e5\uff0c\u4e0d\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a $- \u548c $^ \u3002 \u5728\u5173\u7cfb\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4e0d\u652f\u6301\u8fd0\u7b97\u7b26\u4e24\u8fb9\u90fd\u6709\u5b57\u6bb5\u540d\uff0c\u4f8b\u5982 tagName.prop1> tagName.prop2 \u3002 \u4e0d\u652f\u6301\u8fd0\u7b97\u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u8868\u8fbe\u5f0f\u4e2d\u5d4c\u5957AliasProp\u8868\u8fbe\u5f0f\u3002 \u5b57\u7b26\u4e32\u7c7b\u578b\u7d22\u5f15\u4e0d\u652f\u6301\u8303\u56f4\u626b\u63cf\u3002 \u4e0d\u652f\u6301 OR \u548c XOR \u8fd0\u7b97\u7b26\u3002","title":"WHERE\u8bed\u53e5\u9650\u5236"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#_3","text":"\u8fd4\u56de\u6807\u7b7e\u4e3a player \u4e14 name \u4e3a Tony Parker \u7684\u70b9\u3002 nebula> CREATE TAG INDEX index_player ON player(name(30), age); nebula> REBUILD TAG INDEX index_player; +------------+ | New Job Id | +------------+ | 15 | +------------+ nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\"; ============ | VertexID | ============ | 101 | ------------ nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\" \\ YIELD player.name, player.age; ======================================= | VertexID | player.name | player.age | ======================================= | 101 | Tony Parker | 36 | --------------------------------------- nebula> LOOKUP ON player WHERE player.name == \"Kobe Bryant\" YIELD player.name AS name \\ | GO FROM $-.VertexID OVER serve \\ YIELD $-.name, serve.start_year, serve.end_year, $$.team.name; ================================================================== | $-.name | serve.start_year | serve.end_year | $$.team.name | ================================================================== | Kobe Bryant | 1996 | 2016 | Lakers | ------------------------------------------------------------------","title":"\u68c0\u7d22\u70b9"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#_4","text":"\u8fd4\u56de\u8fb9\u7c7b\u578b\u4e3a follow \u4e14 degree \u4e3a 90 \u7684\u8fb9\u3002 nebula> CREATE EDGE INDEX index_follow ON follow(degree); nebula> REBUILD EDGE INDEX index_follow; +------------+ | New Job Id | +------------+ | 62 | +------------+ nebula> LOOKUP ON follow WHERE follow.degree == 90; ============================= | SrcVID | DstVID | Ranking | ============================= | 100 | 106 | 0 | ----------------------------- nebula> LOOKUP ON follow WHERE follow.degree == 90 YIELD follow.degree; ============================================= | SrcVID | DstVID | Ranking | follow.degree | ============================================= | 100 | 106 | 0 | 90 | --------------------------------------------- nebula> LOOKUP ON follow WHERE follow.degree == 60 YIELD follow.degree AS Degree \\ | GO FROM $-.DstVID OVER serve \\ YIELD $-.DstVID, serve.start_year, serve.end_year, $$.team.name; ================================================================ | $-.DstVID | serve.start_year | serve.end_year | $$.team.name | ================================================================ | 105 | 2010 | 2018 | Spurs | ---------------------------------------------------------------- | 105 | 2009 | 2010 | Cavaliers | ---------------------------------------------------------------- | 105 | 2018 | 2019 | Raptors | ----------------------------------------------------------------","title":"\u68c0\u7d22\u8fb9"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#_5","text":"\u5982\u679c\u9700\u8981\u901a\u8fc7\u6807\u7b7e\u5217\u51fa\u70b9\uff0c\u6216\u901a\u8fc7\u8fb9\u7c7b\u578b\u5217\u51fa\u8fb9\uff0c\u5219\u6807\u7b7e\u3001\u8fb9\u7c7b\u578b\u6216\u5c5e\u6027\u4e0a\u5fc5\u987b\u6709\u81f3\u5c11\u4e00\u4e2a\u7d22\u5f15\u3002 \u4f8b\u5982\u4e00\u4e2a\u6807\u7b7e player \u6709\u4e24\u4e2a\u5c5e\u6027 name \u548c age \uff0c\u4e3a\u4e86\u904d\u5386\u6240\u6709\u5305\u542b\u6807\u7b7e player \u7684\u70b9ID\uff0c\u6807\u7b7e player \u3001\u5c5e\u6027 name \u6216\u5c5e\u6027 age \u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u7d22\u5f15\u3002 \u68c0\u7d22\u6240\u6709\u6807\u8bb0\u4e3a player \u7684\u70b9ID\u3002 nebula> CREATE TAG player(name string,age int); nebula> CREATE TAG INDEX player_index on player(); nebula> REBUILD TAG INDEX player_index; +------------+ | New Job Id | +------------+ | 66 | +------------+ nebula> INSERT VERTEX player(name,age) VALUES \"player100\":(\"Tim Duncan\", 42), \"player101\":(\"Tony Parker\", 36); nebula> LOOKUP ON player; +-------------+ | _vid | +-------------+ | \"player100\" | +-------------+ | \"player101\" | +-------------+ \u68c0\u7d22\u8fb9\u7c7b\u578b\u4e3a like \u7684\u6240\u6709\u8fb9\u7684\u4fe1\u606f\u3002 nebula)> CREATE EDGE like(likeness int); nebula)> CREATE EDGE INDEX like_index on like(); nebula> REBUILD EDGE INDEX like_index; +------------+ | New Job Id | +------------+ | 88 | +------------+ nebula)> INSERT EDGE like(likeness) values \"player100\"->\"player101\":(95); nebula)> LOOKUP ON like; +-------------+----------+-------------+ | _src | _ranking | _dst | +-------------+----------+-------------+ | \"player100\" | 0 | \"player101\" | +-------------+----------+-------------+","title":"\u901a\u8fc7\u6807\u7b7e\u5217\u51fa\u70b9/\u901a\u8fc7\u8fb9\u7c7b\u578b\u5217\u51fa\u8fb9"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#_6","text":"\u8ba1\u6570\u6807\u7b7e\u4e3a player \u7684\u70b9\u548c\u8fb9\u7c7b\u578b\u4e3a like \u7684\u8fb9\u3002 nebula> LOOKUP ON player | YIELD COUNT(*) AS Player_Number; +---------------+ | Player_Number | +---------------+ | 2 | +---------------+ nebula> LOOKUP ON like | YIELD COUNT(*) AS Like_Number; +-------------+ | Like_Number | +-------------+ | 1 | +-------------+","title":"\u8ba1\u6570\u70b9\u6216\u8fb9"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#faq","text":"","title":"FAQ"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#411","text":"[ ERROR ( -8 )] : Unknown error ( 411 ) : \u9519\u8bef\u7801 411 \u8868\u793a WHERE \u8fc7\u6ee4\u65f6\u6ca1\u6709\u6709\u6548\u7684\u7d22\u5f15\u3002Nebula Graph\u7684\u7d22\u5f15\u4f7f\u7528\u7684\u662f\u6700\u5de6\u5339\u914d\u539f\u5219\uff0c\u5373\u4ece\u6700\u5de6\u8fb9\u7684\u4e3a\u8d77\u70b9\u4efb\u4f55\u8fde\u7eed\u7684\u7d22\u5f15\u90fd\u80fd\u5339\u914d\u4e0a\u3002\u4f8b\u5982\uff1a # \u4e3a\u6807\u7b7et\u7684\u524d\u4e09\u4e2a\u5c5e\u6027\u521b\u5efa\u7d22\u5f15\u3002 nebula> CREATE TAG INDEX example_index ON TAG t(p1, p2, p3); # \u65e0\u6cd5\u5339\u914d\u7d22\u5f15\uff0c\u56e0\u4e3a\u4e0d\u662f\u4ecep1\u5f00\u59cb\u3002 nebula> LOOKUP ON t WHERE p2 == 1 and p3 == 1; # \u53ef\u4ee5\u5339\u914d\u7d22\u5f15\u3002 nebula> LOOKUP ON t WHERE p1 == 1; # \u53ef\u4ee5\u5339\u914d\u7d22\u5f15\uff0c\u56e0\u4e3ap1\u548cp2\u662f\u8fde\u7eed\u7684\u3002 nebula> LOOKUP ON t WHERE p1 == 1 and p2 == 1; # \u53ef\u4ee5\u5339\u914d\u7d22\u5f15\uff0c\u56e0\u4e3ap1\u3001p2\u3001p3\u662f\u8fde\u7eed\u7684\u3002 nebula> LOOKUP ON t WHERE p1 == 1 and p2 == 1 and p3 == 1;","title":"\u9519\u8bef\u7801411"},{"location":"3.ngql-guide/7.general-query-statements/5.lookup/#_7","text":"No valid index found \u5982\u679c\u60a8\u7684\u67e5\u8be2\u8fc7\u6ee4\u5668\u5305\u542b\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5b57\u6bb5\uff0cNebula Graph\u4f1a\u9009\u62e9\u5339\u914d\u6240\u6709\u5b57\u6bb5\u7684\u7d22\u5f15\u3002\u4f8b\u5982\uff1a nebula> CREATE TAG t1 (c1 string, c2 int); nebula> CREATE TAG INDEX i1 ON t1 (c1, c2); # \u7d22\u5f15i1\u65e0\u6548\u3002 nebula> LOOKUP ON t1 WHERE t1.c1 == \"a\"; # \u7d22\u5f15i1\u6709\u6548\u3002 nebula> LOOKUP ON t1 WHERE t1.c1 == \"a\" and t1.c2 == 1;","title":"\u6ca1\u6709\u627e\u5230\u6709\u6548\u7d22\u5f15"},{"location":"3.ngql-guide/7.general-query-statements/7.unwind/","text":"UNWIND \u00b6 UNWIND \u8bed\u53e5\u53ef\u4ee5\u5c06\u5217\u8868\u62c6\u5206\u4e3a\u5355\u72ec\u7684\u884c\uff0c\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e3a\u4e00\u884c\u3002 UNWIND \u53ef\u4ee5\u4f5c\u4e3a\u5355\u72ec\u8bed\u53e5\u6216\u8bed\u53e5\u4e2d\u7684\u5b50\u53e5\u4f7f\u7528\u3002 \u8bed\u6cd5 \u00b6 UNWIND <list> AS <alias> <RETURN clause> \u62c6\u5206\u5217\u8868 \u00b6 nebula) [nba]> UNWIND [1,2,3] AS n RETURN n; +---+ | n | +---+ | 1 | +---+ | 2 | +---+ | 3 | +---+ \u8fd4\u56de\u53bb\u91cd\u5217\u8868 \u00b6 \u5728 UNWIND \u8bed\u53e5\u4e2d\u4f7f\u7528 WITH DISTINCT \u53ef\u4ee5\u5c06\u5217\u8868\u4e2d\u7684\u91cd\u590d\u9879\u5ffd\u7565\uff0c\u8fd4\u56de\u53bb\u91cd\u540e\u7684\u7ed3\u679c\u3002 \u793a\u4f8b1 \u00b6 \u62c6\u5206\u5217\u8868 [1,1,2,2,3,3] \u3002 \u5220\u9664\u91cd\u590d\u884c\u3002 \u6392\u5e8f\u884c\u3002 \u5c06\u884c\u8f6c\u6362\u4e3a\u5217\u8868\u3002 nebula> WITH [1,1,2,2,3,3] AS n \\ UNWIND n AS r \\ WITH DISTINCT r AS r \\ ORDER BY r \\ RETURN collect(r); +------------+ | COLLECT(r) | +------------+ | [1, 2, 3] | +------------+ \u793a\u4f8b2 \u00b6 \u5c06\u5339\u914d\u8def\u5f84\u4e0a\u7684\u9876\u70b9\u8f93\u51fa\u5230\u5217\u8868\u4e2d\u3002 \u62c6\u5206\u5217\u8868\u3002 \u5220\u9664\u91cd\u590d\u884c\u3002 \u5c06\u884c\u8f6c\u6362\u4e3a\u5217\u8868\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})--(v2) \\ WITH nodes(p) AS n \\ UNWIND n AS r \\ WITH DISTINCT r AS r \\ RETURN collect(r); +----------------------------------------------------------------------------------------------------------------------+ | COLLECT(r) | +----------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :player{age: 42, name: \"Tim Duncan\"}), (\"player101\" :player{age: 36, name: \"Tony Parker\"}), (\"team204\" :team{name: \"Spurs\"}), (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}), (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}), (\"player104\" :player{age: 32, name: \"Marco Belinelli\"}), (\"player144\" :player{age: 47, name: \"Shaquile O'Neal\"}), (\"player105\" :player{age: 31, name: \"Danny Green\"}), (\"player113\" :player{age: 29, name: \"Dejounte Murray\"}), (\"player107\" :player{age: 32, name: \"Aron Baynes\"}), (\"player109\" :player{age: 34, name: \"Tiago Splitter\"}), (\"player108\" :player{age: 36, name: \"Boris Diaw\"})] | +----------------------------------------------------------------------------------------------------------------------+","title":"UNWIND"},{"location":"3.ngql-guide/7.general-query-statements/7.unwind/#unwind","text":"UNWIND \u8bed\u53e5\u53ef\u4ee5\u5c06\u5217\u8868\u62c6\u5206\u4e3a\u5355\u72ec\u7684\u884c\uff0c\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e3a\u4e00\u884c\u3002 UNWIND \u53ef\u4ee5\u4f5c\u4e3a\u5355\u72ec\u8bed\u53e5\u6216\u8bed\u53e5\u4e2d\u7684\u5b50\u53e5\u4f7f\u7528\u3002","title":"UNWIND"},{"location":"3.ngql-guide/7.general-query-statements/7.unwind/#_1","text":"UNWIND <list> AS <alias> <RETURN clause>","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/7.unwind/#_2","text":"nebula) [nba]> UNWIND [1,2,3] AS n RETURN n; +---+ | n | +---+ | 1 | +---+ | 2 | +---+ | 3 | +---+","title":"\u62c6\u5206\u5217\u8868"},{"location":"3.ngql-guide/7.general-query-statements/7.unwind/#_3","text":"\u5728 UNWIND \u8bed\u53e5\u4e2d\u4f7f\u7528 WITH DISTINCT \u53ef\u4ee5\u5c06\u5217\u8868\u4e2d\u7684\u91cd\u590d\u9879\u5ffd\u7565\uff0c\u8fd4\u56de\u53bb\u91cd\u540e\u7684\u7ed3\u679c\u3002","title":"\u8fd4\u56de\u53bb\u91cd\u5217\u8868"},{"location":"3.ngql-guide/7.general-query-statements/7.unwind/#1","text":"\u62c6\u5206\u5217\u8868 [1,1,2,2,3,3] \u3002 \u5220\u9664\u91cd\u590d\u884c\u3002 \u6392\u5e8f\u884c\u3002 \u5c06\u884c\u8f6c\u6362\u4e3a\u5217\u8868\u3002 nebula> WITH [1,1,2,2,3,3] AS n \\ UNWIND n AS r \\ WITH DISTINCT r AS r \\ ORDER BY r \\ RETURN collect(r); +------------+ | COLLECT(r) | +------------+ | [1, 2, 3] | +------------+","title":"\u793a\u4f8b1"},{"location":"3.ngql-guide/7.general-query-statements/7.unwind/#2","text":"\u5c06\u5339\u914d\u8def\u5f84\u4e0a\u7684\u9876\u70b9\u8f93\u51fa\u5230\u5217\u8868\u4e2d\u3002 \u62c6\u5206\u5217\u8868\u3002 \u5220\u9664\u91cd\u590d\u884c\u3002 \u5c06\u884c\u8f6c\u6362\u4e3a\u5217\u8868\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})--(v2) \\ WITH nodes(p) AS n \\ UNWIND n AS r \\ WITH DISTINCT r AS r \\ RETURN collect(r); +----------------------------------------------------------------------------------------------------------------------+ | COLLECT(r) | +----------------------------------------------------------------------------------------------------------------------+ | [(\"player100\" :player{age: 42, name: \"Tim Duncan\"}), (\"player101\" :player{age: 36, name: \"Tony Parker\"}), (\"team204\" :team{name: \"Spurs\"}), (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}), (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}), (\"player104\" :player{age: 32, name: \"Marco Belinelli\"}), (\"player144\" :player{age: 47, name: \"Shaquile O'Neal\"}), (\"player105\" :player{age: 31, name: \"Danny Green\"}), (\"player113\" :player{age: 29, name: \"Dejounte Murray\"}), (\"player107\" :player{age: 32, name: \"Aron Baynes\"}), (\"player109\" :player{age: 34, name: \"Tiago Splitter\"}), (\"player108\" :player{age: 36, name: \"Boris Diaw\"})] | +----------------------------------------------------------------------------------------------------------------------+","title":"\u793a\u4f8b2"},{"location":"3.ngql-guide/7.general-query-statements/6.show/1.show-charset/","text":"SHOW CHARSET \u00b6 SHOW CHARSET \u8bed\u53e5\u663e\u793a\u5f53\u524d\u7684\u5b57\u7b26\u96c6\u3002 \u76ee\u524d\u53ef\u7528\u7684\u5b57\u7b26\u96c6\u4e3a utf8 \u548c utf8mb4 \u3002\u9ed8\u8ba4\u5b57\u7b26\u96c6\u4e3a utf8 \u3002Nebula Graph\u6269\u5c55 uft8 \u652f\u6301\u56db\u5b57\u8282\u5b57\u7b26\uff0c\u56e0\u6b64 utf8 \u548c utf8mb4 \u662f\u7b49\u4ef7\u7684\u3002 \u8bed\u6cd5 \u00b6 SHOW CHARSET; \u793a\u4f8b \u00b6 nebula> SHOW CHARSET; +---------+-----------------+-------------------+--------+ | Charset | Description | Default collation | Maxlen | +---------+-----------------+-------------------+--------+ | \"utf8\" | \"UTF-8 Unicode\" | \"utf8_bin\" | 4 | +---------+-----------------+-------------------+--------+ \u53c2\u6570 \u8bf4\u660e Charset \u5b57\u7b26\u96c6\u540d\u79f0\u3002 Description \u5b57\u7b26\u96c6\u8bf4\u660e\u3002 Default collation \u9ed8\u8ba4\u6392\u5e8f\u89c4\u5219\u3002 Maxlen \u5b58\u50a8\u4e00\u4e2a\u5b57\u7b26\u6240\u9700\u7684\u6700\u5927\u5b57\u8282\u6570\u3002","title":"SHOW CHARSET"},{"location":"3.ngql-guide/7.general-query-statements/6.show/1.show-charset/#show_charset","text":"SHOW CHARSET \u8bed\u53e5\u663e\u793a\u5f53\u524d\u7684\u5b57\u7b26\u96c6\u3002 \u76ee\u524d\u53ef\u7528\u7684\u5b57\u7b26\u96c6\u4e3a utf8 \u548c utf8mb4 \u3002\u9ed8\u8ba4\u5b57\u7b26\u96c6\u4e3a utf8 \u3002Nebula Graph\u6269\u5c55 uft8 \u652f\u6301\u56db\u5b57\u8282\u5b57\u7b26\uff0c\u56e0\u6b64 utf8 \u548c utf8mb4 \u662f\u7b49\u4ef7\u7684\u3002","title":"SHOW CHARSET"},{"location":"3.ngql-guide/7.general-query-statements/6.show/1.show-charset/#_1","text":"SHOW CHARSET;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/1.show-charset/#_2","text":"nebula> SHOW CHARSET; +---------+-----------------+-------------------+--------+ | Charset | Description | Default collation | Maxlen | +---------+-----------------+-------------------+--------+ | \"utf8\" | \"UTF-8 Unicode\" | \"utf8_bin\" | 4 | +---------+-----------------+-------------------+--------+ \u53c2\u6570 \u8bf4\u660e Charset \u5b57\u7b26\u96c6\u540d\u79f0\u3002 Description \u5b57\u7b26\u96c6\u8bf4\u660e\u3002 Default collation \u9ed8\u8ba4\u6392\u5e8f\u89c4\u5219\u3002 Maxlen \u5b58\u50a8\u4e00\u4e2a\u5b57\u7b26\u6240\u9700\u7684\u6700\u5927\u5b57\u8282\u6570\u3002","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/10.show-roles/","text":"SHOW ROLES \u00b6 SHOW ROLES \u8bed\u53e5\u663e\u793a\u5206\u914d\u7ed9\u7528\u6237\u7684\u89d2\u8272\u4fe1\u606f\u3002 \u6839\u636e\u767b\u5f55\u7684\u7528\u6237\u89d2\u8272\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u4e5f\u6709\u6240\u4e0d\u540c\uff1a \u5982\u679c\u767b\u5f55\u7684\u7528\u6237\u89d2\u8272\u662f GOD \uff0c\u6216\u8005\u6709\u6743\u8bbf\u95ee\u8be5\u56fe\u7a7a\u95f4\u7684 ADMIN \uff0c\u5219\u8fd4\u56de\u8be5\u56fe\u7a7a\u95f4\u5185\u9664 GOD \u4e4b\u5916\u7684\u6240\u6709\u7528\u6237\u89d2\u8272\u4fe1\u606f\u3002 \u5982\u679c\u767b\u5f55\u7684\u7528\u6237\u89d2\u8272\u662f\u6709\u6743\u8bbf\u95ee\u8be5\u56fe\u7a7a\u95f4 DBA \u3001 USER \u6216 GUEST \uff0c\u5219\u8fd4\u56de\u81ea\u8eab\u7684\u89d2\u8272\u4fe1\u606f\u3002 \u5982\u679c\u767b\u5f55\u7684\u7528\u6237\u89d2\u8272\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\u8be5\u56fe\u7a7a\u95f4\uff0c\u5219\u8fd4\u56de\u6743\u9650\u9519\u8bef\u3002 \u5173\u4e8e\u89d2\u8272\u7684\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u89d2\u8272\u6743\u9650 \u3002 \u8bed\u6cd5 \u00b6 SHOW ROLES IN <space_name>; \u793a\u4f8b \u00b6 nebula> SHOW ROLES in nba; +---------+-----------+ | Account | Role Type | +---------+-----------+ | \"user1\" | \"ADMIN\" | +---------+-----------+","title":"SHOW ROLES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/10.show-roles/#show_roles","text":"SHOW ROLES \u8bed\u53e5\u663e\u793a\u5206\u914d\u7ed9\u7528\u6237\u7684\u89d2\u8272\u4fe1\u606f\u3002 \u6839\u636e\u767b\u5f55\u7684\u7528\u6237\u89d2\u8272\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u4e5f\u6709\u6240\u4e0d\u540c\uff1a \u5982\u679c\u767b\u5f55\u7684\u7528\u6237\u89d2\u8272\u662f GOD \uff0c\u6216\u8005\u6709\u6743\u8bbf\u95ee\u8be5\u56fe\u7a7a\u95f4\u7684 ADMIN \uff0c\u5219\u8fd4\u56de\u8be5\u56fe\u7a7a\u95f4\u5185\u9664 GOD \u4e4b\u5916\u7684\u6240\u6709\u7528\u6237\u89d2\u8272\u4fe1\u606f\u3002 \u5982\u679c\u767b\u5f55\u7684\u7528\u6237\u89d2\u8272\u662f\u6709\u6743\u8bbf\u95ee\u8be5\u56fe\u7a7a\u95f4 DBA \u3001 USER \u6216 GUEST \uff0c\u5219\u8fd4\u56de\u81ea\u8eab\u7684\u89d2\u8272\u4fe1\u606f\u3002 \u5982\u679c\u767b\u5f55\u7684\u7528\u6237\u89d2\u8272\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\u8be5\u56fe\u7a7a\u95f4\uff0c\u5219\u8fd4\u56de\u6743\u9650\u9519\u8bef\u3002 \u5173\u4e8e\u89d2\u8272\u7684\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u89d2\u8272\u6743\u9650 \u3002","title":"SHOW ROLES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/10.show-roles/#_1","text":"SHOW ROLES IN <space_name>;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/10.show-roles/#_2","text":"nebula> SHOW ROLES in nba; +---------+-----------+ | Account | Role Type | +---------+-----------+ | \"user1\" | \"ADMIN\" | +---------+-----------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/11.show-snapshots/","text":"SHOW SNAPSHOTS \u00b6 SHOW SNAPSHOTS \u8bed\u53e5\u663e\u793a\u6240\u6709\u5feb\u7167\u4fe1\u606f\u3002 \u5feb\u7167\u7684\u4f7f\u7528\u65b9\u5f0f\u8bf7\u53c2\u89c1 \u7ba1\u7406\u5feb\u7167 \u3002 \u89d2\u8272\u8981\u6c42 \u00b6 \u53ea\u6709 GOD \u89d2\u8272\u7684\u7528\u6237\uff08\u5373 root \uff09\u624d\u80fd\u6267\u884c SHOW SNAPSHOTS \u8bed\u53e5\u3002 \u8bed\u6cd5 \u00b6 SHOW SNAPSHOTS; \u793a\u4f8b \u00b6 nebula> SHOW SNAPSHOTS; +--------------------------------+---------+-----------------------------------------------------+ | Name | Status | Hosts | +--------------------------------+---------+-----------------------------------------------------+ | \"SNAPSHOT_2020_12_16_11_13_55\" | \"VALID\" | \"storaged0:9779, storaged1:9779, storaged2:9779\" | +--------------------------------+---------+-----------------------------------------------------+ | \"SNAPSHOT_2020_12_16_11_14_10\" | \"VALID\" | \"storaged0:9779, storaged1:9779, storaged2:9779\" | +--------------------------------+---------+-----------------------------------------------------+","title":"SHOW SNAPSHOTS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/11.show-snapshots/#show_snapshots","text":"SHOW SNAPSHOTS \u8bed\u53e5\u663e\u793a\u6240\u6709\u5feb\u7167\u4fe1\u606f\u3002 \u5feb\u7167\u7684\u4f7f\u7528\u65b9\u5f0f\u8bf7\u53c2\u89c1 \u7ba1\u7406\u5feb\u7167 \u3002","title":"SHOW SNAPSHOTS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/11.show-snapshots/#_1","text":"\u53ea\u6709 GOD \u89d2\u8272\u7684\u7528\u6237\uff08\u5373 root \uff09\u624d\u80fd\u6267\u884c SHOW SNAPSHOTS \u8bed\u53e5\u3002","title":"\u89d2\u8272\u8981\u6c42"},{"location":"3.ngql-guide/7.general-query-statements/6.show/11.show-snapshots/#_2","text":"SHOW SNAPSHOTS;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/11.show-snapshots/#_3","text":"nebula> SHOW SNAPSHOTS; +--------------------------------+---------+-----------------------------------------------------+ | Name | Status | Hosts | +--------------------------------+---------+-----------------------------------------------------+ | \"SNAPSHOT_2020_12_16_11_13_55\" | \"VALID\" | \"storaged0:9779, storaged1:9779, storaged2:9779\" | +--------------------------------+---------+-----------------------------------------------------+ | \"SNAPSHOT_2020_12_16_11_14_10\" | \"VALID\" | \"storaged0:9779, storaged1:9779, storaged2:9779\" | +--------------------------------+---------+-----------------------------------------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/12.show-spaces/","text":"SHOW SPACES \u00b6 SHOW SPACES \u8bed\u53e5\u663e\u793a\u73b0\u5b58\u7684\u56fe\u7a7a\u95f4\u3002 \u5982\u4f55\u521b\u5efa\u56fe\u7a7a\u95f4\uff0c\u8bf7\u53c2\u89c1 CREATE SPACE \u3002 \u8bed\u6cd5 \u00b6 SHOW SPACES; \u793a\u4f8b \u00b6 nebula> SHOW SPACES; +--------+ | Name | +--------+ | \"docs\" | +--------+ | \"nba\" | +--------+","title":"SHOW SPACES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/12.show-spaces/#show_spaces","text":"SHOW SPACES \u8bed\u53e5\u663e\u793a\u73b0\u5b58\u7684\u56fe\u7a7a\u95f4\u3002 \u5982\u4f55\u521b\u5efa\u56fe\u7a7a\u95f4\uff0c\u8bf7\u53c2\u89c1 CREATE SPACE \u3002","title":"SHOW SPACES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/12.show-spaces/#_1","text":"SHOW SPACES;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/12.show-spaces/#_2","text":"nebula> SHOW SPACES; +--------+ | Name | +--------+ | \"docs\" | +--------+ | \"nba\" | +--------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/14.show-stats/","text":"SHOW STATS \u00b6 SHOW STATS \u8bed\u53e5\u663e\u793a\u6700\u8fd1 STATS \u4f5c\u4e1a\u6536\u96c6\u7684\u56fe\u7a7a\u95f4\u7edf\u8ba1\u4fe1\u606f\u3002 \u56fe\u7a7a\u95f4\u7edf\u8ba1\u4fe1\u606f\u5305\u542b\uff1a \u70b9\u7684\u603b\u6570 \u8fb9\u7684\u603b\u6570 \u6bcf\u4e2a\u6807\u7b7e\u5173\u8054\u7684\u70b9\u7684\u603b\u6570 \u6bcf\u4e2a\u8fb9\u7c7b\u578b\u5173\u8054\u7684\u8fb9\u7684\u603b\u6570 \u524d\u63d0\u6761\u4ef6 \u00b6 \u5728\u9700\u8981\u67e5\u770b\u7edf\u8ba1\u4fe1\u606f\u7684\u56fe\u7a7a\u95f4\u4e2d\u6267\u884c SUBMIT JOB STATS \u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 SUBMIT JOB STATS \u3002 \u8bf4\u660e \uff1a SHOW STATS \u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u6700\u8fd1\u4e00\u6b21\u6267\u884c\u7684 SUBMIT JOB STATS \uff0c\u5982\u679c\u60a8\u9700\u8981\u66f4\u65b0\u7ed3\u679c\uff0c\u8bf7\u518d\u6b21\u6267\u884c SUBMIT JOB STATS \u3002 \u8bed\u6cd5 \u00b6 SHOW STATS; \u793a\u4f8b \u00b6 # \u9009\u62e9\u56fe\u7a7a\u95f4\u3002 nebula> USE nba; # \u6267\u884cSUBMIT JOB STATS\u3002 nebula> SUBMIT JOB STATS; +------------+ | New Job Id | +------------+ | 98 | +------------+ # \u786e\u8ba4\u4f5c\u4e1a\u6267\u884c\u6210\u529f\u3002 nebula> SHOW JOB 98; +----------------+---------------+------------+------------+------------+ | Job Id(TaskId) | Command(Dest) | Status | Start Time | Stop Time | +----------------+---------------+------------+------------+------------+ | 98 | \"STATS\" | \"FINISHED\" | 1606552675 | 1606552675 | +----------------+---------------+------------+------------+------------+ | 0 | \"storaged2\" | \"FINISHED\" | 1606552675 | 1606552675 | +----------------+---------------+------------+------------+------------+ | 1 | \"storaged0\" | \"FINISHED\" | 1606552675 | 1606552675 | +----------------+---------------+------------+------------+------------+ | 2 | \"storaged1\" | \"FINISHED\" | 1606552675 | 1606552675 | +----------------+---------------+------------+------------+------------+ # \u663e\u793a\u56fe\u7a7a\u95f4\u7edf\u8ba1\u4fe1\u606f\u3002 nebula> SHOW STATS; +---------+------------+-------+ | Type | Name | Count | +---------+------------+-------+ | \"Tag\" | \"player\" | 51 | +---------+------------+-------+ | \"Tag\" | \"team\" | 30 | +---------+------------+-------+ | \"Edge\" | \"like\" | 81 | +---------+------------+-------+ | \"Edge\" | \"serve\" | 152 | +---------+------------+-------+ | \"Space\" | \"vertices\" | 81 | +---------+------------+-------+ | \"Space\" | \"edges\" | 233 | +---------+------------+-------+","title":"SHOW STATS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/14.show-stats/#show_stats","text":"SHOW STATS \u8bed\u53e5\u663e\u793a\u6700\u8fd1 STATS \u4f5c\u4e1a\u6536\u96c6\u7684\u56fe\u7a7a\u95f4\u7edf\u8ba1\u4fe1\u606f\u3002 \u56fe\u7a7a\u95f4\u7edf\u8ba1\u4fe1\u606f\u5305\u542b\uff1a \u70b9\u7684\u603b\u6570 \u8fb9\u7684\u603b\u6570 \u6bcf\u4e2a\u6807\u7b7e\u5173\u8054\u7684\u70b9\u7684\u603b\u6570 \u6bcf\u4e2a\u8fb9\u7c7b\u578b\u5173\u8054\u7684\u8fb9\u7684\u603b\u6570","title":"SHOW STATS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/14.show-stats/#_1","text":"\u5728\u9700\u8981\u67e5\u770b\u7edf\u8ba1\u4fe1\u606f\u7684\u56fe\u7a7a\u95f4\u4e2d\u6267\u884c SUBMIT JOB STATS \u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 SUBMIT JOB STATS \u3002 \u8bf4\u660e \uff1a SHOW STATS \u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u6700\u8fd1\u4e00\u6b21\u6267\u884c\u7684 SUBMIT JOB STATS \uff0c\u5982\u679c\u60a8\u9700\u8981\u66f4\u65b0\u7ed3\u679c\uff0c\u8bf7\u518d\u6b21\u6267\u884c SUBMIT JOB STATS \u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/7.general-query-statements/6.show/14.show-stats/#_2","text":"SHOW STATS;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/14.show-stats/#_3","text":"# \u9009\u62e9\u56fe\u7a7a\u95f4\u3002 nebula> USE nba; # \u6267\u884cSUBMIT JOB STATS\u3002 nebula> SUBMIT JOB STATS; +------------+ | New Job Id | +------------+ | 98 | +------------+ # \u786e\u8ba4\u4f5c\u4e1a\u6267\u884c\u6210\u529f\u3002 nebula> SHOW JOB 98; +----------------+---------------+------------+------------+------------+ | Job Id(TaskId) | Command(Dest) | Status | Start Time | Stop Time | +----------------+---------------+------------+------------+------------+ | 98 | \"STATS\" | \"FINISHED\" | 1606552675 | 1606552675 | +----------------+---------------+------------+------------+------------+ | 0 | \"storaged2\" | \"FINISHED\" | 1606552675 | 1606552675 | +----------------+---------------+------------+------------+------------+ | 1 | \"storaged0\" | \"FINISHED\" | 1606552675 | 1606552675 | +----------------+---------------+------------+------------+------------+ | 2 | \"storaged1\" | \"FINISHED\" | 1606552675 | 1606552675 | +----------------+---------------+------------+------------+------------+ # \u663e\u793a\u56fe\u7a7a\u95f4\u7edf\u8ba1\u4fe1\u606f\u3002 nebula> SHOW STATS; +---------+------------+-------+ | Type | Name | Count | +---------+------------+-------+ | \"Tag\" | \"player\" | 51 | +---------+------------+-------+ | \"Tag\" | \"team\" | 30 | +---------+------------+-------+ | \"Edge\" | \"like\" | 81 | +---------+------------+-------+ | \"Edge\" | \"serve\" | 152 | +---------+------------+-------+ | \"Space\" | \"vertices\" | 81 | +---------+------------+-------+ | \"Space\" | \"edges\" | 233 | +---------+------------+-------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/15.show-tags-edges/","text":"SHOW TAGS/EDGES \u00b6 SHOW TAGS \u8bed\u53e5\u663e\u793a\u5f53\u524d\u56fe\u7a7a\u95f4\u5185\u7684\u6240\u6709\u6807\u7b7e\u3002 SHOW EDGES \u8bed\u53e5\u663e\u793a\u5f53\u524d\u56fe\u7a7a\u95f4\u5185\u7684\u6240\u6709\u8fb9\u7c7b\u578b\u3002 \u8bed\u6cd5 \u00b6 SHOW {TAGS | EDGES}; \u793a\u4f8b \u00b6 nebula> SHOW TAGS; +----------+ | Name | +----------+ | \"player\" | +----------+ | \"star\" | +----------+ | \"team\" | +----------+ nebula> SHOW EDGES; +---------+ | Name | +---------+ | \"like\" | +---------+ | \"serve\" | +---------+","title":"SHOW TAGS/EDGES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/15.show-tags-edges/#show_tagsedges","text":"SHOW TAGS \u8bed\u53e5\u663e\u793a\u5f53\u524d\u56fe\u7a7a\u95f4\u5185\u7684\u6240\u6709\u6807\u7b7e\u3002 SHOW EDGES \u8bed\u53e5\u663e\u793a\u5f53\u524d\u56fe\u7a7a\u95f4\u5185\u7684\u6240\u6709\u8fb9\u7c7b\u578b\u3002","title":"SHOW TAGS/EDGES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/15.show-tags-edges/#_1","text":"SHOW {TAGS | EDGES};","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/15.show-tags-edges/#_2","text":"nebula> SHOW TAGS; +----------+ | Name | +----------+ | \"player\" | +----------+ | \"star\" | +----------+ | \"team\" | +----------+ nebula> SHOW EDGES; +---------+ | Name | +---------+ | \"like\" | +---------+ | \"serve\" | +---------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/16.show-users/","text":"SHOW USERS \u00b6 SHOW USERS \u8bed\u53e5\u663e\u793a\u7528\u6237\u4fe1\u606f\u3002 \u89d2\u8272\u8981\u6c42 \u00b6 \u53ea\u6709 GOD \u89d2\u8272\u7684\u7528\u6237\uff08\u5373 root \uff09\u624d\u80fd\u6267\u884c SHOW USERS \u8bed\u53e5\u3002 \u8bed\u6cd5 \u00b6 SHOW USERS; \u793a\u4f8b \u00b6 nebula> SHOW USERS; +---------+ | Account | +---------+ | \"root\" | +---------+ | \"user1\" | +---------+","title":"SHOW USERS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/16.show-users/#show_users","text":"SHOW USERS \u8bed\u53e5\u663e\u793a\u7528\u6237\u4fe1\u606f\u3002","title":"SHOW USERS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/16.show-users/#_1","text":"\u53ea\u6709 GOD \u89d2\u8272\u7684\u7528\u6237\uff08\u5373 root \uff09\u624d\u80fd\u6267\u884c SHOW USERS \u8bed\u53e5\u3002","title":"\u89d2\u8272\u8981\u6c42"},{"location":"3.ngql-guide/7.general-query-statements/6.show/16.show-users/#_2","text":"SHOW USERS;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/16.show-users/#_3","text":"nebula> SHOW USERS; +---------+ | Account | +---------+ | \"root\" | +---------+ | \"user1\" | +---------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/2.show-collation/","text":"SHOW COLLATION \u00b6 SHOW COLLATION \u8bed\u53e5\u663e\u793a\u5f53\u524d\u7684\u6392\u5e8f\u89c4\u5219\u3002 \u76ee\u524d\u53ef\u7528\u7684\u6392\u5e8f\u89c4\u5219\u4e3a utf8_bin \u3001 utf8_general_ci \u3001 utf8mb4_bin \u548c utf8mb4_general_ci \u3002 \u5f53\u5b57\u7b26\u96c6\u4e3a utf8 \uff0c\u9ed8\u8ba4\u6392\u5e8f\u89c4\u5219\u4e3a utf8_bin \u3002 \u5f53\u5b57\u7b26\u96c6\u4e3a utf8mb4 \uff0c\u9ed8\u8ba4\u6392\u5e8f\u89c4\u5219\u4e3a utf8mb4_bin \u3002 utf8mb4_bin \u548c utf8mb4_general_ci \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u8bed\u6cd5 \u00b6 SHOW COLLATION; \u793a\u4f8b \u00b6 nebula> SHOW COLLATION; +------------+---------+ | Collation | Charset | +------------+---------+ | \"utf8_bin\" | \"utf8\" | +------------+---------+ \u53c2\u6570 \u8bf4\u660e Collation \u6392\u5e8f\u89c4\u5219\u540d\u79f0\u3002 Charset \u4e0e\u6392\u5e8f\u89c4\u5219\u5173\u8054\u7684\u5b57\u7b26\u96c6\u540d\u79f0\u3002","title":"SHOW COLLATION"},{"location":"3.ngql-guide/7.general-query-statements/6.show/2.show-collation/#show_collation","text":"SHOW COLLATION \u8bed\u53e5\u663e\u793a\u5f53\u524d\u7684\u6392\u5e8f\u89c4\u5219\u3002 \u76ee\u524d\u53ef\u7528\u7684\u6392\u5e8f\u89c4\u5219\u4e3a utf8_bin \u3001 utf8_general_ci \u3001 utf8mb4_bin \u548c utf8mb4_general_ci \u3002 \u5f53\u5b57\u7b26\u96c6\u4e3a utf8 \uff0c\u9ed8\u8ba4\u6392\u5e8f\u89c4\u5219\u4e3a utf8_bin \u3002 \u5f53\u5b57\u7b26\u96c6\u4e3a utf8mb4 \uff0c\u9ed8\u8ba4\u6392\u5e8f\u89c4\u5219\u4e3a utf8mb4_bin \u3002 utf8mb4_bin \u548c utf8mb4_general_ci \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002","title":"SHOW COLLATION"},{"location":"3.ngql-guide/7.general-query-statements/6.show/2.show-collation/#_1","text":"SHOW COLLATION;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/2.show-collation/#_2","text":"nebula> SHOW COLLATION; +------------+---------+ | Collation | Charset | +------------+---------+ | \"utf8_bin\" | \"utf8\" | +------------+---------+ \u53c2\u6570 \u8bf4\u660e Collation \u6392\u5e8f\u89c4\u5219\u540d\u79f0\u3002 Charset \u4e0e\u6392\u5e8f\u89c4\u5219\u5173\u8054\u7684\u5b57\u7b26\u96c6\u540d\u79f0\u3002","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/4.show-create-space/","text":"SHOW CREATE SPACE \u00b6 SHOW CREATE SPACE \u8bed\u53e5\u663e\u793a\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u4f8b\u5982\u521b\u5efa\u56fe\u7a7a\u95f4\u7684nGQL\u3001\u5206\u7247\u6570\u91cf\u3001\u526f\u672c\u6570\u91cf\u7b49\u3002 \u56fe\u7a7a\u95f4\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 CREATE SPACE \u3002 \u8bed\u6cd5 \u00b6 SHOW CREATE SPACE <space_name>; \u793a\u4f8b \u00b6 nebula> SHOW CREATE SPACE nba; +-------+--------------------------------------------------------------------------------------------------------------------------------+ | Space | Create Space | +-------+--------------------------------------------------------------------------------------------------------------------------------+ | \"nba\" | \"CREATE SPACE `nba` (partition_num = 10, replica_factor = 1, charset = utf8, collate = utf8_bin, vid_type = FIXED_STRING(32))\" | +-------+--------------------------------------------------------------------------------------------------------------------------------+","title":"SHOW CREATE SPACE"},{"location":"3.ngql-guide/7.general-query-statements/6.show/4.show-create-space/#show_create_space","text":"SHOW CREATE SPACE \u8bed\u53e5\u663e\u793a\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u4f8b\u5982\u521b\u5efa\u56fe\u7a7a\u95f4\u7684nGQL\u3001\u5206\u7247\u6570\u91cf\u3001\u526f\u672c\u6570\u91cf\u7b49\u3002 \u56fe\u7a7a\u95f4\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 CREATE SPACE \u3002","title":"SHOW CREATE SPACE"},{"location":"3.ngql-guide/7.general-query-statements/6.show/4.show-create-space/#_1","text":"SHOW CREATE SPACE <space_name>;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/4.show-create-space/#_2","text":"nebula> SHOW CREATE SPACE nba; +-------+--------------------------------------------------------------------------------------------------------------------------------+ | Space | Create Space | +-------+--------------------------------------------------------------------------------------------------------------------------------+ | \"nba\" | \"CREATE SPACE `nba` (partition_num = 10, replica_factor = 1, charset = utf8, collate = utf8_bin, vid_type = FIXED_STRING(32))\" | +-------+--------------------------------------------------------------------------------------------------------------------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/5.show-create-tags-edges/","text":"SHOW CREATE TAG/EDGE \u00b6 SHOW CREATE TAG \u8bed\u53e5\u663e\u793a\u6307\u5b9a\u6807\u7b7e\u7684\u57fa\u672c\u4fe1\u606f\u3002\u6807\u7b7e\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 CREATE TAG \u3002 SHOW CREATE EDGE \u8bed\u53e5\u663e\u793a\u6307\u5b9a\u8fb9\u7c7b\u578b\u7684\u57fa\u672c\u4fe1\u606f\u3002\u8fb9\u7c7b\u578b\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 CREATE EDGE \u3002 \u8bed\u6cd5 \u00b6 SHOW CREATE {TAG <tag_name> | EDGE <edge_name>}; \u793a\u4f8b \u00b6 nebula> SHOW CREATE TAG player; +----------+-----------------------------------+ | Tag | Create Tag | +----------+-----------------------------------+ | \"player\" | \"CREATE TAG `player` ( | | | `name` string NULL, | | | `age` int64 NULL | | | ) ttl_duration = 0, ttl_col = \"\" | +----------+-----------------------------------+ nebula> SHOW CREATE EDGE follow; +----------+-----------------------------------+ | Edge | Create Edge | +----------+-----------------------------------+ | \"follow\" | \"CREATE EDGE `follow` ( | | | `degree` int64 NULL | | | ) ttl_duration = 0, ttl_col = \"\"\" | +----------+-----------------------------------+","title":"SHOW CREATE TAGS/EDGES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/5.show-create-tags-edges/#show_create_tagedge","text":"SHOW CREATE TAG \u8bed\u53e5\u663e\u793a\u6307\u5b9a\u6807\u7b7e\u7684\u57fa\u672c\u4fe1\u606f\u3002\u6807\u7b7e\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 CREATE TAG \u3002 SHOW CREATE EDGE \u8bed\u53e5\u663e\u793a\u6307\u5b9a\u8fb9\u7c7b\u578b\u7684\u57fa\u672c\u4fe1\u606f\u3002\u8fb9\u7c7b\u578b\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1 CREATE EDGE \u3002","title":"SHOW CREATE TAG/EDGE"},{"location":"3.ngql-guide/7.general-query-statements/6.show/5.show-create-tags-edges/#_1","text":"SHOW CREATE {TAG <tag_name> | EDGE <edge_name>};","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/5.show-create-tags-edges/#_2","text":"nebula> SHOW CREATE TAG player; +----------+-----------------------------------+ | Tag | Create Tag | +----------+-----------------------------------+ | \"player\" | \"CREATE TAG `player` ( | | | `name` string NULL, | | | `age` int64 NULL | | | ) ttl_duration = 0, ttl_col = \"\" | +----------+-----------------------------------+ nebula> SHOW CREATE EDGE follow; +----------+-----------------------------------+ | Edge | Create Edge | +----------+-----------------------------------+ | \"follow\" | \"CREATE EDGE `follow` ( | | | `degree` int64 NULL | | | ) ttl_duration = 0, ttl_col = \"\"\" | +----------+-----------------------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/6.show-hosts/","text":"SHOW HOSTS \u00b6 SHOW HOSTS \u8bed\u53e5\u663e\u793a\u7531Meta\u670d\u52a1\u6ce8\u518c\u7684Graph\u3001Storage\u3001Meta\u4e3b\u673a\u3002 \u8bed\u6cd5 \u00b6 SHOW HOSTS [GRAPH/STORAGE/META]; \u793a\u4f8b \u00b6 nebula> SHOW HOSTS; +-------------+-------+----------+--------------+---------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-------------+-------+----------+--------------+---------------------+------------------------+ | \"storaged0\" | 9779 | \"ONLINE\" | 8 | \"docs:5, nba:3\" | \"docs:5, nba:3\" | +-------------+-------+----------+--------------+---------------------+------------------------+ | \"storaged1\" | 9779 | \"ONLINE\" | 9 | \"nba:4, docs:5\" | \"docs:5, nba:4\" | +-------------+-------+----------+--------------+---------------------+------------------------+ | \"storaged2\" | 9779 | \"ONLINE\" | 8 | \"nba:3, docs:5\" | \"docs:5, nba:3\" | +-------------+-------+----------+--------------+---------------------+------------------------+ Got 3 rows (time spent 866/1411 us) nebula> SHOW HOSTS GRAPH; +-------------+------+----------+---------+--------------+ | Host | Port | Status | Role | Git Info Sha | +-------------+------+----------+---------+--------------+ | \"12.16.2.3\" | 9669 | \"ONLINE\" | \"GRAPH\" | \"761f22b\" | nebula> SHOW HOSTS STORAGE; +-------------+------+----------+-----------+--------------+ | Host | Port | Status | Role | Git Info Sha | +-------------+------+----------+-----------+--------------+ | \"12.16.2.3\" | 9779 | \"ONLINE\" | \"STORAGE\" | \"761f22b\" | nebula> SHOW HOSTS META; +-------------+------+----------+--------+--------------+ | Host | Port | Status | Role | Git Info Sha | +-------------+------+----------+--------+--------------+ | \"12.16.2.3\" | 9559 | \"ONLINE\" | \"META\" | \"761f22b\" |","title":"SHOW HOSTS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/6.show-hosts/#show_hosts","text":"SHOW HOSTS \u8bed\u53e5\u663e\u793a\u7531Meta\u670d\u52a1\u6ce8\u518c\u7684Graph\u3001Storage\u3001Meta\u4e3b\u673a\u3002","title":"SHOW HOSTS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/6.show-hosts/#_1","text":"SHOW HOSTS [GRAPH/STORAGE/META];","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/6.show-hosts/#_2","text":"nebula> SHOW HOSTS; +-------------+-------+----------+--------------+---------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-------------+-------+----------+--------------+---------------------+------------------------+ | \"storaged0\" | 9779 | \"ONLINE\" | 8 | \"docs:5, nba:3\" | \"docs:5, nba:3\" | +-------------+-------+----------+--------------+---------------------+------------------------+ | \"storaged1\" | 9779 | \"ONLINE\" | 9 | \"nba:4, docs:5\" | \"docs:5, nba:4\" | +-------------+-------+----------+--------------+---------------------+------------------------+ | \"storaged2\" | 9779 | \"ONLINE\" | 8 | \"nba:3, docs:5\" | \"docs:5, nba:3\" | +-------------+-------+----------+--------------+---------------------+------------------------+ Got 3 rows (time spent 866/1411 us) nebula> SHOW HOSTS GRAPH; +-------------+------+----------+---------+--------------+ | Host | Port | Status | Role | Git Info Sha | +-------------+------+----------+---------+--------------+ | \"12.16.2.3\" | 9669 | \"ONLINE\" | \"GRAPH\" | \"761f22b\" | nebula> SHOW HOSTS STORAGE; +-------------+------+----------+-----------+--------------+ | Host | Port | Status | Role | Git Info Sha | +-------------+------+----------+-----------+--------------+ | \"12.16.2.3\" | 9779 | \"ONLINE\" | \"STORAGE\" | \"761f22b\" | nebula> SHOW HOSTS META; +-------------+------+----------+--------+--------------+ | Host | Port | Status | Role | Git Info Sha | +-------------+------+----------+--------+--------------+ | \"12.16.2.3\" | 9559 | \"ONLINE\" | \"META\" | \"761f22b\" |","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/7.show-index-status/","text":"SHOW INDEX STATUS \u00b6 SHOW INDEX STATUS \u8bed\u53e5\u663e\u793a\u91cd\u5efa\u539f\u751f\u7d22\u5f15\u7684\u4f5c\u4e1a\u72b6\u6001\uff0c\u4ee5\u4fbf\u786e\u5b9a\u91cd\u5efa\u7d22\u5f15\u662f\u5426\u6210\u529f\u3002 \u8bed\u6cd5 \u00b6 SHOW {TAG | EDGE} INDEX STATUS; \u793a\u4f8b \u00b6 nebula> SHOW TAG INDEX STATUS; +----------------+--------------+ | Name | Index Status | +----------------+--------------+ | \"like_index_0\" | \"FINISHED\" | +----------------+--------------+ | \"like1\" | \"FINISHED\" | +----------------+--------------+ nebula> SHOW EDGE INDEX STATUS; +----------------+--------------+ | Name | Index Status | +----------------+--------------+ | \"index_follow\" | \"FINISHED\" | +----------------+--------------+ \u76f8\u5173\u6587\u6863 \u00b6 \u7ba1\u7406\u4f5c\u4e1a REBUILD NATIVE INDEX","title":"SHOW INDEX STATUS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/7.show-index-status/#show_index_status","text":"SHOW INDEX STATUS \u8bed\u53e5\u663e\u793a\u91cd\u5efa\u539f\u751f\u7d22\u5f15\u7684\u4f5c\u4e1a\u72b6\u6001\uff0c\u4ee5\u4fbf\u786e\u5b9a\u91cd\u5efa\u7d22\u5f15\u662f\u5426\u6210\u529f\u3002","title":"SHOW INDEX STATUS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/7.show-index-status/#_1","text":"SHOW {TAG | EDGE} INDEX STATUS;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/7.show-index-status/#_2","text":"nebula> SHOW TAG INDEX STATUS; +----------------+--------------+ | Name | Index Status | +----------------+--------------+ | \"like_index_0\" | \"FINISHED\" | +----------------+--------------+ | \"like1\" | \"FINISHED\" | +----------------+--------------+ nebula> SHOW EDGE INDEX STATUS; +----------------+--------------+ | Name | Index Status | +----------------+--------------+ | \"index_follow\" | \"FINISHED\" | +----------------+--------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/7.show-index-status/#_3","text":"\u7ba1\u7406\u4f5c\u4e1a REBUILD NATIVE INDEX","title":"\u76f8\u5173\u6587\u6863"},{"location":"3.ngql-guide/7.general-query-statements/6.show/8.show-indexes/","text":"SHOW INDEXES \u00b6 SHOW INDEXES \u8bed\u53e5\u663e\u793a\u73b0\u6709\u7684\u539f\u751f\u7d22\u5f15\u3002 \u8bed\u6cd5 \u00b6 SHOW {TAG | EDGE} INDEXES; \u793a\u4f8b \u00b6 nebula> SHOW TAG INDEXES; +------------------+ | Names | +------------------+ | \"play_age_0\" | +------------------+ | \"player_index_0\" | +------------------+ nebula> SHOW EDGE INDEXES; +----------------+ | Names | +----------------+ | \"index_follow\" | +----------------+","title":"SHOW INDEXES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/8.show-indexes/#show_indexes","text":"SHOW INDEXES \u8bed\u53e5\u663e\u793a\u73b0\u6709\u7684\u539f\u751f\u7d22\u5f15\u3002","title":"SHOW INDEXES"},{"location":"3.ngql-guide/7.general-query-statements/6.show/8.show-indexes/#_1","text":"SHOW {TAG | EDGE} INDEXES;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/8.show-indexes/#_2","text":"nebula> SHOW TAG INDEXES; +------------------+ | Names | +------------------+ | \"play_age_0\" | +------------------+ | \"player_index_0\" | +------------------+ nebula> SHOW EDGE INDEXES; +----------------+ | Names | +----------------+ | \"index_follow\" | +----------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/7.general-query-statements/6.show/9.show-parts/","text":"SHOW PARTS \u00b6 SHOW PARTS \u8bed\u53e5\u663e\u793a\u56fe\u7a7a\u95f4\u6307\u5b9a\u5206\u7247\u6216\u6240\u6709\u5206\u7247\u7684\u4fe1\u606f\u3002 \u8bed\u6cd5 \u00b6 SHOW PARTS [<part_id>]; \u793a\u4f8b \u00b6 nebula> SHOW PARTS; +--------------+-------------------+-------------------+-------+ | Partition ID | Leader | Peers | Losts | +--------------+-------------------+-------------------+-------+ | 1 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 2 | \"storaged2:44500\" | \"storaged2:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 3 | \"storaged0:44500\" | \"storaged0:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 4 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 5 | \"storaged2:44500\" | \"storaged2:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 6 | \"storaged0:44500\" | \"storaged0:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 7 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 8 | \"storaged2:44500\" | \"storaged2:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 9 | \"storaged0:44500\" | \"storaged0:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 10 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ nebula> SHOW PARTS 1; +--------------+-------------------+-------------------+-------+ | Partition ID | Leader | Peers | Losts | +--------------+-------------------+-------------------+-------+ | 1 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+","title":"SHOW PARTS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/9.show-parts/#show_parts","text":"SHOW PARTS \u8bed\u53e5\u663e\u793a\u56fe\u7a7a\u95f4\u6307\u5b9a\u5206\u7247\u6216\u6240\u6709\u5206\u7247\u7684\u4fe1\u606f\u3002","title":"SHOW PARTS"},{"location":"3.ngql-guide/7.general-query-statements/6.show/9.show-parts/#_1","text":"SHOW PARTS [<part_id>];","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/7.general-query-statements/6.show/9.show-parts/#_2","text":"nebula> SHOW PARTS; +--------------+-------------------+-------------------+-------+ | Partition ID | Leader | Peers | Losts | +--------------+-------------------+-------------------+-------+ | 1 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 2 | \"storaged2:44500\" | \"storaged2:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 3 | \"storaged0:44500\" | \"storaged0:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 4 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 5 | \"storaged2:44500\" | \"storaged2:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 6 | \"storaged0:44500\" | \"storaged0:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 7 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 8 | \"storaged2:44500\" | \"storaged2:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 9 | \"storaged0:44500\" | \"storaged0:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ | 10 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+ nebula> SHOW PARTS 1; +--------------+-------------------+-------------------+-------+ | Partition ID | Leader | Peers | Losts | +--------------+-------------------+-------------------+-------+ | 1 | \"storaged1:44500\" | \"storaged1:44500\" | \"\" | +--------------+-------------------+-------------------+-------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/8.clauses-and-options/group-by/","text":"GROUP BY \u00b6 GROUP BY \u5b50\u53e5\u53ef\u4ee5\u7528\u4e8e\u805a\u5408\u6570\u636e\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528openCypher\u65b9\u5f0f\u7684 count() \u51fd\u6570\u805a\u5408\u6570\u636e\u3002 nebula> MATCH (v:player)<-[:follow]-(:player) RETURN v.name AS Name, count(*) as cnt ORDER BY cnt DESC +----------------------+--------------+ | Name | Follower_Num | +----------------------+--------------+ | \"Tim Duncan\" | 10 | +----------------------+--------------+ | \"LeBron James\" | 6 | +----------------------+--------------+ | \"Tony Parker\" | 5 | +----------------------+--------------+ | \"Manu Ginobili\" | 4 | +----------------------+--------------+ | \"Chris Paul\" | 4 | +----------------------+--------------+ | \"Tracy McGrady\" | 3 | +----------------------+--------------+ | \"Dwyane Wade\" | 3 | +----------------------+--------------+ ... \u8bed\u6cd5 \u00b6 GROUP BY \u5b50\u53e5\u53ef\u4ee5\u805a\u5408\u76f8\u540c\u503c\u7684\u884c\uff0c\u7136\u540e\u8fdb\u884c\u8ba1\u6570\u3001\u6392\u5e8f\u548c\u8ba1\u7b97\u7b49\u64cd\u4f5c\u3002 GROUP BY \u5b50\u53e5\u53ef\u4ee5\u5728\u7ba1\u9053\u7b26\uff08|\uff09\u4e4b\u540e\u548c YIELD \u5b50\u53e5\u4e4b\u524d\u4f7f\u7528\u3002 | GROUP BY <var> YIELD <var>, <aggregation_function(var)> aggregation_function() \u51fd\u6570\u652f\u6301 avg() \u3001 sum() \u3001 max() \u3001 min() \u3001 count() \u3001 collect() \u3001 std() \u3002 \u793a\u4f8b \u00b6 # \u67e5\u627e\u6240\u6709\u8fde\u63a5\u5230player100\u7684\u70b9\uff0c\u5e76\u6839\u636e\u4ed6\u4eec\u7684\u59d3\u540d\u8fdb\u884c\u5206\u7ec4\uff0c\u8fd4\u56de\u59d3\u540d\u7684\u51fa\u73b0\u6b21\u6570\u3002 nebula> GO FROM \"player100\" OVER follow BIDIRECT \\ YIELD $$.player.name as Name \\ | GROUP BY $-.Name \\ YIELD $-.Name as Player, count(*) AS Name_Count; +---------------------+------------+ | Player | Name_Count | +---------------------+------------+ | \"Tiago Splitter\" | 1 | +---------------------+------------+ | \"Aron Baynes\" | 1 | +---------------------+------------+ | \"Boris Diaw\" | 1 | +---------------------+------------+ | \"Manu Ginobili\" | 2 | +---------------------+------------+ | \"Dejounte Murray\" | 1 | +---------------------+------------+ | \"Danny Green\" | 1 | +---------------------+------------+ | \"Tony Parker\" | 2 | +---------------------+------------+ | \"Shaquille O'Neal\" | 1 | +---------------------+------------+ | \"LaMarcus Aldridge\" | 1 | +---------------------+------------+ | \"Marco Belinelli\" | 1 | +---------------------+------------+ \u7528\u51fd\u6570\u8fdb\u884c\u5206\u7ec4\u548c\u8ba1\u7b97 \u00b6 # \u67e5\u627e\u6240\u6709\u8fde\u63a5\u5230player100\u7684\u70b9\uff0c\u5e76\u6839\u636e\u8d77\u59cb\u70b9\u8fdb\u884c\u5206\u7ec4\uff0c\u8fd4\u56dedegree\u7684\u603b\u548c\u3002 nebula> GO FROM \"player100\" OVER follow \\ YIELD follow._src AS player, follow.degree AS degree \\ | GROUP BY $-.player \\ YIELD sum($-.degree); +----------------+ | sum($-.degree) | +----------------+ | 190 | +----------------+ sum() \u51fd\u6570\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u6570\u5b66\u51fd\u6570 \u3002","title":"GROUP BY"},{"location":"3.ngql-guide/8.clauses-and-options/group-by/#group_by","text":"GROUP BY \u5b50\u53e5\u53ef\u4ee5\u7528\u4e8e\u805a\u5408\u6570\u636e\u3002","title":"GROUP BY"},{"location":"3.ngql-guide/8.clauses-and-options/group-by/#opencypher","text":"\u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528openCypher\u65b9\u5f0f\u7684 count() \u51fd\u6570\u805a\u5408\u6570\u636e\u3002 nebula> MATCH (v:player)<-[:follow]-(:player) RETURN v.name AS Name, count(*) as cnt ORDER BY cnt DESC +----------------------+--------------+ | Name | Follower_Num | +----------------------+--------------+ | \"Tim Duncan\" | 10 | +----------------------+--------------+ | \"LeBron James\" | 6 | +----------------------+--------------+ | \"Tony Parker\" | 5 | +----------------------+--------------+ | \"Manu Ginobili\" | 4 | +----------------------+--------------+ | \"Chris Paul\" | 4 | +----------------------+--------------+ | \"Tracy McGrady\" | 3 | +----------------------+--------------+ | \"Dwyane Wade\" | 3 | +----------------------+--------------+ ...","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/group-by/#_1","text":"GROUP BY \u5b50\u53e5\u53ef\u4ee5\u805a\u5408\u76f8\u540c\u503c\u7684\u884c\uff0c\u7136\u540e\u8fdb\u884c\u8ba1\u6570\u3001\u6392\u5e8f\u548c\u8ba1\u7b97\u7b49\u64cd\u4f5c\u3002 GROUP BY \u5b50\u53e5\u53ef\u4ee5\u5728\u7ba1\u9053\u7b26\uff08|\uff09\u4e4b\u540e\u548c YIELD \u5b50\u53e5\u4e4b\u524d\u4f7f\u7528\u3002 | GROUP BY <var> YIELD <var>, <aggregation_function(var)> aggregation_function() \u51fd\u6570\u652f\u6301 avg() \u3001 sum() \u3001 max() \u3001 min() \u3001 count() \u3001 collect() \u3001 std() \u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/group-by/#_2","text":"# \u67e5\u627e\u6240\u6709\u8fde\u63a5\u5230player100\u7684\u70b9\uff0c\u5e76\u6839\u636e\u4ed6\u4eec\u7684\u59d3\u540d\u8fdb\u884c\u5206\u7ec4\uff0c\u8fd4\u56de\u59d3\u540d\u7684\u51fa\u73b0\u6b21\u6570\u3002 nebula> GO FROM \"player100\" OVER follow BIDIRECT \\ YIELD $$.player.name as Name \\ | GROUP BY $-.Name \\ YIELD $-.Name as Player, count(*) AS Name_Count; +---------------------+------------+ | Player | Name_Count | +---------------------+------------+ | \"Tiago Splitter\" | 1 | +---------------------+------------+ | \"Aron Baynes\" | 1 | +---------------------+------------+ | \"Boris Diaw\" | 1 | +---------------------+------------+ | \"Manu Ginobili\" | 2 | +---------------------+------------+ | \"Dejounte Murray\" | 1 | +---------------------+------------+ | \"Danny Green\" | 1 | +---------------------+------------+ | \"Tony Parker\" | 2 | +---------------------+------------+ | \"Shaquille O'Neal\" | 1 | +---------------------+------------+ | \"LaMarcus Aldridge\" | 1 | +---------------------+------------+ | \"Marco Belinelli\" | 1 | +---------------------+------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/8.clauses-and-options/group-by/#_3","text":"# \u67e5\u627e\u6240\u6709\u8fde\u63a5\u5230player100\u7684\u70b9\uff0c\u5e76\u6839\u636e\u8d77\u59cb\u70b9\u8fdb\u884c\u5206\u7ec4\uff0c\u8fd4\u56dedegree\u7684\u603b\u548c\u3002 nebula> GO FROM \"player100\" OVER follow \\ YIELD follow._src AS player, follow.degree AS degree \\ | GROUP BY $-.player \\ YIELD sum($-.degree); +----------------+ | sum($-.degree) | +----------------+ | 190 | +----------------+ sum() \u51fd\u6570\u8be6\u60c5\u8bf7\u53c2\u89c1 \u5185\u7f6e\u6570\u5b66\u51fd\u6570 \u3002","title":"\u7528\u51fd\u6570\u8fdb\u884c\u5206\u7ec4\u548c\u8ba1\u7b97"},{"location":"3.ngql-guide/8.clauses-and-options/limit/","text":"LIMIT \u00b6 LIMIT \u5b50\u53e5\u9650\u5236\u8f93\u51fa\u7ed3\u679c\u7684\u884c\u6570\u3002 \u5728nGQL\u6269\u5c55\u4e2d\uff0c\u5fc5\u987b\u4f7f\u7528\u7ba1\u9053\u7b26\uff08|\uff09\uff0c\u53ef\u4ee5\u5ffd\u7565\u504f\u79fb\u91cf\u3002 \u5728openCypher\u65b9\u5f0f\u4e2d\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u7ba1\u9053\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 SKIP \u6307\u660e\u504f\u79fb\u91cf\u3002 \u8bf4\u660e \uff1a\u5728nGQL\u6269\u5c55\u6216openCypher\u65b9\u5f0f\u4e2d\u4f7f\u7528 LIMIT \u65f6\uff0c\u4f7f\u7528 ORDER BY \u5b50\u53e5\u9650\u5236\u8f93\u51fa\u987a\u5e8f\u975e\u5e38\u91cd\u8981\uff0c\u5426\u5219\u4f1a\u8f93\u51fa\u4e00\u4e2a\u4e0d\u53ef\u9884\u77e5\u7684\u5b50\u96c6\u3002 nGQL\u6269\u5c55\u8bed\u6cd5 \u00b6 \u5728nGQL\u6269\u5c55\u4e2d\uff0c LIMIT \u7684\u5de5\u4f5c\u539f\u7406\u4e0e SQL \u76f8\u540c\uff0c\u5fc5\u987b\u548c\u7ba1\u9053\u7b26\u4e00\u8d77\u4f7f\u7528\u3002 LIMIT \u5b50\u53e5\u63a5\u6536\u4e00\u4e2a\u6216\u4e24\u4e2a\u53c2\u6570\u3002\u53c2\u6570\u7684\u503c\u5fc5\u987b\u662f\u975e\u8d1f\u6574\u6570\u3002 YIELD <var> [| LIMIT [<offset_value>,] <number_rows>]; \u53c2\u6570 \u8bf4\u660e var \u6392\u5e8f\u7684\u5217\u6216\u8ba1\u7b97\u7ed3\u679c\u3002 offset_value \u504f\u79fb\u91cf\uff0c\u5373\u5b9a\u4e49\u4ece\u54ea\u4e00\u884c\u5f00\u59cb\u8fd4\u56de\u3002\u7d22\u5f15\u4ece 0 \u5f00\u59cb\u3002\u9ed8\u8ba4\u503c\u4e3a 0 \uff0c\u8868\u793a\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\u8fd4\u56de\u3002 number_rows \u8fd4\u56de\u7684\u603b\u884c\u6570\u3002 \u793a\u4f8b \u00b6 # \u4ece\u6392\u5e8f\u7ed3\u679c\u4e2d\u8fd4\u56de\u7b2c2\u884c\u5f00\u59cb\u76843\u884c\u6570\u636e\u3002 nebula> GO FROM \"player100\" OVER follow REVERSELY \\ YIELD $$.player.name AS Friend, $$.player.age AS Age \\ | ORDER BY Age,Friend \\ | LIMIT 1, 3; +-------------------+-----+ | Friend | Age | +-------------------+-----+ | \"Danny Green\" | 31 | +-------------------+-----+ | \"Aron Baynes\" | 32 | +-------------------+-----+ | \"Marco Belinelli\" | 32 | +-------------------+-----+ openCypher\u65b9\u5f0f\u8bed\u6cd5 \u00b6 RETURN <var> [SKIP <offset>] [LIMIT <number_rows>]; \u53c2\u6570 \u8bf4\u660e var \u6392\u5e8f\u7684\u5217\u6216\u8ba1\u7b97\u7ed3\u679c\u3002 offset \u504f\u79fb\u91cf\uff0c\u5373\u5b9a\u4e49\u4ece\u54ea\u4e00\u884c\u5f00\u59cb\u8fd4\u56de\u3002\u7d22\u5f15\u4ece 0 \u5f00\u59cb\u3002\u9ed8\u8ba4\u503c\u4e3a 0 \uff0c\u8868\u793a\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\u8fd4\u56de\u3002 number_rows \u8fd4\u56de\u7684\u603b\u884c\u6570\u91cf\u3002 offset \u548c number_rows \u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5fc5\u987b\u662f\u975e\u8d1f\u6574\u6570\u3002 \u8bf4\u660e \uff1a\u4e24\u4e2a\u6574\u6570\u7ec4\u6210\u7684\u5206\u6570\u8868\u8fbe\u5f0f\u4f1a\u81ea\u52a8\u5411\u4e0b\u53d6\u6574\u3002\u4f8b\u5982 8/6 \u5411\u4e0b\u53d6\u6574\u4e3a1\u3002 \u793a\u4f8b \u00b6 nebula> MATCH (v:player) RETURN v.name AS Name, v.age AS Age \\ ORDER BY Age LIMIT 5; +-------------------------+-----+ | Name | Age | +-------------------------+-----+ | \"Luka Doncic\" | 20 | +-------------------------+-----+ | \"Ben Simmons\" | 22 | +-------------------------+-----+ | \"Kristaps Porzingis\" | 23 | +-------------------------+-----+ | \"Giannis Antetokounmpo\" | 24 | +-------------------------+-----+ | \"Kyle Anderson\" | 25 | +-------------------------+-----+ nebula> MATCH (v:player) RETURN v.name AS Name, v.age AS Age \\ ORDER BY Age LIMIT rand32(5); +-------------------------+-----+ | Name | Age | +-------------------------+-----+ | \"Luka Doncic\" | 20 | +-------------------------+-----+ | \"Ben Simmons\" | 22 | +-------------------------+-----+ | \"Kristaps Porzingis\" | 23 | +-------------------------+-----+ | \"Giannis Antetokounmpo\" | 24 | +-------------------------+-----+ SKIP\u793a\u4f8b \u00b6 \u60a8\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528 SKIP <offset> \u8bbe\u7f6e\u504f\u79fb\u91cf\uff0c\u540e\u9762\u4e0d\u9700\u8981\u6dfb\u52a0 LIMIT <number_rows> \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age DESC SKIP 1; +-----------------+-----+ | Name | Age | +-----------------+-----+ | \"Manu Ginobili\" | 41 | +-----------------+-----+ | \"Tony Parker\" | 36 | +-----------------+-----+ nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age DESC SKIP 1+1; +---------------+-----+ | Name | Age | +---------------+-----+ | \"Tony Parker\" | 36 | +---------------+-----+ \u60a8\u4e5f\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528 SKIP <offset> \u548c LIMIT <number_rows> \uff0c\u8fd4\u56de\u4e2d\u95f4\u7684\u90e8\u5206\u6570\u636e\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age DESC SKIP 1 LIMIT 1; +-----------------+-----+ | Name | Age | +-----------------+-----+ | \"Manu Ginobili\" | 41 | +-----------------+-----+","title":"LIMIT and SKIP"},{"location":"3.ngql-guide/8.clauses-and-options/limit/#limit","text":"LIMIT \u5b50\u53e5\u9650\u5236\u8f93\u51fa\u7ed3\u679c\u7684\u884c\u6570\u3002 \u5728nGQL\u6269\u5c55\u4e2d\uff0c\u5fc5\u987b\u4f7f\u7528\u7ba1\u9053\u7b26\uff08|\uff09\uff0c\u53ef\u4ee5\u5ffd\u7565\u504f\u79fb\u91cf\u3002 \u5728openCypher\u65b9\u5f0f\u4e2d\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u7ba1\u9053\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 SKIP \u6307\u660e\u504f\u79fb\u91cf\u3002 \u8bf4\u660e \uff1a\u5728nGQL\u6269\u5c55\u6216openCypher\u65b9\u5f0f\u4e2d\u4f7f\u7528 LIMIT \u65f6\uff0c\u4f7f\u7528 ORDER BY \u5b50\u53e5\u9650\u5236\u8f93\u51fa\u987a\u5e8f\u975e\u5e38\u91cd\u8981\uff0c\u5426\u5219\u4f1a\u8f93\u51fa\u4e00\u4e2a\u4e0d\u53ef\u9884\u77e5\u7684\u5b50\u96c6\u3002","title":"LIMIT"},{"location":"3.ngql-guide/8.clauses-and-options/limit/#ngql","text":"\u5728nGQL\u6269\u5c55\u4e2d\uff0c LIMIT \u7684\u5de5\u4f5c\u539f\u7406\u4e0e SQL \u76f8\u540c\uff0c\u5fc5\u987b\u548c\u7ba1\u9053\u7b26\u4e00\u8d77\u4f7f\u7528\u3002 LIMIT \u5b50\u53e5\u63a5\u6536\u4e00\u4e2a\u6216\u4e24\u4e2a\u53c2\u6570\u3002\u53c2\u6570\u7684\u503c\u5fc5\u987b\u662f\u975e\u8d1f\u6574\u6570\u3002 YIELD <var> [| LIMIT [<offset_value>,] <number_rows>]; \u53c2\u6570 \u8bf4\u660e var \u6392\u5e8f\u7684\u5217\u6216\u8ba1\u7b97\u7ed3\u679c\u3002 offset_value \u504f\u79fb\u91cf\uff0c\u5373\u5b9a\u4e49\u4ece\u54ea\u4e00\u884c\u5f00\u59cb\u8fd4\u56de\u3002\u7d22\u5f15\u4ece 0 \u5f00\u59cb\u3002\u9ed8\u8ba4\u503c\u4e3a 0 \uff0c\u8868\u793a\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\u8fd4\u56de\u3002 number_rows \u8fd4\u56de\u7684\u603b\u884c\u6570\u3002","title":"nGQL\u6269\u5c55\u8bed\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/limit/#_1","text":"# \u4ece\u6392\u5e8f\u7ed3\u679c\u4e2d\u8fd4\u56de\u7b2c2\u884c\u5f00\u59cb\u76843\u884c\u6570\u636e\u3002 nebula> GO FROM \"player100\" OVER follow REVERSELY \\ YIELD $$.player.name AS Friend, $$.player.age AS Age \\ | ORDER BY Age,Friend \\ | LIMIT 1, 3; +-------------------+-----+ | Friend | Age | +-------------------+-----+ | \"Danny Green\" | 31 | +-------------------+-----+ | \"Aron Baynes\" | 32 | +-------------------+-----+ | \"Marco Belinelli\" | 32 | +-------------------+-----+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/8.clauses-and-options/limit/#opencypher","text":"RETURN <var> [SKIP <offset>] [LIMIT <number_rows>]; \u53c2\u6570 \u8bf4\u660e var \u6392\u5e8f\u7684\u5217\u6216\u8ba1\u7b97\u7ed3\u679c\u3002 offset \u504f\u79fb\u91cf\uff0c\u5373\u5b9a\u4e49\u4ece\u54ea\u4e00\u884c\u5f00\u59cb\u8fd4\u56de\u3002\u7d22\u5f15\u4ece 0 \u5f00\u59cb\u3002\u9ed8\u8ba4\u503c\u4e3a 0 \uff0c\u8868\u793a\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\u8fd4\u56de\u3002 number_rows \u8fd4\u56de\u7684\u603b\u884c\u6570\u91cf\u3002 offset \u548c number_rows \u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5fc5\u987b\u662f\u975e\u8d1f\u6574\u6570\u3002 \u8bf4\u660e \uff1a\u4e24\u4e2a\u6574\u6570\u7ec4\u6210\u7684\u5206\u6570\u8868\u8fbe\u5f0f\u4f1a\u81ea\u52a8\u5411\u4e0b\u53d6\u6574\u3002\u4f8b\u5982 8/6 \u5411\u4e0b\u53d6\u6574\u4e3a1\u3002","title":"openCypher\u65b9\u5f0f\u8bed\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/limit/#_2","text":"nebula> MATCH (v:player) RETURN v.name AS Name, v.age AS Age \\ ORDER BY Age LIMIT 5; +-------------------------+-----+ | Name | Age | +-------------------------+-----+ | \"Luka Doncic\" | 20 | +-------------------------+-----+ | \"Ben Simmons\" | 22 | +-------------------------+-----+ | \"Kristaps Porzingis\" | 23 | +-------------------------+-----+ | \"Giannis Antetokounmpo\" | 24 | +-------------------------+-----+ | \"Kyle Anderson\" | 25 | +-------------------------+-----+ nebula> MATCH (v:player) RETURN v.name AS Name, v.age AS Age \\ ORDER BY Age LIMIT rand32(5); +-------------------------+-----+ | Name | Age | +-------------------------+-----+ | \"Luka Doncic\" | 20 | +-------------------------+-----+ | \"Ben Simmons\" | 22 | +-------------------------+-----+ | \"Kristaps Porzingis\" | 23 | +-------------------------+-----+ | \"Giannis Antetokounmpo\" | 24 | +-------------------------+-----+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/8.clauses-and-options/limit/#skip","text":"\u60a8\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528 SKIP <offset> \u8bbe\u7f6e\u504f\u79fb\u91cf\uff0c\u540e\u9762\u4e0d\u9700\u8981\u6dfb\u52a0 LIMIT <number_rows> \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age DESC SKIP 1; +-----------------+-----+ | Name | Age | +-----------------+-----+ | \"Manu Ginobili\" | 41 | +-----------------+-----+ | \"Tony Parker\" | 36 | +-----------------+-----+ nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age DESC SKIP 1+1; +---------------+-----+ | Name | Age | +---------------+-----+ | \"Tony Parker\" | 36 | +---------------+-----+ \u60a8\u4e5f\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528 SKIP <offset> \u548c LIMIT <number_rows> \uff0c\u8fd4\u56de\u4e2d\u95f4\u7684\u90e8\u5206\u6570\u636e\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age DESC SKIP 1 LIMIT 1; +-----------------+-----+ | Name | Age | +-----------------+-----+ | \"Manu Ginobili\" | 41 | +-----------------+-----+","title":"SKIP\u793a\u4f8b"},{"location":"3.ngql-guide/8.clauses-and-options/order-by/","text":"ORDER BY \u00b6 ORDER BY \u5b50\u53e5\u6307\u5b9a\u8f93\u51fa\u7ed3\u679c\u7684\u6392\u5e8f\u89c4\u5219\u3002 \u5728nGQL\u6269\u5c55\u4e2d\uff0c\u5fc5\u987b\u5728 YIELD \u5b50\u53e5\u4e4b\u540e\u4f7f\u7528\u7ba1\u9053\u7b26\uff08|\uff09\u548c ORDER BY \u5b50\u53e5\u3002 \u5728openCypher\u65b9\u5f0f\u4e2d\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u7ba1\u9053\u7b26\u3002\u5728 RETURN \u5b50\u53e5\u4e4b\u540e\u4f7f\u7528 ORDER BY \u5b50\u53e5\u3002 \u6392\u5e8f\u89c4\u5219\u5206\u4e3a\u5982\u4e0b\u4e24\u79cd\uff1a ASC \uff08\u9ed8\u8ba4\uff09: \u5347\u5e8f\u3002 DESC : \u964d\u5e8f\u3002 nGQL\u6269\u5c55\u8bed\u6cd5 \u00b6 <YIELD clause> ORDER BY <expression> [ASC | DESC] [, <expression> [ASC | DESC] ...]; \u793a\u4f8b \u00b6 nebula> FETCH PROP ON player \"player100\", \"player101\", \"player102\", \"player103\" \\ YIELD player.age AS age, player.name AS name \\ | ORDER BY age ASC, name DESC; +-------------+-----+---------------------+ | VertexID | age | name | +-------------+-----+---------------------+ | \"player103\" | 32 | \"Rudy Gay\" | +-------------+-----+---------------------+ | \"player102\" | 33 | \"LaMarcus Aldridge\" | +-------------+-----+---------------------+ | \"player101\" | 36 | \"Tony Parker\" | +-------------+-----+---------------------+ | \"player100\" | 42 | \"Tim Duncan\" | +-------------+-----+---------------------+ OpenCypher\u65b9\u5f0f\u8bed\u6cd5 \u00b6 <RETURN clause> ORDER BY <expression> [ASC | DESC] [, <expression> [ASC | DESC] ...]; \u793a\u4f8b \u00b6 nebula> MATCH (v:player) RETURN v.name AS Name, v.age AS Age \\ ORDER BY Name DESC; +-----------------+-----+ | Name | Age | +-----------------+-----+ | \"Yao Ming\" | 38 | +-----------------+-----+ | \"Vince Carter\" | 42 | +-----------------+-----+ | \"Tracy McGrady\" | 39 | +-----------------+-----+ | \"Tony Parker\" | 36 | +-----------------+-----+ | \"Tim Duncan\" | 42 | +-----------------+-----+ ... # \u9996\u5148\u4ee5\u5e74\u9f84\u6392\u5e8f\uff0c\u5982\u679c\u5e74\u9f84\u76f8\u540c\uff0c\u518d\u4ee5\u59d3\u540d\u6392\u5e8f\u3002 nebula> MATCH (v:player) RETURN v.age AS Age, v.name AS Name \\ ORDER BY Age DESC, Name ASC; +-----+-------------------+ | Age | Name | +-----+-------------------+ | 47 | \"Shaquille O'Neal\" | +-----+-------------------+ | 46 | \"Grant Hill\" | +-----+-------------------+ | 45 | \"Jason Kidd\" | +-----+-------------------+ | 45 | \"Steve Nash\" | +-----+-------------------+ ... NULL\u503c\u7684\u6392\u5e8f \u00b6 \u5347\u5e8f\u6392\u5217\u65f6\uff0c\u4f1a\u5728\u8f93\u51fa\u7684\u6700\u540e\u5217\u51faNULL\u503c\uff0c\u964d\u5e8f\u6392\u5217\u65f6\uff0c\u4f1a\u5728\u8f93\u51fa\u7684\u5f00\u5934\u5217\u51faNULL\u503c\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age; +-----------------+----------+ | Name | Age | +-----------------+----------+ | \"Tony Parker\" | 36 | +-----------------+----------+ | \"Manu Ginobili\" | 41 | +-----------------+----------+ | \"Spurs\" | __NULL__ | +-----------------+----------+ nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age DESC; +-----------------+----------+ | Name | Age | +-----------------+----------+ | \"Spurs\" | __NULL__ | +-----------------+----------+ | \"Manu Ginobili\" | 41 | +-----------------+----------+ | \"Tony Parker\" | 36 | +-----------------+----------+","title":"ORDER BY"},{"location":"3.ngql-guide/8.clauses-and-options/order-by/#order_by","text":"ORDER BY \u5b50\u53e5\u6307\u5b9a\u8f93\u51fa\u7ed3\u679c\u7684\u6392\u5e8f\u89c4\u5219\u3002 \u5728nGQL\u6269\u5c55\u4e2d\uff0c\u5fc5\u987b\u5728 YIELD \u5b50\u53e5\u4e4b\u540e\u4f7f\u7528\u7ba1\u9053\u7b26\uff08|\uff09\u548c ORDER BY \u5b50\u53e5\u3002 \u5728openCypher\u65b9\u5f0f\u4e2d\uff0c\u4e0d\u5141\u8bb8\u4f7f\u7528\u7ba1\u9053\u7b26\u3002\u5728 RETURN \u5b50\u53e5\u4e4b\u540e\u4f7f\u7528 ORDER BY \u5b50\u53e5\u3002 \u6392\u5e8f\u89c4\u5219\u5206\u4e3a\u5982\u4e0b\u4e24\u79cd\uff1a ASC \uff08\u9ed8\u8ba4\uff09: \u5347\u5e8f\u3002 DESC : \u964d\u5e8f\u3002","title":"ORDER BY"},{"location":"3.ngql-guide/8.clauses-and-options/order-by/#ngql","text":"<YIELD clause> ORDER BY <expression> [ASC | DESC] [, <expression> [ASC | DESC] ...];","title":"nGQL\u6269\u5c55\u8bed\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/order-by/#_1","text":"nebula> FETCH PROP ON player \"player100\", \"player101\", \"player102\", \"player103\" \\ YIELD player.age AS age, player.name AS name \\ | ORDER BY age ASC, name DESC; +-------------+-----+---------------------+ | VertexID | age | name | +-------------+-----+---------------------+ | \"player103\" | 32 | \"Rudy Gay\" | +-------------+-----+---------------------+ | \"player102\" | 33 | \"LaMarcus Aldridge\" | +-------------+-----+---------------------+ | \"player101\" | 36 | \"Tony Parker\" | +-------------+-----+---------------------+ | \"player100\" | 42 | \"Tim Duncan\" | +-------------+-----+---------------------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/8.clauses-and-options/order-by/#opencypher","text":"<RETURN clause> ORDER BY <expression> [ASC | DESC] [, <expression> [ASC | DESC] ...];","title":"OpenCypher\u65b9\u5f0f\u8bed\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/order-by/#_2","text":"nebula> MATCH (v:player) RETURN v.name AS Name, v.age AS Age \\ ORDER BY Name DESC; +-----------------+-----+ | Name | Age | +-----------------+-----+ | \"Yao Ming\" | 38 | +-----------------+-----+ | \"Vince Carter\" | 42 | +-----------------+-----+ | \"Tracy McGrady\" | 39 | +-----------------+-----+ | \"Tony Parker\" | 36 | +-----------------+-----+ | \"Tim Duncan\" | 42 | +-----------------+-----+ ... # \u9996\u5148\u4ee5\u5e74\u9f84\u6392\u5e8f\uff0c\u5982\u679c\u5e74\u9f84\u76f8\u540c\uff0c\u518d\u4ee5\u59d3\u540d\u6392\u5e8f\u3002 nebula> MATCH (v:player) RETURN v.age AS Age, v.name AS Name \\ ORDER BY Age DESC, Name ASC; +-----+-------------------+ | Age | Name | +-----+-------------------+ | 47 | \"Shaquille O'Neal\" | +-----+-------------------+ | 46 | \"Grant Hill\" | +-----+-------------------+ | 45 | \"Jason Kidd\" | +-----+-------------------+ | 45 | \"Steve Nash\" | +-----+-------------------+ ...","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/8.clauses-and-options/order-by/#null","text":"\u5347\u5e8f\u6392\u5217\u65f6\uff0c\u4f1a\u5728\u8f93\u51fa\u7684\u6700\u540e\u5217\u51faNULL\u503c\uff0c\u964d\u5e8f\u6392\u5217\u65f6\uff0c\u4f1a\u5728\u8f93\u51fa\u7684\u5f00\u5934\u5217\u51faNULL\u503c\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age; +-----------------+----------+ | Name | Age | +-----------------+----------+ | \"Tony Parker\" | 36 | +-----------------+----------+ | \"Manu Ginobili\" | 41 | +-----------------+----------+ | \"Spurs\" | __NULL__ | +-----------------+----------+ nebula> MATCH (v:player{name:\"Tim Duncan\"}) --> (v2) \\ RETURN v2.name AS Name, v2.age AS Age \\ ORDER BY Age DESC; +-----------------+----------+ | Name | Age | +-----------------+----------+ | \"Spurs\" | __NULL__ | +-----------------+----------+ | \"Manu Ginobili\" | 41 | +-----------------+----------+ | \"Tony Parker\" | 36 | +-----------------+----------+","title":"NULL\u503c\u7684\u6392\u5e8f"},{"location":"3.ngql-guide/8.clauses-and-options/return/","text":"RETURN \u00b6 RETURN \u5b50\u53e5\u5b9a\u4e49\u4e86nGQL\u67e5\u8be2\u7684\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u9700\u8981\u8fd4\u56de\u591a\u4e2a\u5b57\u6bb5\uff0c\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 RETURN \u53ef\u4ee5\u5f15\u5bfc\u5b50\u53e5\u6216\u8bed\u53e5\uff1a RETURN \u5b50\u53e5\u53ef\u4ee5\u7528\u4e8enGQL\u4e2d\u7684openCypher\u65b9\u5f0f\u8bed\u53e5\u4e2d\uff0c\u4f8b\u5982 MATCH \u6216 UNWIND \u3002 RETURN \u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\uff0c\u8f93\u51fa\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u4e2d\u7684openCypher\u65b9\u5f0f\u3002\u5173\u4e8enGQL\u6269\u5c55\u5982\u4f55\u5b9a\u4e49\u8f93\u51fa\u7ed3\u679c\uff0c\u8bf7\u53c2\u89c1 YIELD \u3002 RETURN \u6682\u4e0d\u652f\u6301\u5982\u4e0bopenCypher\u529f\u80fd\uff1a \u4f7f\u7528\u4e0d\u5728\u82f1\u6587\u5b57\u6bcd\u8868\u4e2d\u7684\u5b57\u7b26\u4f5c\u4e3a\u53d8\u91cf\u540d\u3002\u4f8b\u5982\uff1a MATCH (`\u70b91`:player) \\ RETURN `\u70b91`; \u8bbe\u7f6e\u4e00\u4e2a\u6a21\u5f0f\uff0c\u5e76\u8fd4\u56de\u8be5\u6a21\u5f0f\u5339\u914d\u7684\u6240\u6709\u5143\u7d20\u3002\u4f8b\u5982\uff1a MATCH (v:player) \\ RETURN (v)-[e]->(v2); \u5386\u53f2\u7248\u672c\u517c\u5bb9\u6027 \u00b6 \u5728nGQL 1.x\u4e2d\uff0c RETURN \u9002\u7528\u4e8enGQL\u6269\u5c55\uff0c\u8bed\u6cd5\u4e3a RETURN <var_ref> IF <var_ref> IS NOT NULL \u3002 \u5728nGQL 2.0\u4e2d\uff0c RETURN \u4e0d\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u8fd4\u56de\u70b9 \u00b6 nebula> MATCH (v:player) \\ RETURN v; +---------------------------------------------------------------+ | v | +---------------------------------------------------------------+ | (\"player104\" :player{age: 32, name: \"Marco Belinelli\"}) | +---------------------------------------------------------------+ | (\"player107\" :player{age: 32, name: \"Aron Baynes\"}) | +---------------------------------------------------------------+ | (\"player116\" :player{age: 34, name: \"LeBron James\"}) | +---------------------------------------------------------------+ | (\"player120\" :player{age: 29, name: \"James Harden\"}) | +---------------------------------------------------------------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | +---------------------------------------------------------------+ ... \u8fd4\u56de\u8fb9 \u00b6 nebula> MATCH (v:player)-[e]->() \\ RETURN e; +------------------------------------------------------------------------------+ | e | +------------------------------------------------------------------------------+ | [:follow \"player104\"->\"player100\" @0 {degree: 55}] | +------------------------------------------------------------------------------+ | [:follow \"player104\"->\"player101\" @0 {degree: 50}] | +------------------------------------------------------------------------------+ | [:follow \"player104\"->\"player105\" @0 {degree: 60}] | +------------------------------------------------------------------------------+ | [:serve \"player104\"->\"team200\" @0 {end_year: 2009, start_year: 2007}] | +------------------------------------------------------------------------------+ | [:serve \"player104\"->\"team208\" @0 {end_year: 2016, start_year: 2015}] | +------------------------------------------------------------------------------+ ... \u8fd4\u56de\u5c5e\u6027 \u00b6 \u4f7f\u7528\u8bed\u6cd5 {<vertex_name>|<edge_name>}.<property> \u8fd4\u56de\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 nebula> MATCH (v:player) \\ RETURN v.name, v.age \\ LIMIT 3; +-------------------+-------+ | v.name | v.age | +-------------------+-------+ | \"Rajon Rondo\" | 33 | +-------------------+-------+ | \"Rudy Gay\" | 32 | +-------------------+-------+ | \"Dejounte Murray\" | 29 | +-------------------+-------+ \u8fd4\u56de\u6240\u6709\u5143\u7d20 \u00b6 \u4f7f\u7528\u661f\u53f7\uff08*\uff09\u8fd4\u56de\u5339\u914d\u6a21\u5f0f\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN *; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------+ nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e]->(v2) \\ RETURN *; +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ | v | e | v2 | +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | [:follow \"player100\"->\"player101\" @0 {degree: 95}] | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | [:follow \"player100\"->\"player125\" @0 {degree: 95}] | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | (\"team204\" :team{name: \"Spurs\"}) | +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ \u91cd\u547d\u540d\u5b57\u6bb5 \u00b6 \u4f7f\u7528\u8bed\u6cd5 AS <alias> \u91cd\u547d\u540d\u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u5b57\u6bb5\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[:serve]->(v2) \\ RETURN v2.name AS Team; +---------+ | Team | +---------+ | \"Spurs\" | +---------+ nebula> RETURN \"Amber\" AS Name; +---------+ | Name | +---------+ | \"Amber\" | +---------+ \u8fd4\u56de\u4e0d\u5b58\u5728\u7684\u5c5e\u6027 \u00b6 \u5982\u679c\u5339\u914d\u7684\u7ed3\u679c\u4e2d\uff0c\u67d0\u4e2a\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u4f1a\u8fd4\u56de NULL \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e]->(v2) \\ RETURN v2.name, type(e), v2.age; +-----------------+----------+----------+ | v2.name | type(e) | v2.age | +-----------------+----------+----------+ | \"Tony Parker\" | \"follow\" | 36 | +-----------------+----------+----------+ | \"Manu Ginobili\" | \"follow\" | 41 | +-----------------+----------+----------+ | \"Spurs\" | \"serve\" | __NULL__ | +-----------------+----------+----------+ \u8fd4\u56de\u8868\u8fbe\u5f0f\u7ed3\u679c \u00b6 RETURN \u8bed\u53e5\u53ef\u4ee5\u8fd4\u56de\u6587\u5b57\u3001\u51fd\u6570\u6216\u8c13\u8bcd\u7b49\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002 nebula> MATCH (v:player{name:\"Tony Parker\"})-->(v2:player) \\ RETURN DISTINCT v2.name, \"Hello\"+\" graphs!\", v2.age > 35; +---------------------+------------------+-------------+ | v2.name | (Hello+ graphs!) | (v2.age>35) | +---------------------+------------------+-------------+ | \"Tim Duncan\" | \"Hello graphs!\" | true | +---------------------+------------------+-------------+ | \"LaMarcus Aldridge\" | \"Hello graphs!\" | false | +---------------------+------------------+-------------+ | \"Manu Ginobili\" | \"Hello graphs!\" | true | +---------------------+------------------+-------------+ nebula> RETURN 1+1; +-------+ | (1+1) | +-------+ | 2 | +-------+ nebula> RETURN 3 > 1; +-------+ | (3>1) | +-------+ | true | +-------+ RETURN 1+1, rand32(1, 5); +-------+-------------+ | (1+1) | rand32(1,5) | +-------+-------------+ | 2 | 1 | +-------+-------------+ \u8fd4\u56de\u552f\u4e00\u5b57\u6bb5 \u00b6 \u4f7f\u7528 DISTINCT \u53ef\u4ee5\u5220\u9664\u7ed3\u679c\u96c6\u4e2d\u7684\u91cd\u590d\u5b57\u6bb5\u3002 # \u672a\u4f7f\u7528DISTINCT\u3002 nebula> MATCH (v:player{name:\"Tony Parker\"})--(v2:player) \\ RETURN v2.name, v2.age; +---------------------+--------+ | v2.name | v2.age | +---------------------+--------+ | \"Tim Duncan\" | 42 | +---------------------+--------+ | \"LaMarcus Aldridge\" | 33 | +---------------------+--------+ | \"Marco Belinelli\" | 32 | +---------------------+--------+ | \"Boris Diaw\" | 36 | +---------------------+--------+ | \"Dejounte Murray\" | 29 | +---------------------+--------+ | \"Tim Duncan\" | 42 | +---------------------+--------+ | \"LaMarcus Aldridge\" | 33 | +---------------------+--------+ | \"Manu Ginobili\" | 41 | +---------------------+--------+ Got 8 rows (time spent 3273/3893 us) # \u4f7f\u7528DISTINCT\u3002 nebula> MATCH (v:player{name:\"Tony Parker\"})--(v2:player) \\ RETURN DISTINCT v2.name, v2.age; +---------------------+--------+ | v2.name | v2.age | +---------------------+--------+ | \"Tim Duncan\" | 42 | +---------------------+--------+ | \"LaMarcus Aldridge\" | 33 | +---------------------+--------+ | \"Marco Belinelli\" | 32 | +---------------------+--------+ | \"Boris Diaw\" | 36 | +---------------------+--------+ | \"Dejounte Murray\" | 29 | +---------------------+--------+ | \"Manu Ginobili\" | 41 | +---------------------+--------+","title":"RETURN"},{"location":"3.ngql-guide/8.clauses-and-options/return/#return","text":"RETURN \u5b50\u53e5\u5b9a\u4e49\u4e86nGQL\u67e5\u8be2\u7684\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u9700\u8981\u8fd4\u56de\u591a\u4e2a\u5b57\u6bb5\uff0c\u7528\u82f1\u6587\u9017\u53f7\uff08,\uff09\u5206\u9694\u3002 RETURN \u53ef\u4ee5\u5f15\u5bfc\u5b50\u53e5\u6216\u8bed\u53e5\uff1a RETURN \u5b50\u53e5\u53ef\u4ee5\u7528\u4e8enGQL\u4e2d\u7684openCypher\u65b9\u5f0f\u8bed\u53e5\u4e2d\uff0c\u4f8b\u5982 MATCH \u6216 UNWIND \u3002 RETURN \u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\uff0c\u8f93\u51fa\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002","title":"RETURN"},{"location":"3.ngql-guide/8.clauses-and-options/return/#opencypher","text":"\u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u4e2d\u7684openCypher\u65b9\u5f0f\u3002\u5173\u4e8enGQL\u6269\u5c55\u5982\u4f55\u5b9a\u4e49\u8f93\u51fa\u7ed3\u679c\uff0c\u8bf7\u53c2\u89c1 YIELD \u3002 RETURN \u6682\u4e0d\u652f\u6301\u5982\u4e0bopenCypher\u529f\u80fd\uff1a \u4f7f\u7528\u4e0d\u5728\u82f1\u6587\u5b57\u6bcd\u8868\u4e2d\u7684\u5b57\u7b26\u4f5c\u4e3a\u53d8\u91cf\u540d\u3002\u4f8b\u5982\uff1a MATCH (`\u70b91`:player) \\ RETURN `\u70b91`; \u8bbe\u7f6e\u4e00\u4e2a\u6a21\u5f0f\uff0c\u5e76\u8fd4\u56de\u8be5\u6a21\u5f0f\u5339\u914d\u7684\u6240\u6709\u5143\u7d20\u3002\u4f8b\u5982\uff1a MATCH (v:player) \\ RETURN (v)-[e]->(v2);","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_1","text":"\u5728nGQL 1.x\u4e2d\uff0c RETURN \u9002\u7528\u4e8enGQL\u6269\u5c55\uff0c\u8bed\u6cd5\u4e3a RETURN <var_ref> IF <var_ref> IS NOT NULL \u3002 \u5728nGQL 2.0\u4e2d\uff0c RETURN \u4e0d\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"\u5386\u53f2\u7248\u672c\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_2","text":"nebula> MATCH (v:player) \\ RETURN v; +---------------------------------------------------------------+ | v | +---------------------------------------------------------------+ | (\"player104\" :player{age: 32, name: \"Marco Belinelli\"}) | +---------------------------------------------------------------+ | (\"player107\" :player{age: 32, name: \"Aron Baynes\"}) | +---------------------------------------------------------------+ | (\"player116\" :player{age: 34, name: \"LeBron James\"}) | +---------------------------------------------------------------+ | (\"player120\" :player{age: 29, name: \"James Harden\"}) | +---------------------------------------------------------------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | +---------------------------------------------------------------+ ...","title":"\u8fd4\u56de\u70b9"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_3","text":"nebula> MATCH (v:player)-[e]->() \\ RETURN e; +------------------------------------------------------------------------------+ | e | +------------------------------------------------------------------------------+ | [:follow \"player104\"->\"player100\" @0 {degree: 55}] | +------------------------------------------------------------------------------+ | [:follow \"player104\"->\"player101\" @0 {degree: 50}] | +------------------------------------------------------------------------------+ | [:follow \"player104\"->\"player105\" @0 {degree: 60}] | +------------------------------------------------------------------------------+ | [:serve \"player104\"->\"team200\" @0 {end_year: 2009, start_year: 2007}] | +------------------------------------------------------------------------------+ | [:serve \"player104\"->\"team208\" @0 {end_year: 2016, start_year: 2015}] | +------------------------------------------------------------------------------+ ...","title":"\u8fd4\u56de\u8fb9"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_4","text":"\u4f7f\u7528\u8bed\u6cd5 {<vertex_name>|<edge_name>}.<property> \u8fd4\u56de\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u3002 nebula> MATCH (v:player) \\ RETURN v.name, v.age \\ LIMIT 3; +-------------------+-------+ | v.name | v.age | +-------------------+-------+ | \"Rajon Rondo\" | 33 | +-------------------+-------+ | \"Rudy Gay\" | 32 | +-------------------+-------+ | \"Dejounte Murray\" | 29 | +-------------------+-------+","title":"\u8fd4\u56de\u5c5e\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_5","text":"\u4f7f\u7528\u661f\u53f7\uff08*\uff09\u8fd4\u56de\u5339\u914d\u6a21\u5f0f\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"}) \\ RETURN *; +----------------------------------------------------+ | v | +----------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------+ nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e]->(v2) \\ RETURN *; +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ | v | e | v2 | +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | [:follow \"player100\"->\"player101\" @0 {degree: 95}] | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | [:follow \"player100\"->\"player125\" @0 {degree: 95}] | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+ | (\"player100\" :player{age: 42, name: \"Tim Duncan\"}) | [:serve \"player100\"->\"team204\" @0 {end_year: 2016, start_year: 1997}] | (\"team204\" :team{name: \"Spurs\"}) | +----------------------------------------------------+-----------------------------------------------------------------------+-------------------------------------------------------+","title":"\u8fd4\u56de\u6240\u6709\u5143\u7d20"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_6","text":"\u4f7f\u7528\u8bed\u6cd5 AS <alias> \u91cd\u547d\u540d\u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u5b57\u6bb5\u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[:serve]->(v2) \\ RETURN v2.name AS Team; +---------+ | Team | +---------+ | \"Spurs\" | +---------+ nebula> RETURN \"Amber\" AS Name; +---------+ | Name | +---------+ | \"Amber\" | +---------+","title":"\u91cd\u547d\u540d\u5b57\u6bb5"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_7","text":"\u5982\u679c\u5339\u914d\u7684\u7ed3\u679c\u4e2d\uff0c\u67d0\u4e2a\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u4f1a\u8fd4\u56de NULL \u3002 nebula> MATCH (v:player{name:\"Tim Duncan\"})-[e]->(v2) \\ RETURN v2.name, type(e), v2.age; +-----------------+----------+----------+ | v2.name | type(e) | v2.age | +-----------------+----------+----------+ | \"Tony Parker\" | \"follow\" | 36 | +-----------------+----------+----------+ | \"Manu Ginobili\" | \"follow\" | 41 | +-----------------+----------+----------+ | \"Spurs\" | \"serve\" | __NULL__ | +-----------------+----------+----------+","title":"\u8fd4\u56de\u4e0d\u5b58\u5728\u7684\u5c5e\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_8","text":"RETURN \u8bed\u53e5\u53ef\u4ee5\u8fd4\u56de\u6587\u5b57\u3001\u51fd\u6570\u6216\u8c13\u8bcd\u7b49\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002 nebula> MATCH (v:player{name:\"Tony Parker\"})-->(v2:player) \\ RETURN DISTINCT v2.name, \"Hello\"+\" graphs!\", v2.age > 35; +---------------------+------------------+-------------+ | v2.name | (Hello+ graphs!) | (v2.age>35) | +---------------------+------------------+-------------+ | \"Tim Duncan\" | \"Hello graphs!\" | true | +---------------------+------------------+-------------+ | \"LaMarcus Aldridge\" | \"Hello graphs!\" | false | +---------------------+------------------+-------------+ | \"Manu Ginobili\" | \"Hello graphs!\" | true | +---------------------+------------------+-------------+ nebula> RETURN 1+1; +-------+ | (1+1) | +-------+ | 2 | +-------+ nebula> RETURN 3 > 1; +-------+ | (3>1) | +-------+ | true | +-------+ RETURN 1+1, rand32(1, 5); +-------+-------------+ | (1+1) | rand32(1,5) | +-------+-------------+ | 2 | 1 | +-------+-------------+","title":"\u8fd4\u56de\u8868\u8fbe\u5f0f\u7ed3\u679c"},{"location":"3.ngql-guide/8.clauses-and-options/return/#_9","text":"\u4f7f\u7528 DISTINCT \u53ef\u4ee5\u5220\u9664\u7ed3\u679c\u96c6\u4e2d\u7684\u91cd\u590d\u5b57\u6bb5\u3002 # \u672a\u4f7f\u7528DISTINCT\u3002 nebula> MATCH (v:player{name:\"Tony Parker\"})--(v2:player) \\ RETURN v2.name, v2.age; +---------------------+--------+ | v2.name | v2.age | +---------------------+--------+ | \"Tim Duncan\" | 42 | +---------------------+--------+ | \"LaMarcus Aldridge\" | 33 | +---------------------+--------+ | \"Marco Belinelli\" | 32 | +---------------------+--------+ | \"Boris Diaw\" | 36 | +---------------------+--------+ | \"Dejounte Murray\" | 29 | +---------------------+--------+ | \"Tim Duncan\" | 42 | +---------------------+--------+ | \"LaMarcus Aldridge\" | 33 | +---------------------+--------+ | \"Manu Ginobili\" | 41 | +---------------------+--------+ Got 8 rows (time spent 3273/3893 us) # \u4f7f\u7528DISTINCT\u3002 nebula> MATCH (v:player{name:\"Tony Parker\"})--(v2:player) \\ RETURN DISTINCT v2.name, v2.age; +---------------------+--------+ | v2.name | v2.age | +---------------------+--------+ | \"Tim Duncan\" | 42 | +---------------------+--------+ | \"LaMarcus Aldridge\" | 33 | +---------------------+--------+ | \"Marco Belinelli\" | 32 | +---------------------+--------+ | \"Boris Diaw\" | 36 | +---------------------+--------+ | \"Dejounte Murray\" | 29 | +---------------------+--------+ | \"Manu Ginobili\" | 41 | +---------------------+--------+","title":"\u8fd4\u56de\u552f\u4e00\u5b57\u6bb5"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/","text":"TTL \u00b6 TTL\uff08Time To Live\uff09\u6307\u5b9a\u5c5e\u6027\u7684\u5b58\u6d3b\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\uff0c\u8be5\u5c5e\u6027\u5c31\u4f1a\u8fc7\u671f\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u4e0d\u80fd\u4fee\u6539\u5e26\u6709TTL\u9009\u9879\u7684\u5c5e\u6027\u3002 \u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u4e0a\u4e0d\u80fd\u540c\u65f6\u5b58\u5728TTL\u9009\u9879\u548c\u7d22\u5f15\uff0c\u5373\u4f7f\u5728\u4e0d\u540c\u5c5e\u6027\u4e0a\u5206\u522b\u8bbe\u7f6e\u4e5f\u4e0d\u884c\u3002 \u5c5e\u6027\u8fc7\u671f \u00b6 \u70b9\u5c5e\u6027\u8fc7\u671f \u00b6 \u70b9\u5c5e\u6027\u8fc7\u671f\u6709\u5982\u4e0b\u5f71\u54cd\uff1a \u5982\u679c\u4e00\u4e2a\u70b9\u4ec5\u6709\u4e00\u4e2a\u6807\u7b7e\uff0c\u70b9\u4e0a\u7684\u4e00\u4e2a\u5c5e\u6027\u8fc7\u671f\uff0c\u70b9\u4e5f\u4f1a\u8fc7\u671f\u3002 \u5982\u679c\u4e00\u4e2a\u70b9\u6709\u591a\u4e2a\u6807\u7b7e\uff0c\u70b9\u4e0a\u7684\u4e00\u4e2a\u5c5e\u6027\u8fc7\u671f\uff0c\u548c\u8be5\u5c5e\u6027\u76f8\u540c\u6807\u7b7e\u7684\u5176\u4ed6\u5c5e\u6027\u4e5f\u4f1a\u8fc7\u671f\uff0c\u4f46\u662f\u70b9\u4e0d\u4f1a\u8fc7\u671f\uff0c\u70b9\u4e0a\u5176\u4ed6\u6807\u7b7e\u7684\u5c5e\u6027\u4fdd\u6301\u4e0d\u53d8\u3002 \u8fb9\u5c5e\u6027\u8fc7\u671f \u00b6 \u56e0\u4e3a\u4e00\u6761\u8fb9\u4ec5\u6709\u4e00\u4e2a\u8fb9\u7c7b\u578b\uff0c\u8fb9\u4e0a\u7684\u4e00\u4e2a\u5c5e\u6027\u8fc7\u671f\uff0c\u8fb9\u4e5f\u4f1a\u8fc7\u671f\u3002 \u8fc7\u671f\u5904\u7406 \u00b6 \u5c5e\u6027\u8fc7\u671f\u540e\uff0c\u5bf9\u5e94\u7684\u8fc7\u671f\u6570\u636e\u4ecd\u7136\u5b58\u50a8\u5728\u786c\u76d8\u4e0a\uff0c\u4f46\u662f\u67e5\u8be2\u65f6\u4f1a\u8fc7\u6ee4\u8fc7\u671f\u6570\u636e\u3002 Nebula Graph\u81ea\u52a8\u5220\u9664\u8fc7\u671f\u6570\u636e\u540e\uff0c\u4f1a\u5728\u4e0b\u4e00\u6b21 Compaction \u8fc7\u7a0b\u4e2d\u56de\u6536\u786c\u76d8\u7a7a\u95f4\u3002 \u8bf4\u660e \uff1a\u5982\u679c \u5173\u95edTTL\u9009\u9879 \uff0c\u4e0a\u4e00\u6b21Compaction\u4e4b\u540e\u7684\u8fc7\u671f\u6570\u636e\u5c06\u53ef\u4ee5\u88ab\u67e5\u8be2\u5230\u3002 TTL\u9009\u9879 \u00b6 nGQL\u652f\u6301\u7684TTL\u9009\u9879\u5982\u4e0b\u3002 \u9009\u9879 \u8bf4\u660e ttl_col \u6307\u5b9a\u8981\u8bbe\u7f6e\u5b58\u6d3b\u65f6\u95f4\u7684\u5c5e\u6027\u3002\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f int \u6216\u8005 timestamp \u3002 ttl_duration \u6307\u5b9a\u65f6\u95f4\u6233\u5dee\u503c\uff0c\u5355\u4f4d\uff1a\u79d2\u3002\u65f6\u95f4\u6233\u5dee\u503c\u5fc5\u987b\u4e3a64\u4f4d\u975e\u8d1f\u6574\u6570\u3002\u5c5e\u6027\u503c\u548c\u65f6\u95f4\u6233\u5dee\u503c\u4e4b\u548c\u5982\u679c\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u6233\uff0c\u5c5e\u6027\u5c31\u4f1a\u8fc7\u671f\u3002\u5982\u679c ttl_duration \u4e3a 0 \uff0c\u5c5e\u6027\u6c38\u4e0d\u8fc7\u671f\u3002 \u4f7f\u7528TTl\u9009\u9879 \u00b6 \u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u5df2\u5b58\u5728 \u00b6 \u5982\u679c\u6807\u7b7e\u548c\u8fb9\u7c7b\u578b\u5df2\u7ecf\u521b\u5efa\uff0c\u8bf7\u4f7f\u7528 ALTER \u8bed\u53e5\u66f4\u65b0\u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u3002 # \u521b\u5efa\u6807\u7b7e\u3002 nebula> CREATE TAG t1 (a timestamp); # ALTER\u4fee\u6539\u6807\u7b7e\uff0c\u6dfb\u52a0TTL\u9009\u9879\u3002 nebula> ALTER TAG t1 ttl_col = \"a\", ttl_duration = 5; # \u63d2\u5165\u70b9\uff0c\u63d2\u5165\u540e5\u79d2\u8fc7\u671f\u3002 nebula> INSERT VERTEX t1(a) values \"101\":(now()); \u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u4e0d\u5b58\u5728 \u00b6 \u521b\u5efa\u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u65f6\u53ef\u4ee5\u540c\u65f6\u8bbe\u7f6eTTL\u9009\u9879\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 CREATE TAG \u548c CREATE EDGE \u3002 # \u521b\u5efa\u6807\u7b7e\u5e76\u8bbe\u7f6eTTL\u9009\u9879\u3002 nebula> CREATE TAG t2(a int, b int, c string) ttl_duration= 100, ttl_col = \"a\"; # \u63d2\u5165\u70b9\u3002\u8fc7\u671f\u65f6\u95f4\u6233\u4e3a1612778164774\uff081612778164674 + 100\uff09\u3002 nebula> INSERT VERTEX t2(a, b, c) values \"102\":(1612778164674, 30, \"Hello\"); \u5220\u9664\u5b58\u6d3b\u65f6\u95f4 \u00b6 \u5220\u9664\u5b58\u6d3b\u65f6\u95f4\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a \u5220\u9664\u8bbe\u7f6e\u5b58\u6d3b\u65f6\u95f4\u7684\u5c5e\u6027\u3002 nebula> ALTER TAG t1 DROP (a); \u8bbe\u7f6e ttl_col \u4e3a\u7a7a\u5b57\u7b26\u4e32\u3002 nebula> ALTER TAG t1 ttl_col = \"\"; \u8bbe\u7f6e ttl_duration \u4e3a 0 \u3002\u672c\u64cd\u4f5c\u53ef\u4ee5\u4fdd\u7559TTL\u9009\u9879\uff0c\u540c\u65f6\u9632\u6b62\u5c5e\u6027\u8fc7\u671f\u3002 nebula> ALTER TAG t1 ttl_duration = 0; \u8b66\u544a \uff1a\u5373\u4f7f ttl_duration \u4e3a 0 \uff0c\u60a8\u4e5f\u4e0d\u80fd\u4fee\u6539\u5bf9\u5e94\u7684\u5c5e\u6027\u3002","title":"TTL"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#ttl","text":"TTL\uff08Time To Live\uff09\u6307\u5b9a\u5c5e\u6027\u7684\u5b58\u6d3b\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\uff0c\u8be5\u5c5e\u6027\u5c31\u4f1a\u8fc7\u671f\u3002","title":"TTL"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#opencypher","text":"\u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#_1","text":"\u4e0d\u80fd\u4fee\u6539\u5e26\u6709TTL\u9009\u9879\u7684\u5c5e\u6027\u3002 \u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u4e0a\u4e0d\u80fd\u540c\u65f6\u5b58\u5728TTL\u9009\u9879\u548c\u7d22\u5f15\uff0c\u5373\u4f7f\u5728\u4e0d\u540c\u5c5e\u6027\u4e0a\u5206\u522b\u8bbe\u7f6e\u4e5f\u4e0d\u884c\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#_2","text":"","title":"\u5c5e\u6027\u8fc7\u671f"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#_3","text":"\u70b9\u5c5e\u6027\u8fc7\u671f\u6709\u5982\u4e0b\u5f71\u54cd\uff1a \u5982\u679c\u4e00\u4e2a\u70b9\u4ec5\u6709\u4e00\u4e2a\u6807\u7b7e\uff0c\u70b9\u4e0a\u7684\u4e00\u4e2a\u5c5e\u6027\u8fc7\u671f\uff0c\u70b9\u4e5f\u4f1a\u8fc7\u671f\u3002 \u5982\u679c\u4e00\u4e2a\u70b9\u6709\u591a\u4e2a\u6807\u7b7e\uff0c\u70b9\u4e0a\u7684\u4e00\u4e2a\u5c5e\u6027\u8fc7\u671f\uff0c\u548c\u8be5\u5c5e\u6027\u76f8\u540c\u6807\u7b7e\u7684\u5176\u4ed6\u5c5e\u6027\u4e5f\u4f1a\u8fc7\u671f\uff0c\u4f46\u662f\u70b9\u4e0d\u4f1a\u8fc7\u671f\uff0c\u70b9\u4e0a\u5176\u4ed6\u6807\u7b7e\u7684\u5c5e\u6027\u4fdd\u6301\u4e0d\u53d8\u3002","title":"\u70b9\u5c5e\u6027\u8fc7\u671f"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#_4","text":"\u56e0\u4e3a\u4e00\u6761\u8fb9\u4ec5\u6709\u4e00\u4e2a\u8fb9\u7c7b\u578b\uff0c\u8fb9\u4e0a\u7684\u4e00\u4e2a\u5c5e\u6027\u8fc7\u671f\uff0c\u8fb9\u4e5f\u4f1a\u8fc7\u671f\u3002","title":"\u8fb9\u5c5e\u6027\u8fc7\u671f"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#_5","text":"\u5c5e\u6027\u8fc7\u671f\u540e\uff0c\u5bf9\u5e94\u7684\u8fc7\u671f\u6570\u636e\u4ecd\u7136\u5b58\u50a8\u5728\u786c\u76d8\u4e0a\uff0c\u4f46\u662f\u67e5\u8be2\u65f6\u4f1a\u8fc7\u6ee4\u8fc7\u671f\u6570\u636e\u3002 Nebula Graph\u81ea\u52a8\u5220\u9664\u8fc7\u671f\u6570\u636e\u540e\uff0c\u4f1a\u5728\u4e0b\u4e00\u6b21 Compaction \u8fc7\u7a0b\u4e2d\u56de\u6536\u786c\u76d8\u7a7a\u95f4\u3002 \u8bf4\u660e \uff1a\u5982\u679c \u5173\u95edTTL\u9009\u9879 \uff0c\u4e0a\u4e00\u6b21Compaction\u4e4b\u540e\u7684\u8fc7\u671f\u6570\u636e\u5c06\u53ef\u4ee5\u88ab\u67e5\u8be2\u5230\u3002","title":"\u8fc7\u671f\u5904\u7406"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#ttl_1","text":"nGQL\u652f\u6301\u7684TTL\u9009\u9879\u5982\u4e0b\u3002 \u9009\u9879 \u8bf4\u660e ttl_col \u6307\u5b9a\u8981\u8bbe\u7f6e\u5b58\u6d3b\u65f6\u95f4\u7684\u5c5e\u6027\u3002\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u662f int \u6216\u8005 timestamp \u3002 ttl_duration \u6307\u5b9a\u65f6\u95f4\u6233\u5dee\u503c\uff0c\u5355\u4f4d\uff1a\u79d2\u3002\u65f6\u95f4\u6233\u5dee\u503c\u5fc5\u987b\u4e3a64\u4f4d\u975e\u8d1f\u6574\u6570\u3002\u5c5e\u6027\u503c\u548c\u65f6\u95f4\u6233\u5dee\u503c\u4e4b\u548c\u5982\u679c\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u6233\uff0c\u5c5e\u6027\u5c31\u4f1a\u8fc7\u671f\u3002\u5982\u679c ttl_duration \u4e3a 0 \uff0c\u5c5e\u6027\u6c38\u4e0d\u8fc7\u671f\u3002","title":"TTL\u9009\u9879"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#ttl_2","text":"","title":"\u4f7f\u7528TTl\u9009\u9879"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#_6","text":"\u5982\u679c\u6807\u7b7e\u548c\u8fb9\u7c7b\u578b\u5df2\u7ecf\u521b\u5efa\uff0c\u8bf7\u4f7f\u7528 ALTER \u8bed\u53e5\u66f4\u65b0\u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u3002 # \u521b\u5efa\u6807\u7b7e\u3002 nebula> CREATE TAG t1 (a timestamp); # ALTER\u4fee\u6539\u6807\u7b7e\uff0c\u6dfb\u52a0TTL\u9009\u9879\u3002 nebula> ALTER TAG t1 ttl_col = \"a\", ttl_duration = 5; # \u63d2\u5165\u70b9\uff0c\u63d2\u5165\u540e5\u79d2\u8fc7\u671f\u3002 nebula> INSERT VERTEX t1(a) values \"101\":(now());","title":"\u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u5df2\u5b58\u5728"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#_7","text":"\u521b\u5efa\u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u65f6\u53ef\u4ee5\u540c\u65f6\u8bbe\u7f6eTTL\u9009\u9879\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 CREATE TAG \u548c CREATE EDGE \u3002 # \u521b\u5efa\u6807\u7b7e\u5e76\u8bbe\u7f6eTTL\u9009\u9879\u3002 nebula> CREATE TAG t2(a int, b int, c string) ttl_duration= 100, ttl_col = \"a\"; # \u63d2\u5165\u70b9\u3002\u8fc7\u671f\u65f6\u95f4\u6233\u4e3a1612778164774\uff081612778164674 + 100\uff09\u3002 nebula> INSERT VERTEX t2(a, b, c) values \"102\":(1612778164674, 30, \"Hello\");","title":"\u6807\u7b7e\u6216\u8fb9\u7c7b\u578b\u4e0d\u5b58\u5728"},{"location":"3.ngql-guide/8.clauses-and-options/ttl-options/#_8","text":"\u5220\u9664\u5b58\u6d3b\u65f6\u95f4\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a \u5220\u9664\u8bbe\u7f6e\u5b58\u6d3b\u65f6\u95f4\u7684\u5c5e\u6027\u3002 nebula> ALTER TAG t1 DROP (a); \u8bbe\u7f6e ttl_col \u4e3a\u7a7a\u5b57\u7b26\u4e32\u3002 nebula> ALTER TAG t1 ttl_col = \"\"; \u8bbe\u7f6e ttl_duration \u4e3a 0 \u3002\u672c\u64cd\u4f5c\u53ef\u4ee5\u4fdd\u7559TTL\u9009\u9879\uff0c\u540c\u65f6\u9632\u6b62\u5c5e\u6027\u8fc7\u671f\u3002 nebula> ALTER TAG t1 ttl_duration = 0; \u8b66\u544a \uff1a\u5373\u4f7f ttl_duration \u4e3a 0 \uff0c\u60a8\u4e5f\u4e0d\u80fd\u4fee\u6539\u5bf9\u5e94\u7684\u5c5e\u6027\u3002","title":"\u5220\u9664\u5b58\u6d3b\u65f6\u95f4"},{"location":"3.ngql-guide/8.clauses-and-options/where/","text":"WHERE \u00b6 WHERE \u5b50\u53e5\u53ef\u4ee5\u6839\u636e\u6761\u4ef6\u8fc7\u6ee4\u8f93\u51fa\u7ed3\u679c\u3002 WHERE \u5b50\u53e5\u901a\u5e38\u7528\u4e8e\u5982\u4e0b\u67e5\u8be2\uff1a nGQL\u6269\u5c55\uff0c\u4f8b\u5982 GO \u548c LOOKUP \u8bed\u53e5\u3002 openCypher\u65b9\u5f0f\uff0c\u4f8b\u5982 MATCH \u548c WITH \u8bed\u53e5\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u4e0d\u652f\u6301\u5728\u6a21\u5f0f\u4e2d\u4f7f\u7528 WHERE \u5b50\u53e5\uff08TODO: planning\uff09\uff0c\u4f8b\u5982 WHERE (v)-->(v2) \u3002 \u8fc7\u6ee4rank \u662f\u539f\u751fnGQL\u529f\u80fd\u3002\u53ea\u652f\u6301\u5728nGQL\u6269\u5c55\u7684\u8bed\u53e5\uff08\u4f8b\u5982 GO \u548c LOOKUP \uff09\u4e2d\u4f7f\u7528\uff0c\u56e0\u4e3aopenCypher\u4e2d\u6ca1\u6709rank\u7684\u6982\u5ff5\u3002 \u8bed\u6cd5 \u00b6 WHERE <expression> [ AND|OR|XOR <expression> ...]); \u57fa\u7840\u7528\u6cd5 \u00b6 \u7528\u5e03\u5c14\u8fd0\u7b97\u7b26\u5b9a\u4e49\u6761\u4ef6 \u00b6 \u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528\u5e03\u5c14\u8fd0\u7b97\u7b26 NOT \u3001 AND \u3001 OR \u548c XOR \u5b9a\u4e49\u6761\u4ef6\u3002\u5173\u4e8e\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u8bf7\u53c2\u89c1 \u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 \u3002 nebula> MATCH (v:player) \\ WHERE v.name == \"Tim Duncan\" \\ XOR (v.age < 30 AND v.name == \"Yao Ming\") \\ OR NOT (v.name == \"Yao Ming\" OR v.name == \"Tim Duncan\") \\ RETURN v.name, v.age; +-------------------------+-------+ | v.name | v.age | +-------------------------+-------+ | \"Marco Belinelli\" | 32 | +-------------------------+-------+ | \"Aron Baynes\" | 32 | +-------------------------+-------+ | \"LeBron James\" | 34 | +-------------------------+-------+ | \"James Harden\" | 29 | +-------------------------+-------+ | \"Manu Ginobili\" | 41 | +-------------------------+-------+ ... nebula> GO FROM \"player100\" \\ OVER follow \\ WHERE follow.degree > 90 \\ OR $$.player.age != 33 \\ AND $$.player.name != \"Tony Parker\"; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+ \u8fc7\u6ee4\u5c5e\u6027 \u00b6 \u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u5b9a\u4e49\u6761\u4ef6\u3002 \u8fc7\u6ee4\u70b9\u5c5e\u6027\uff1a nebula> MATCH (v:player)-[e]->(v2) \\ WHERE v2.age < 25 \\ RETURN v2.name, v2.age; +----------------------+--------+ | v2.name | v2.age | +----------------------+--------+ | \"Luka Doncic\" | 20 | +----------------------+--------+ | \"Kristaps Porzingis\" | 23 | +----------------------+--------+ | \"Ben Simmons\" | 22 | +----------------------+--------+ nebula> GO FROM \"player100\" \\ OVER follow \\ WHERE $^.player.age >= 42; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+ \u8fc7\u6ee4\u8fb9\u5c5e\u6027\uff1a nebula> MATCH (v:player)-[e]->() \\ WHERE e.start_year < 2000 \\ RETURN DISTINCT v.name, v.age; +--------------------+-------+ | v.name | v.age | +--------------------+-------+ | \"Shaquille O'Neal\" | 47 | +--------------------+-------+ | \"Steve Nash\" | 45 | +--------------------+-------+ | \"Ray Allen\" | 43 | +--------------------+-------+ | \"Grant Hill\" | 46 | +--------------------+-------+ | \"Tony Parker\" | 36 | +--------------------+-------+ ... nebula> GO FROM \"player100\" \\ OVER follow \\ WHERE follow.degree > 90; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+ \u8fc7\u6ee4\u52a8\u6001\u8ba1\u7b97\u5c5e\u6027 \u00b6 nebula> MATCH (v:player) \\ WHERE v[toLower(\"AGE\")] < 21 \\ RETURN v.name, v.age; +---------------+-------+ | v.name | v.age | +---------------+-------+ | \"Luka Doncic\" | 20 | +---------------+-------+ \u8fc7\u6ee4\u73b0\u5b58\u5c5e\u6027 \u00b6 nebula> MATCH (v:player) \\ WHERE exists(v.age) \\ RETURN v.name, v.age; +-------------------------+-------+ | v.name | v.age | +-------------------------+-------+ | \"Boris Diaw\" | 36 | +-------------------------+-------+ | \"DeAndre Jordan\" | 30 | +-------------------------+-------+ \u8fc7\u6ee4rank \u00b6 \u5728nGQL\u4e2d\uff0c\u5982\u679c\u591a\u4e2a\u8fb9\u62e5\u6709\u76f8\u540c\u7684\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u548c\u5c5e\u6027\uff0c\u5219\u5b83\u4eec\u7684\u552f\u4e00\u533a\u522b\u662frank\u503c\u3002\u5728 WHERE \u5b50\u53e5\u4e2d\u53ef\u4ee5\u4f7f\u7528rank\u8fc7\u6ee4\u8fb9\u3002 # \u521b\u5efa\u6d4b\u8bd5\u6570\u636e\u3002 nebula> CREATE SPACE test; nebula> USE test; nebula> CREATE EDGE e1(p1 int); nebula> CREATE TAG person(p1 int); nebula> INSERT VERTEX person(p1) VALUES \"1\":(1); nebula> INSERT VERTEX person(p1) VALUES \"2\":(2); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@0:(10); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@1:(11); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@2:(12); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@3:(13); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@4:(14); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@5:(15); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@6:(16); # \u901a\u8fc7rank\u8fc7\u6ee4\u8fb9\uff0c\u67e5\u627erank\u5927\u4e8e2\u7684\u8fb9\u3002 nebula> GO FROM \"1\" \\ OVER e1 \\ WHERE e1._rank>2 \\ YIELD e1._src, e1._dst, e1._rank AS Rank, e1.p1 | \\ ORDER BY Rank DESC; ==================================== | e1._src | e1._dst | Rank | e1.p1 | ==================================== | 1 | 2 | 6 | 16 | ------------------------------------ | 1 | 2 | 5 | 15 | ------------------------------------ | 1 | 2 | 4 | 14 | ------------------------------------ | 1 | 2 | 3 | 13 | ------------------------------------ \u8fc7\u6ee4\u5b57\u7b26\u4e32 \u00b6 \u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528 STARTS WITH \u3001 ENDS WITH \u6216 CONTAINS \u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32\u7684\u7279\u5b9a\u90e8\u5206\u3002\u5339\u914d\u65f6\u533a\u5206\u5927\u5c0f\u5199\u3002 STARTS WITH \u00b6 STARTS WITH \u4f1a\u4ece\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\u3002 # \u67e5\u8be2\u59d3\u540d\u4ee5T\u5f00\u5934\u7684player\u4fe1\u606f\u3002 nebula> MATCH (v:player) \\ WHERE v.name STARTS WITH \"T\" \\ RETURN v.name, v.age; +------------------+-------+ | v.name | v.age | +------------------+-------+ | \"Tracy McGrady\" | 39 | +------------------+-------+ | \"Tony Parker\" | 36 | +------------------+-------+ | \"Tim Duncan\" | 42 | +------------------+-------+ | \"Tiago Splitter\" | 34 | +------------------+-------+ \u5982\u679c\u60a8\u4f7f\u7528\u5c0f\u5199 t \uff08 STARTS WITH \"t\" \uff09\uff0c\u4f1a\u8fd4\u56de\u7a7a\u96c6\uff0c\u56e0\u4e3a\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u4ee5\u5c0f\u5199 t \u5f00\u5934\u7684\u59d3\u540d\u3002 nebula> MATCH (v:player) \\ WHERE v.name STARTS WITH \"t\" \\ RETURN v.name, v.age; Empty set (time spent 5080/6474 us) ENDS WITH \u00b6 ENDS WITH \u4f1a\u4ece\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\u3002 nebula> MATCH (v:player) \\ WHERE v.name ENDS WITH \"r\" \\ RETURN v.name, v.age; +------------------+-------+ | v.name | v.age | +------------------+-------+ | \"Vince Carter\" | 42 | +------------------+-------+ | \"Tony Parker\" | 36 | +------------------+-------+ | \"Tiago Splitter\" | 34 | +------------------+-------+ CONTAINS \u00b6 CONTAINS \u4f1a\u68c0\u67e5\u5173\u952e\u5b57\u662f\u5426\u5339\u914d\u5b57\u7b26\u4e32\u7684\u67d0\u4e00\u90e8\u5206\u3002 nebula> MATCH (v:player) \\ WHERE v.name CONTAINS \"Pa\" \\ RETURN v.name, v.age; +---------------+-------+ | v.name | v.age | +---------------+-------+ | \"Paul George\" | 28 | +---------------+-------+ | \"Tony Parker\" | 36 | +---------------+-------+ | \"Paul Gasol\" | 38 | +---------------+-------+ | \"Chris Paul\" | 33 | +---------------+-------+ \u7ed3\u5408NOT\u4f7f\u7528 \u00b6 \u60a8\u53ef\u4ee5\u7ed3\u5408\u5e03\u5c14\u8fd0\u7b97\u7b26 NOT \u4e00\u8d77\u4f7f\u7528\uff0c\u5426\u5b9a\u5b57\u7b26\u4e32\u5339\u914d\u6761\u4ef6\u3002 nebula> MATCH (v:player) \\ WHERE NOT v.name ENDS WITH \"R\" \\ RETURN v.name, v.age; +-------------------------+-------+ | v.name | v.age | +-------------------------+-------+ | \"Rajon Rondo\" | 33 | +-------------------------+-------+ | \"Rudy Gay\" | 32 | +-------------------------+-------+ | \"Dejounte Murray\" | 29 | +-------------------------+-------+ | \"Chris Paul\" | 33 | +-------------------------+-------+ | \"Carmelo Anthony\" | 34 | +-------------------------+-------+ ... \u8fc7\u6ee4\u5217\u8868 \u00b6 \u5339\u914d\u5217\u8868\u4e2d\u7684\u503c \u00b6 \u4f7f\u7528 IN \u8fd0\u7b97\u7b26\u68c0\u67e5\u67d0\u4e2a\u503c\u662f\u5426\u5728\u6307\u5b9a\u5217\u8868\u4e2d\u3002 nebula> MATCH (v:player) \\ WHERE v.age IN range(20,25) \\ RETURN v.name, v.age; +-------------------------+-------+ | v.name | v.age | +-------------------------+-------+ | \"Ben Simmons\" | 22 | +-------------------------+-------+ | \"Kristaps Porzingis\" | 23 | +-------------------------+-------+ | \"Luka Doncic\" | 20 | +-------------------------+-------+ | \"Kyle Anderson\" | 25 | +-------------------------+-------+ | \"Giannis Antetokounmpo\" | 24 | +-------------------------+-------+ | \"Joel Embiid\" | 25 | +-------------------------+-------+ \u7ed3\u5408NOT\u4f7f\u7528 \u00b6 nebula> MATCH (v:player) \\ WHERE v.age NOT IN range(20,25) \\ RETURN v.name AS Name, v.age AS Age \\ ORDER BY Age; +---------------------+-----+ | Name | Age | +---------------------+-----+ | \"Kyrie Irving\" | 26 | +---------------------+-----+ | \"Cory Joseph\" | 27 | +---------------------+-----+ | \"Damian Lillard\" | 28 | +---------------------+-----+ | \"Paul George\" | 28 | +---------------------+-----+ | \"Ricky Rubio\" | 28 | +---------------------+-----+ ...","title":"WHERE"},{"location":"3.ngql-guide/8.clauses-and-options/where/#where","text":"WHERE \u5b50\u53e5\u53ef\u4ee5\u6839\u636e\u6761\u4ef6\u8fc7\u6ee4\u8f93\u51fa\u7ed3\u679c\u3002 WHERE \u5b50\u53e5\u901a\u5e38\u7528\u4e8e\u5982\u4e0b\u67e5\u8be2\uff1a nGQL\u6269\u5c55\uff0c\u4f8b\u5982 GO \u548c LOOKUP \u8bed\u53e5\u3002 openCypher\u65b9\u5f0f\uff0c\u4f8b\u5982 MATCH \u548c WITH \u8bed\u53e5\u3002","title":"WHERE"},{"location":"3.ngql-guide/8.clauses-and-options/where/#opencypher","text":"\u4e0d\u652f\u6301\u5728\u6a21\u5f0f\u4e2d\u4f7f\u7528 WHERE \u5b50\u53e5\uff08TODO: planning\uff09\uff0c\u4f8b\u5982 WHERE (v)-->(v2) \u3002 \u8fc7\u6ee4rank \u662f\u539f\u751fnGQL\u529f\u80fd\u3002\u53ea\u652f\u6301\u5728nGQL\u6269\u5c55\u7684\u8bed\u53e5\uff08\u4f8b\u5982 GO \u548c LOOKUP \uff09\u4e2d\u4f7f\u7528\uff0c\u56e0\u4e3aopenCypher\u4e2d\u6ca1\u6709rank\u7684\u6982\u5ff5\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_1","text":"WHERE <expression> [ AND|OR|XOR <expression> ...]);","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_2","text":"","title":"\u57fa\u7840\u7528\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_3","text":"\u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528\u5e03\u5c14\u8fd0\u7b97\u7b26 NOT \u3001 AND \u3001 OR \u548c XOR \u5b9a\u4e49\u6761\u4ef6\u3002\u5173\u4e8e\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u8bf7\u53c2\u89c1 \u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 \u3002 nebula> MATCH (v:player) \\ WHERE v.name == \"Tim Duncan\" \\ XOR (v.age < 30 AND v.name == \"Yao Ming\") \\ OR NOT (v.name == \"Yao Ming\" OR v.name == \"Tim Duncan\") \\ RETURN v.name, v.age; +-------------------------+-------+ | v.name | v.age | +-------------------------+-------+ | \"Marco Belinelli\" | 32 | +-------------------------+-------+ | \"Aron Baynes\" | 32 | +-------------------------+-------+ | \"LeBron James\" | 34 | +-------------------------+-------+ | \"James Harden\" | 29 | +-------------------------+-------+ | \"Manu Ginobili\" | 41 | +-------------------------+-------+ ... nebula> GO FROM \"player100\" \\ OVER follow \\ WHERE follow.degree > 90 \\ OR $$.player.age != 33 \\ AND $$.player.name != \"Tony Parker\"; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+","title":"\u7528\u5e03\u5c14\u8fd0\u7b97\u7b26\u5b9a\u4e49\u6761\u4ef6"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_4","text":"\u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528\u70b9\u6216\u8fb9\u7684\u5c5e\u6027\u5b9a\u4e49\u6761\u4ef6\u3002 \u8fc7\u6ee4\u70b9\u5c5e\u6027\uff1a nebula> MATCH (v:player)-[e]->(v2) \\ WHERE v2.age < 25 \\ RETURN v2.name, v2.age; +----------------------+--------+ | v2.name | v2.age | +----------------------+--------+ | \"Luka Doncic\" | 20 | +----------------------+--------+ | \"Kristaps Porzingis\" | 23 | +----------------------+--------+ | \"Ben Simmons\" | 22 | +----------------------+--------+ nebula> GO FROM \"player100\" \\ OVER follow \\ WHERE $^.player.age >= 42; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+ \u8fc7\u6ee4\u8fb9\u5c5e\u6027\uff1a nebula> MATCH (v:player)-[e]->() \\ WHERE e.start_year < 2000 \\ RETURN DISTINCT v.name, v.age; +--------------------+-------+ | v.name | v.age | +--------------------+-------+ | \"Shaquille O'Neal\" | 47 | +--------------------+-------+ | \"Steve Nash\" | 45 | +--------------------+-------+ | \"Ray Allen\" | 43 | +--------------------+-------+ | \"Grant Hill\" | 46 | +--------------------+-------+ | \"Tony Parker\" | 36 | +--------------------+-------+ ... nebula> GO FROM \"player100\" \\ OVER follow \\ WHERE follow.degree > 90; +-------------+ | follow._dst | +-------------+ | \"player101\" | +-------------+ | \"player125\" | +-------------+","title":"\u8fc7\u6ee4\u5c5e\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_5","text":"nebula> MATCH (v:player) \\ WHERE v[toLower(\"AGE\")] < 21 \\ RETURN v.name, v.age; +---------------+-------+ | v.name | v.age | +---------------+-------+ | \"Luka Doncic\" | 20 | +---------------+-------+","title":"\u8fc7\u6ee4\u52a8\u6001\u8ba1\u7b97\u5c5e\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_6","text":"nebula> MATCH (v:player) \\ WHERE exists(v.age) \\ RETURN v.name, v.age; +-------------------------+-------+ | v.name | v.age | +-------------------------+-------+ | \"Boris Diaw\" | 36 | +-------------------------+-------+ | \"DeAndre Jordan\" | 30 | +-------------------------+-------+","title":"\u8fc7\u6ee4\u73b0\u5b58\u5c5e\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/where/#rank","text":"\u5728nGQL\u4e2d\uff0c\u5982\u679c\u591a\u4e2a\u8fb9\u62e5\u6709\u76f8\u540c\u7684\u8d77\u59cb\u70b9\u3001\u76ee\u7684\u70b9\u548c\u5c5e\u6027\uff0c\u5219\u5b83\u4eec\u7684\u552f\u4e00\u533a\u522b\u662frank\u503c\u3002\u5728 WHERE \u5b50\u53e5\u4e2d\u53ef\u4ee5\u4f7f\u7528rank\u8fc7\u6ee4\u8fb9\u3002 # \u521b\u5efa\u6d4b\u8bd5\u6570\u636e\u3002 nebula> CREATE SPACE test; nebula> USE test; nebula> CREATE EDGE e1(p1 int); nebula> CREATE TAG person(p1 int); nebula> INSERT VERTEX person(p1) VALUES \"1\":(1); nebula> INSERT VERTEX person(p1) VALUES \"2\":(2); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@0:(10); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@1:(11); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@2:(12); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@3:(13); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@4:(14); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@5:(15); nebula> INSERT EDGE e1(p1) VALUES \"1\"->\"2\"@6:(16); # \u901a\u8fc7rank\u8fc7\u6ee4\u8fb9\uff0c\u67e5\u627erank\u5927\u4e8e2\u7684\u8fb9\u3002 nebula> GO FROM \"1\" \\ OVER e1 \\ WHERE e1._rank>2 \\ YIELD e1._src, e1._dst, e1._rank AS Rank, e1.p1 | \\ ORDER BY Rank DESC; ==================================== | e1._src | e1._dst | Rank | e1.p1 | ==================================== | 1 | 2 | 6 | 16 | ------------------------------------ | 1 | 2 | 5 | 15 | ------------------------------------ | 1 | 2 | 4 | 14 | ------------------------------------ | 1 | 2 | 3 | 13 | ------------------------------------","title":"\u8fc7\u6ee4rank"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_7","text":"\u5728 WHERE \u5b50\u53e5\u4e2d\u4f7f\u7528 STARTS WITH \u3001 ENDS WITH \u6216 CONTAINS \u53ef\u4ee5\u5339\u914d\u5b57\u7b26\u4e32\u7684\u7279\u5b9a\u90e8\u5206\u3002\u5339\u914d\u65f6\u533a\u5206\u5927\u5c0f\u5199\u3002","title":"\u8fc7\u6ee4\u5b57\u7b26\u4e32"},{"location":"3.ngql-guide/8.clauses-and-options/where/#starts_with","text":"STARTS WITH \u4f1a\u4ece\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\u3002 # \u67e5\u8be2\u59d3\u540d\u4ee5T\u5f00\u5934\u7684player\u4fe1\u606f\u3002 nebula> MATCH (v:player) \\ WHERE v.name STARTS WITH \"T\" \\ RETURN v.name, v.age; +------------------+-------+ | v.name | v.age | +------------------+-------+ | \"Tracy McGrady\" | 39 | +------------------+-------+ | \"Tony Parker\" | 36 | +------------------+-------+ | \"Tim Duncan\" | 42 | +------------------+-------+ | \"Tiago Splitter\" | 34 | +------------------+-------+ \u5982\u679c\u60a8\u4f7f\u7528\u5c0f\u5199 t \uff08 STARTS WITH \"t\" \uff09\uff0c\u4f1a\u8fd4\u56de\u7a7a\u96c6\uff0c\u56e0\u4e3a\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u4ee5\u5c0f\u5199 t \u5f00\u5934\u7684\u59d3\u540d\u3002 nebula> MATCH (v:player) \\ WHERE v.name STARTS WITH \"t\" \\ RETURN v.name, v.age; Empty set (time spent 5080/6474 us)","title":"STARTS WITH"},{"location":"3.ngql-guide/8.clauses-and-options/where/#ends_with","text":"ENDS WITH \u4f1a\u4ece\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\u3002 nebula> MATCH (v:player) \\ WHERE v.name ENDS WITH \"r\" \\ RETURN v.name, v.age; +------------------+-------+ | v.name | v.age | +------------------+-------+ | \"Vince Carter\" | 42 | +------------------+-------+ | \"Tony Parker\" | 36 | +------------------+-------+ | \"Tiago Splitter\" | 34 | +------------------+-------+","title":"ENDS WITH"},{"location":"3.ngql-guide/8.clauses-and-options/where/#contains","text":"CONTAINS \u4f1a\u68c0\u67e5\u5173\u952e\u5b57\u662f\u5426\u5339\u914d\u5b57\u7b26\u4e32\u7684\u67d0\u4e00\u90e8\u5206\u3002 nebula> MATCH (v:player) \\ WHERE v.name CONTAINS \"Pa\" \\ RETURN v.name, v.age; +---------------+-------+ | v.name | v.age | +---------------+-------+ | \"Paul George\" | 28 | +---------------+-------+ | \"Tony Parker\" | 36 | +---------------+-------+ | \"Paul Gasol\" | 38 | +---------------+-------+ | \"Chris Paul\" | 33 | +---------------+-------+","title":"CONTAINS"},{"location":"3.ngql-guide/8.clauses-and-options/where/#not","text":"\u60a8\u53ef\u4ee5\u7ed3\u5408\u5e03\u5c14\u8fd0\u7b97\u7b26 NOT \u4e00\u8d77\u4f7f\u7528\uff0c\u5426\u5b9a\u5b57\u7b26\u4e32\u5339\u914d\u6761\u4ef6\u3002 nebula> MATCH (v:player) \\ WHERE NOT v.name ENDS WITH \"R\" \\ RETURN v.name, v.age; +-------------------------+-------+ | v.name | v.age | +-------------------------+-------+ | \"Rajon Rondo\" | 33 | +-------------------------+-------+ | \"Rudy Gay\" | 32 | +-------------------------+-------+ | \"Dejounte Murray\" | 29 | +-------------------------+-------+ | \"Chris Paul\" | 33 | +-------------------------+-------+ | \"Carmelo Anthony\" | 34 | +-------------------------+-------+ ...","title":"\u7ed3\u5408NOT\u4f7f\u7528"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_8","text":"","title":"\u8fc7\u6ee4\u5217\u8868"},{"location":"3.ngql-guide/8.clauses-and-options/where/#_9","text":"\u4f7f\u7528 IN \u8fd0\u7b97\u7b26\u68c0\u67e5\u67d0\u4e2a\u503c\u662f\u5426\u5728\u6307\u5b9a\u5217\u8868\u4e2d\u3002 nebula> MATCH (v:player) \\ WHERE v.age IN range(20,25) \\ RETURN v.name, v.age; +-------------------------+-------+ | v.name | v.age | +-------------------------+-------+ | \"Ben Simmons\" | 22 | +-------------------------+-------+ | \"Kristaps Porzingis\" | 23 | +-------------------------+-------+ | \"Luka Doncic\" | 20 | +-------------------------+-------+ | \"Kyle Anderson\" | 25 | +-------------------------+-------+ | \"Giannis Antetokounmpo\" | 24 | +-------------------------+-------+ | \"Joel Embiid\" | 25 | +-------------------------+-------+","title":"\u5339\u914d\u5217\u8868\u4e2d\u7684\u503c"},{"location":"3.ngql-guide/8.clauses-and-options/where/#not_1","text":"nebula> MATCH (v:player) \\ WHERE v.age NOT IN range(20,25) \\ RETURN v.name AS Name, v.age AS Age \\ ORDER BY Age; +---------------------+-----+ | Name | Age | +---------------------+-----+ | \"Kyrie Irving\" | 26 | +---------------------+-----+ | \"Cory Joseph\" | 27 | +---------------------+-----+ | \"Damian Lillard\" | 28 | +---------------------+-----+ | \"Paul George\" | 28 | +---------------------+-----+ | \"Ricky Rubio\" | 28 | +---------------------+-----+ ...","title":"\u7ed3\u5408NOT\u4f7f\u7528"},{"location":"3.ngql-guide/8.clauses-and-options/with/","text":"WITH \u00b6 WITH \u5b50\u53e5\u53ef\u4ee5\u83b7\u53d6\u5e76\u5904\u7406\u67e5\u8be2\u524d\u534a\u90e8\u5206\u7684\u7ed3\u679c\uff0c\u5e76\u5c06\u5904\u7406\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\u4f20\u9012\u7ed9\u67e5\u8be2\u7684\u540e\u534a\u90e8\u5206\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8eopenCypher\u65b9\u5f0f\u3002 \u8bf4\u660e \uff1a\u5728nGQL\u6269\u5c55\u4e2d\uff0c\u6709\u4e0e WITH \u7c7b\u4f3c\u7684\u51fd\u6570 \u7ba1\u9053\u7b26 \uff0c\u4f46\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0d\u540c\u3002\u4e0d\u8981\u5728openCypher\u65b9\u5f0f\u4e2d\u4f7f\u7528\u7ba1\u9053\u7b26\uff0c\u4e5f\u4e0d\u8981\u5728nGQL\u6269\u5c55\u4e2d\u4f7f\u7528 WITH \u5b50\u53e5\u3002 \u7ec4\u6210\u590d\u5408\u67e5\u8be2 \u00b6 \u4f7f\u7528 WITH \u5b50\u53e5\u53ef\u4ee5\u7ec4\u5408\u8bed\u53e5\uff0c\u5c06\u4e00\u6761\u8bed\u53e5\u7684\u8f93\u51fa\u8f6c\u6362\u4e3a\u53e6\u4e00\u6761\u8bed\u53e5\u7684\u8f93\u5165\u3002 \u793a\u4f8b1 \u00b6 \u5339\u914d\u4e00\u4e2a\u8def\u5f84\u3002 \u901a\u8fc7 nodes() \u51fd\u6570\u5c06\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u8f93\u51fa\u5230\u4e00\u4e2a\u5217\u8868\u3002 \u5c06\u5217\u8868\u62c6\u5206\u4e3a\u884c\u3002 \u53bb\u91cd\u540e\u8fd4\u56de\u70b9\u7684\u4fe1\u606f\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})--() \\ WITH nodes(p) AS n \\ UNWIND n AS n1 \\ RETURN DISTINCT n1; +----------------------------------------------------------------------+ | n1 | +----------------------------------------------------------------------+ | (\"player100\" :star{} :person{} :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------------------------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +----------------------------------------------------------------------+ | (\"team204\" :team{name: \"Spurs\"}) | +----------------------------------------------------------------------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | +----------------------------------------------------------------------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | +----------------------------------------------------------------------+ | (\"player104\" :player{age: 32, name: \"Marco Belinelli\"}) | +----------------------------------------------------------------------+ | (\"player144\" :player{age: 47, name: \"Shaquile O'Neal\"}) | +----------------------------------------------------------------------+ | (\"player105\" :player{age: 31, name: \"Danny Green\"}) | +----------------------------------------------------------------------+ | (\"player113\" :player{age: 29, name: \"Dejounte Murray\"}) | +----------------------------------------------------------------------+ | (\"player107\" :player{age: 32, name: \"Aron Baynes\"}) | +----------------------------------------------------------------------+ | (\"player109\" :player{age: 34, name: \"Tiago Splitter\"}) | +----------------------------------------------------------------------+ | (\"player108\" :player{age: 36, name: \"Boris Diaw\"}) | +----------------------------------------------------------------------+ \u793a\u4f8b2 \u00b6 \u5339\u914d\u70b9ID\u4e3a player100 \u7684\u70b9\u3002 \u901a\u8fc7 labels() \u51fd\u6570\u5c06\u70b9\u7684\u6240\u6709\u6807\u7b7e\u8f93\u51fa\u5230\u4e00\u4e2a\u5217\u8868\u3002 \u5c06\u5217\u8868\u62c6\u5206\u4e3a\u884c\u3002 \u8fd4\u56de\u7ed3\u679c\u3002 nebula> MATCH (v) \\ WHERE id(v)==\"player100\" \\ WITH labels(v) AS tags_unf \\ UNWIND tags_unf AS tags_f \\ RETURN tags_f; +----------+ | tags_f | +----------+ | \"star\" | +----------+ | \"player\" | +----------+ | \"person\" | +----------+ \u8fc7\u6ee4\u805a\u5408\u67e5\u8be2 \u00b6 WITH \u53ef\u4ee5\u5728\u805a\u5408\u67e5\u8be2\u4e2d\u4f5c\u4e3a\u8fc7\u6ee4\u5668\u4f7f\u7528\u3002 nebula> MATCH (v:player)-->(v2:player) \\ WITH DISTINCT v2 AS v2, v2.age AS Age \\ ORDER BY Age \\ WHERE Age<25 \\ RETURN v2.name AS Name, Age; +----------------------+-----+ | Name | Age | +----------------------+-----+ | \"Luka Doncic\" | 20 | +----------------------+-----+ | \"Ben Simmons\" | 22 | +----------------------+-----+ | \"Kristaps Porzingis\" | 23 | +----------------------+-----+ collect()\u4e4b\u524d\u5904\u7406\u8f93\u51fa \u00b6 \u5728 collect() \u51fd\u6570\u5c06\u8f93\u51fa\u7ed3\u679c\u8f6c\u6362\u4e3a\u5217\u8868\u4e4b\u524d\uff0c\u53ef\u4ee5\u4f7f\u7528 WITH \u5b50\u53e5\u6392\u5e8f\u548c\u9650\u5236\u8f93\u51fa\u7ed3\u679c\u3002 nebula> MATCH (v:player) \\ WITH v.name AS Name \\ ORDER BY Name DESC \\ LIMIT 3 \\ RETURN collect(Name); +-----------------------------------------------+ | COLLECT(Name) | +-----------------------------------------------+ | [\"Yao Ming\", \"Vince Carter\", \"Tracy McGrady\"] | +-----------------------------------------------+","title":"WITH"},{"location":"3.ngql-guide/8.clauses-and-options/with/#with","text":"WITH \u5b50\u53e5\u53ef\u4ee5\u83b7\u53d6\u5e76\u5904\u7406\u67e5\u8be2\u524d\u534a\u90e8\u5206\u7684\u7ed3\u679c\uff0c\u5e76\u5c06\u5904\u7406\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\u4f20\u9012\u7ed9\u67e5\u8be2\u7684\u540e\u534a\u90e8\u5206\u3002","title":"WITH"},{"location":"3.ngql-guide/8.clauses-and-options/with/#opencypher","text":"\u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8eopenCypher\u65b9\u5f0f\u3002 \u8bf4\u660e \uff1a\u5728nGQL\u6269\u5c55\u4e2d\uff0c\u6709\u4e0e WITH \u7c7b\u4f3c\u7684\u51fd\u6570 \u7ba1\u9053\u7b26 \uff0c\u4f46\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0d\u540c\u3002\u4e0d\u8981\u5728openCypher\u65b9\u5f0f\u4e2d\u4f7f\u7528\u7ba1\u9053\u7b26\uff0c\u4e5f\u4e0d\u8981\u5728nGQL\u6269\u5c55\u4e2d\u4f7f\u7528 WITH \u5b50\u53e5\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/with/#_1","text":"\u4f7f\u7528 WITH \u5b50\u53e5\u53ef\u4ee5\u7ec4\u5408\u8bed\u53e5\uff0c\u5c06\u4e00\u6761\u8bed\u53e5\u7684\u8f93\u51fa\u8f6c\u6362\u4e3a\u53e6\u4e00\u6761\u8bed\u53e5\u7684\u8f93\u5165\u3002","title":"\u7ec4\u6210\u590d\u5408\u67e5\u8be2"},{"location":"3.ngql-guide/8.clauses-and-options/with/#1","text":"\u5339\u914d\u4e00\u4e2a\u8def\u5f84\u3002 \u901a\u8fc7 nodes() \u51fd\u6570\u5c06\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u8f93\u51fa\u5230\u4e00\u4e2a\u5217\u8868\u3002 \u5c06\u5217\u8868\u62c6\u5206\u4e3a\u884c\u3002 \u53bb\u91cd\u540e\u8fd4\u56de\u70b9\u7684\u4fe1\u606f\u3002 nebula> MATCH p=(v:player{name:\"Tim Duncan\"})--() \\ WITH nodes(p) AS n \\ UNWIND n AS n1 \\ RETURN DISTINCT n1; +----------------------------------------------------------------------+ | n1 | +----------------------------------------------------------------------+ | (\"player100\" :star{} :person{} :player{age: 42, name: \"Tim Duncan\"}) | +----------------------------------------------------------------------+ | (\"player101\" :player{age: 36, name: \"Tony Parker\"}) | +----------------------------------------------------------------------+ | (\"team204\" :team{name: \"Spurs\"}) | +----------------------------------------------------------------------+ | (\"player102\" :player{age: 33, name: \"LaMarcus Aldridge\"}) | +----------------------------------------------------------------------+ | (\"player125\" :player{age: 41, name: \"Manu Ginobili\"}) | +----------------------------------------------------------------------+ | (\"player104\" :player{age: 32, name: \"Marco Belinelli\"}) | +----------------------------------------------------------------------+ | (\"player144\" :player{age: 47, name: \"Shaquile O'Neal\"}) | +----------------------------------------------------------------------+ | (\"player105\" :player{age: 31, name: \"Danny Green\"}) | +----------------------------------------------------------------------+ | (\"player113\" :player{age: 29, name: \"Dejounte Murray\"}) | +----------------------------------------------------------------------+ | (\"player107\" :player{age: 32, name: \"Aron Baynes\"}) | +----------------------------------------------------------------------+ | (\"player109\" :player{age: 34, name: \"Tiago Splitter\"}) | +----------------------------------------------------------------------+ | (\"player108\" :player{age: 36, name: \"Boris Diaw\"}) | +----------------------------------------------------------------------+","title":"\u793a\u4f8b1"},{"location":"3.ngql-guide/8.clauses-and-options/with/#2","text":"\u5339\u914d\u70b9ID\u4e3a player100 \u7684\u70b9\u3002 \u901a\u8fc7 labels() \u51fd\u6570\u5c06\u70b9\u7684\u6240\u6709\u6807\u7b7e\u8f93\u51fa\u5230\u4e00\u4e2a\u5217\u8868\u3002 \u5c06\u5217\u8868\u62c6\u5206\u4e3a\u884c\u3002 \u8fd4\u56de\u7ed3\u679c\u3002 nebula> MATCH (v) \\ WHERE id(v)==\"player100\" \\ WITH labels(v) AS tags_unf \\ UNWIND tags_unf AS tags_f \\ RETURN tags_f; +----------+ | tags_f | +----------+ | \"star\" | +----------+ | \"player\" | +----------+ | \"person\" | +----------+","title":"\u793a\u4f8b2"},{"location":"3.ngql-guide/8.clauses-and-options/with/#_2","text":"WITH \u53ef\u4ee5\u5728\u805a\u5408\u67e5\u8be2\u4e2d\u4f5c\u4e3a\u8fc7\u6ee4\u5668\u4f7f\u7528\u3002 nebula> MATCH (v:player)-->(v2:player) \\ WITH DISTINCT v2 AS v2, v2.age AS Age \\ ORDER BY Age \\ WHERE Age<25 \\ RETURN v2.name AS Name, Age; +----------------------+-----+ | Name | Age | +----------------------+-----+ | \"Luka Doncic\" | 20 | +----------------------+-----+ | \"Ben Simmons\" | 22 | +----------------------+-----+ | \"Kristaps Porzingis\" | 23 | +----------------------+-----+","title":"\u8fc7\u6ee4\u805a\u5408\u67e5\u8be2"},{"location":"3.ngql-guide/8.clauses-and-options/with/#collect","text":"\u5728 collect() \u51fd\u6570\u5c06\u8f93\u51fa\u7ed3\u679c\u8f6c\u6362\u4e3a\u5217\u8868\u4e4b\u524d\uff0c\u53ef\u4ee5\u4f7f\u7528 WITH \u5b50\u53e5\u6392\u5e8f\u548c\u9650\u5236\u8f93\u51fa\u7ed3\u679c\u3002 nebula> MATCH (v:player) \\ WITH v.name AS Name \\ ORDER BY Name DESC \\ LIMIT 3 \\ RETURN collect(Name); +-----------------------------------------------+ | COLLECT(Name) | +-----------------------------------------------+ | [\"Yao Ming\", \"Vince Carter\", \"Tracy McGrady\"] | +-----------------------------------------------+","title":"collect()\u4e4b\u524d\u5904\u7406\u8f93\u51fa"},{"location":"3.ngql-guide/8.clauses-and-options/yield/","text":"YIELD \u00b6 YIELD \u5b9a\u4e49nGQL\u67e5\u8be2\u7684\u8f93\u51fa\u7ed3\u679c\u3002 YIELD \u53ef\u4ee5\u5f15\u5bfc\u5b50\u53e5\u6216\u8bed\u53e5\uff1a YIELD \u5b50\u53e5\u53ef\u4ee5\u7528\u4e8enGQL\u6269\u5c55\u8bed\u53e5\u4e2d\uff0c\u4f8b\u5982 GO \u3001 FETCH \u6216 LOOKUP \u3002 YIELD \u8bed\u53e5\u53ef\u4ee5\u5728\u72ec\u7acb\u67e5\u8be2\u6216\u590d\u5408\u67e5\u8be2\u4e2d\u4f7f\u7528\u3002 openCypher\u517c\u5bb9\u6027 \u00b6 \u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002\u5173\u4e8eopenCypher\u65b9\u5f0f\u5982\u4f55\u5b9a\u4e49\u8f93\u51fa\u7ed3\u679c\uff0c\u8bf7\u53c2\u89c1 RETURN \u3002 YIELD \u5728nGQL\u548copenCypher\u4e2d\u6709\u4e0d\u540c\u7684\u51fd\u6570\uff1a \u5728openCypher\u4e2d\uff0c YIELD \u7528\u4e8e\u5728 CALL[\u2026YIELD] \u5b50\u53e5\u4e2d\u6307\u5b9a\u8fc7\u7a0b\u8c03\u7528\u7684\u8f93\u51fa\u3002 \u8bf4\u660e \uff1anGQL\u6682\u4e0d\u652f\u6301 CALL[\u2026YIELD] \u3002 \u5728nGQL\u4e2d\uff0c YIELD \u548copenCypher\u4e2d\u7684 RETURN \u7c7b\u4f3c\u3002 YIELD\u5b50\u53e5 \u00b6 \u8bed\u6cd5 \u00b6 YIELD [DISTINCT] <col> [AS <alias>] [, <col> [AS <alias>] ...]; \u53c2\u6570 \u8bf4\u660e DISTINCT \u805a\u5408\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd4\u56de\u53bb\u91cd\u540e\u7684\u7ed3\u679c\u96c6\u3002 col \u8981\u8fd4\u56de\u7684\u5b57\u6bb5\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u5b57\u6bb5\u8bbe\u7f6e\u522b\u540d\uff0c\u8fd4\u56de\u7ed3\u679c\u4e2d\u7684\u5217\u540d\u4e3a col \u3002 alias col \u7684\u522b\u540d\u3002\u4f7f\u7528\u5173\u952e\u5b57 AS \u8fdb\u884c\u8bbe\u7f6e\uff0c\u8bbe\u7f6e\u540e\u8fd4\u56de\u7ed3\u679c\u4e2d\u7684\u5217\u540d\u4e3a\u8be5\u522b\u540d\u3002 \u4f7f\u7528YIELD\u5b50\u53e5 \u00b6 GO \u8bed\u53e5\u4e2d\u4f7f\u7528 YIELD \uff1a nebula> GO FROM \"player100\" OVER follow \\ YIELD $$.player.name AS Friend, $$.player.age AS Age; +-----------------+-----+ | Friend | Age | +-----------------+-----+ | \"Tony Parker\" | 36 | +-----------------+-----+ | \"Manu Ginobili\" | 41 | +-----------------+-----+ FETCH \u8bed\u53e5\u4e2d\u4f7f\u7528 YIELD \uff1a nebula> FETCH PROP ON player \"player100\" \\ YIELD player.name; +-------------+--------------+ | VertexID | player.name | +-------------+--------------+ | \"player100\" | \"Tim Duncan\" | +-------------+--------------+ LOOKUP \u8bed\u53e5\u4e2d\u4f7f\u7528 YIELD \uff1a nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\" \\ YIELD player.name, player.age; ======================================= | VertexID | player.name | player.age | ======================================= | 101 | Tony Parker | 36 | --------------------------------------- YIELD\u8bed\u53e5 \u00b6 \u8bed\u6cd5 \u00b6 YIELD [DISTINCT] <col> [AS <alias>] [, <col> [AS <alias>] ...] [WHERE <conditions>]; \u53c2\u6570 \u8bf4\u660e DISTINCT \u805a\u5408\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd4\u56de\u53bb\u91cd\u540e\u7684\u7ed3\u679c\u96c6\u3002 col \u8981\u6309\u8fd4\u56de\u7684\u5b57\u6bb5\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u5b57\u6bb5\u8bbe\u7f6e\u522b\u540d\uff0c\u8fd4\u56de\u7ed3\u679c\u4e2d\u7684\u5217\u540d\u4e3a col \u3002 alias col \u7684\u522b\u540d\u3002\u4f7f\u7528\u5173\u952e\u5b57 AS \u8fdb\u884c\u8bbe\u7f6e\uff0c\u8bbe\u7f6e\u540e\u8fd4\u56de\u7ed3\u679c\u4e2d\u7684\u5217\u540d\u4e3a\u8be5\u522b\u540d\u3002 conditions \u5728 WHERE \u5b50\u53e5\u4e2d\u8bbe\u7f6e\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 WHERE \u3002 \u590d\u5408\u67e5\u8be2\u4e2d\u4f7f\u7528YIELD\u8bed\u53e5 \u00b6 \u5728 \u590d\u5408\u67e5\u8be2 \u4e2d\uff0c YIELD \u8bed\u53e5\u53ef\u4ee5\u63a5\u6536\u3001\u8fc7\u6ee4\u3001\u4fee\u6539\u4e4b\u524d\u8bed\u53e5\u7684\u7ed3\u679c\u96c6\uff0c\u7136\u540e\u8f93\u51fa\u3002 # \u67e5\u627eplayer100\u5173\u6ce8\u7684player\uff0c\u5e76\u8ba1\u7b97\u4ed6\u4eec\u7684\u5e73\u5747\u5e74\u9f84\u3002 nebula> GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS ID \\ | FETCH PROP ON player $-.ID \\ YIELD player.age AS Age \\ | YIELD AVG($-.Age) as Avg_age, count(*)as Num_friends; +---------+-------------+ | Avg_age | Num_friends | +---------+-------------+ | 38.5 | 2 | +---------+-------------+ # \u67e5\u627eplayer101\u5173\u6ce8\u7684player\uff0c\u8fd4\u56dedegree\u5927\u4e8e90\u7684player\u3002 nebula> $var1 = GO FROM \"player101\" OVER follow \\ YIELD follow.degree AS Degree, follow._dst as ID; \\ YIELD $var1.ID AS ID WHERE $var1.Degree > 90; +-------------+ | ID | +-------------+ | \"player100\" | +-------------+ | \"player125\" | +-------------+ \u72ec\u7acb\u4f7f\u7528YIELD\u8bed\u53e5 \u00b6 YIELD \u53ef\u4ee5\u8ba1\u7b97\u8868\u8fbe\u5f0f\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 nebula> YIELD rand32(1, 6); +-------------+ | rand32(1,6) | +-------------+ | 3 | +-------------+ nebula> YIELD \"Hel\" + \"\\tlo\" AS string1, \", World!\" AS string2; +-------------+------------+ | string1 | string2 | +-------------+------------+ | \"Hel lo\" | \", World!\" | +-------------+------------+ nebula> YIELD hash(\"Tim\") % 100; +-----------------+ | (hash(Tim)%100) | +-----------------+ | 42 | +-----------------+ nebula> YIELD \\ CASE 2+3 \\ WHEN 4 THEN 0 \\ WHEN 5 THEN 1 \\ ELSE -1 \\ END \\ AS result; +--------+ | result | +--------+ | 1 | +--------+","title":"YIELD"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#yield","text":"YIELD \u5b9a\u4e49nGQL\u67e5\u8be2\u7684\u8f93\u51fa\u7ed3\u679c\u3002 YIELD \u53ef\u4ee5\u5f15\u5bfc\u5b50\u53e5\u6216\u8bed\u53e5\uff1a YIELD \u5b50\u53e5\u53ef\u4ee5\u7528\u4e8enGQL\u6269\u5c55\u8bed\u53e5\u4e2d\uff0c\u4f8b\u5982 GO \u3001 FETCH \u6216 LOOKUP \u3002 YIELD \u8bed\u53e5\u53ef\u4ee5\u5728\u72ec\u7acb\u67e5\u8be2\u6216\u590d\u5408\u67e5\u8be2\u4e2d\u4f7f\u7528\u3002","title":"YIELD"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#opencypher","text":"\u672c\u6587\u64cd\u4f5c\u4ec5\u9002\u7528\u4e8enGQL\u6269\u5c55\u3002\u5173\u4e8eopenCypher\u65b9\u5f0f\u5982\u4f55\u5b9a\u4e49\u8f93\u51fa\u7ed3\u679c\uff0c\u8bf7\u53c2\u89c1 RETURN \u3002 YIELD \u5728nGQL\u548copenCypher\u4e2d\u6709\u4e0d\u540c\u7684\u51fd\u6570\uff1a \u5728openCypher\u4e2d\uff0c YIELD \u7528\u4e8e\u5728 CALL[\u2026YIELD] \u5b50\u53e5\u4e2d\u6307\u5b9a\u8fc7\u7a0b\u8c03\u7528\u7684\u8f93\u51fa\u3002 \u8bf4\u660e \uff1anGQL\u6682\u4e0d\u652f\u6301 CALL[\u2026YIELD] \u3002 \u5728nGQL\u4e2d\uff0c YIELD \u548copenCypher\u4e2d\u7684 RETURN \u7c7b\u4f3c\u3002","title":"openCypher\u517c\u5bb9\u6027"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#yield_1","text":"","title":"YIELD\u5b50\u53e5"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#_1","text":"YIELD [DISTINCT] <col> [AS <alias>] [, <col> [AS <alias>] ...]; \u53c2\u6570 \u8bf4\u660e DISTINCT \u805a\u5408\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd4\u56de\u53bb\u91cd\u540e\u7684\u7ed3\u679c\u96c6\u3002 col \u8981\u8fd4\u56de\u7684\u5b57\u6bb5\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u5b57\u6bb5\u8bbe\u7f6e\u522b\u540d\uff0c\u8fd4\u56de\u7ed3\u679c\u4e2d\u7684\u5217\u540d\u4e3a col \u3002 alias col \u7684\u522b\u540d\u3002\u4f7f\u7528\u5173\u952e\u5b57 AS \u8fdb\u884c\u8bbe\u7f6e\uff0c\u8bbe\u7f6e\u540e\u8fd4\u56de\u7ed3\u679c\u4e2d\u7684\u5217\u540d\u4e3a\u8be5\u522b\u540d\u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#yield_2","text":"GO \u8bed\u53e5\u4e2d\u4f7f\u7528 YIELD \uff1a nebula> GO FROM \"player100\" OVER follow \\ YIELD $$.player.name AS Friend, $$.player.age AS Age; +-----------------+-----+ | Friend | Age | +-----------------+-----+ | \"Tony Parker\" | 36 | +-----------------+-----+ | \"Manu Ginobili\" | 41 | +-----------------+-----+ FETCH \u8bed\u53e5\u4e2d\u4f7f\u7528 YIELD \uff1a nebula> FETCH PROP ON player \"player100\" \\ YIELD player.name; +-------------+--------------+ | VertexID | player.name | +-------------+--------------+ | \"player100\" | \"Tim Duncan\" | +-------------+--------------+ LOOKUP \u8bed\u53e5\u4e2d\u4f7f\u7528 YIELD \uff1a nebula> LOOKUP ON player WHERE player.name == \"Tony Parker\" \\ YIELD player.name, player.age; ======================================= | VertexID | player.name | player.age | ======================================= | 101 | Tony Parker | 36 | ---------------------------------------","title":"\u4f7f\u7528YIELD\u5b50\u53e5"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#yield_3","text":"","title":"YIELD\u8bed\u53e5"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#_2","text":"YIELD [DISTINCT] <col> [AS <alias>] [, <col> [AS <alias>] ...] [WHERE <conditions>]; \u53c2\u6570 \u8bf4\u660e DISTINCT \u805a\u5408\u8f93\u51fa\u7ed3\u679c\uff0c\u8fd4\u56de\u53bb\u91cd\u540e\u7684\u7ed3\u679c\u96c6\u3002 col \u8981\u6309\u8fd4\u56de\u7684\u5b57\u6bb5\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u5b57\u6bb5\u8bbe\u7f6e\u522b\u540d\uff0c\u8fd4\u56de\u7ed3\u679c\u4e2d\u7684\u5217\u540d\u4e3a col \u3002 alias col \u7684\u522b\u540d\u3002\u4f7f\u7528\u5173\u952e\u5b57 AS \u8fdb\u884c\u8bbe\u7f6e\uff0c\u8bbe\u7f6e\u540e\u8fd4\u56de\u7ed3\u679c\u4e2d\u7684\u5217\u540d\u4e3a\u8be5\u522b\u540d\u3002 conditions \u5728 WHERE \u5b50\u53e5\u4e2d\u8bbe\u7f6e\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 WHERE \u3002","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#yield_4","text":"\u5728 \u590d\u5408\u67e5\u8be2 \u4e2d\uff0c YIELD \u8bed\u53e5\u53ef\u4ee5\u63a5\u6536\u3001\u8fc7\u6ee4\u3001\u4fee\u6539\u4e4b\u524d\u8bed\u53e5\u7684\u7ed3\u679c\u96c6\uff0c\u7136\u540e\u8f93\u51fa\u3002 # \u67e5\u627eplayer100\u5173\u6ce8\u7684player\uff0c\u5e76\u8ba1\u7b97\u4ed6\u4eec\u7684\u5e73\u5747\u5e74\u9f84\u3002 nebula> GO FROM \"player100\" OVER follow \\ YIELD follow._dst AS ID \\ | FETCH PROP ON player $-.ID \\ YIELD player.age AS Age \\ | YIELD AVG($-.Age) as Avg_age, count(*)as Num_friends; +---------+-------------+ | Avg_age | Num_friends | +---------+-------------+ | 38.5 | 2 | +---------+-------------+ # \u67e5\u627eplayer101\u5173\u6ce8\u7684player\uff0c\u8fd4\u56dedegree\u5927\u4e8e90\u7684player\u3002 nebula> $var1 = GO FROM \"player101\" OVER follow \\ YIELD follow.degree AS Degree, follow._dst as ID; \\ YIELD $var1.ID AS ID WHERE $var1.Degree > 90; +-------------+ | ID | +-------------+ | \"player100\" | +-------------+ | \"player125\" | +-------------+","title":"\u590d\u5408\u67e5\u8be2\u4e2d\u4f7f\u7528YIELD\u8bed\u53e5"},{"location":"3.ngql-guide/8.clauses-and-options/yield/#yield_5","text":"YIELD \u53ef\u4ee5\u8ba1\u7b97\u8868\u8fbe\u5f0f\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 nebula> YIELD rand32(1, 6); +-------------+ | rand32(1,6) | +-------------+ | 3 | +-------------+ nebula> YIELD \"Hel\" + \"\\tlo\" AS string1, \", World!\" AS string2; +-------------+------------+ | string1 | string2 | +-------------+------------+ | \"Hel lo\" | \", World!\" | +-------------+------------+ nebula> YIELD hash(\"Tim\") % 100; +-----------------+ | (hash(Tim)%100) | +-----------------+ | 42 | +-----------------+ nebula> YIELD \\ CASE 2+3 \\ WHEN 4 THEN 0 \\ WHEN 5 THEN 1 \\ ELSE -1 \\ END \\ AS result; +--------+ | result | +--------+ | 1 | +--------+","title":"\u72ec\u7acb\u4f7f\u7528YIELD\u8bed\u53e5"},{"location":"3.ngql-guide/9.space-statements/1.create-space/","text":"CREATE SPACE \u00b6 \u56fe\u7a7a\u95f4\u662fNebula Graph\u4e2d\u5f7c\u6b64\u9694\u79bb\u7684\u56fe\u6570\u636e\u96c6\u5408\uff0c\u4e0eMySQL\u4e2d\u7684database\u6982\u5ff5\u7c7b\u4f3c\u3002 CREATE SPACE \u8bed\u53e5\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe\u7a7a\u95f4\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u53ea\u6709God\u89d2\u8272\u7684\u7528\u6237\u53ef\u4ee5\u6267\u884c CREATE SPACE \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u8eab\u4efd\u9a8c\u8bc1 \u3002 \u8bed\u6cd5 \u00b6 CREATE SPACE [IF NOT EXISTS] <graph_space_name> [(partition_num = <partition_number>, replica_factor = <replica_number>, vid_type = {FIXED_STRING(<N>) | INT64})]; IF NOT EXISTS \u00b6 IF NOT EXISTS \u5173\u952e\u5b57\u53ef\u4ee5\u68c0\u6d4b\u5f85\u521b\u5efa\u7684\u56fe\u7a7a\u95f4\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u521b\u5efa\u56fe\u7a7a\u95f4\u3002 \u8bf4\u660e \uff1a\u4ec5\u68c0\u6d4b\u56fe\u7a7a\u95f4\u7684\u540d\u79f0\uff0c\u4e0d\u4f1a\u68c0\u6d4b\u5177\u4f53\u5c5e\u6027\u3002 \u56fe\u7a7a\u95f4\u540d\u79f0 \u00b6 graph_space_name \u5728Nebula Graph\u5b9e\u4f8b\u4e2d\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u56fe\u7a7a\u95f4\u3002 \u81ea\u5b9a\u4e49\u56fe\u7a7a\u95f4\u9009\u9879 \u00b6 \u60a8\u53ef\u4ee5\u4e3a\u65b0\u7684\u56fe\u7a7a\u95f4\u8bbe\u7f6e\u5982\u4e0b\u9009\u9879\uff1a partition_num \u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u5206\u7247\u6570\u91cf\u3002\u5efa\u8bae\u8bbe\u7f6e\u4e3a5\u500d\u7684\u96c6\u7fa4\u786c\u76d8\u6570\u91cf\u3002\u4f8b\u5982\u96c6\u7fa4\u4e2d\u67093\u4e2a\u786c\u76d8\uff0c\u5efa\u8bae\u8bbe\u7f6e15\u4e2a\u5206\u7247\u3002\u9ed8\u8ba4\u503c\u4e3a100\u3002 replica_factor \u6307\u5b9a\u6bcf\u4e2a\u5206\u7247\u7684\u526f\u672c\u6570\u91cf\u3002\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8bbe\u7f6e\u4e3a3\uff0c\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u8bbe\u7f6e\u4e3a1\u3002\u7531\u4e8e\u9700\u8981\u57fa\u4e8e\u591a\u6570\u8868\u51b3\uff0c\u526f\u672c\u6570\u91cf\u5fc5\u987b\u662f \u5947\u6570 \u3002\u9ed8\u8ba4\u503c\u4e3a1\u3002 vid_type \u6307\u5b9a\u70b9ID\u7684\u6570\u636e\u7c7b\u578b\u3002\u53ef\u9009\u503c\u4e3a FIXED_STRING(<N>) \u548c INT64 \u3002 FIXED_STRING(<N>) \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff0c\u6700\u5927\u957f\u5ea6\u4e3a N \uff0c\u8d85\u51fa\u957f\u5ea6\u4f1a\u62a5\u9519\uff1b INT64 \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a\u6574\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a FIXED_STRING(8) \u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u9009\u9879\uff0cNebula Graph\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c\u521b\u5efa\u56fe\u7a7a\u95f4\u3002 \u793a\u4f8b \u00b6 # \u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 nebula> CREATE SPACE my_space_1; # \u6307\u5b9a\u5206\u7247\u6570\u91cf\u3002 nebula> CREATE SPACE my_space_2(partition_num=10); # \u6307\u5b9a\u526f\u672c\u6570\u91cf\u3002 nebula> CREATE SPACE my_space_3(replica_factor=1); # \u6307\u5b9a\u70b9ID\u6700\u5927\u957f\u5ea6\u3002 nebula> CREATE SPACE my_space_4(vid_type = FIXED_STRING(30)); \u521b\u5efa\u56fe\u7a7a\u95f4\u8bf4\u660e \u00b6 \u5c1d\u8bd5\u4f7f\u7528\u65b0\u521b\u5efa\u7684\u56fe\u7a7a\u95f4\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3a\u521b\u5efa\u662f\u5f02\u6b65\u5b9e\u73b0\u7684\u3002 Nebula Graph\u5c06\u5728\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u5185\u5b8c\u6210\u56fe\u7a7a\u95f4\u7684\u521b\u5efa\uff0c\u4e3a\u4e86\u786e\u4fdd\u521b\u5efa\u6210\u529f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u4e4b\u4e00\uff1a \u5728 SHOW SPACES \u6216 DESCRIBE SPACE \u8bed\u53e5\u7684\u7ed3\u679c\u4e2d\u67e5\u627e\u65b0\u7684\u56fe\u7a7a\u95f4\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8bf7\u7b49\u5f85\u51e0\u79d2\u91cd\u8bd5\u3002 \u7b49\u5f85\u4e24\u4e2a\u5fc3\u8df3\u5468\u671f\uff0c\u4f8b\u598220\u79d2\u3002 \u5982\u679c\u9700\u8981\u4fee\u6539\u5fc3\u8df3\u95f4\u9694\uff0c\u8bf7\u4e3a \u6240\u6709\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539\u53c2\u6570 heartbeat_interval_secs \u3002 \u68c0\u67e5\u5206\u7247\u5206\u5e03\u60c5\u51b5 \u00b6 \u5728\u5927\u578b\u96c6\u7fa4\u4e2d\uff0c\u7531\u4e8e\u542f\u52a8\u65f6\u95f4\u4e0d\u540c\uff0c\u5206\u7247\u7684\u5206\u5e03\u53ef\u80fd\u4e0d\u5747\u8861\u3002\u60a8\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5\u5206\u7247\u7684\u5206\u5e03\u60c5\u51b5\uff1a nebula> SHOW HOSTS; +-----------+-------+--------+--------------+---------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-----------+-------+--------+--------------+---------------------+------------------------+ | storaged0 | 9779 | ONLINE | 1 | nba:5 | nba:5 | +-----------+-------+--------+--------------+---------------------+------------------------+ | storaged1 | 9779 | ONLINE | 2 | test:1, nba:5 | nba:5, test:1 | +-----------+-------+--------+--------------+---------------------+------------------------+ | storaged2 | 9779 | ONLINE | 1 | nba:5 | nba:5 | +-----------+-------+--------+--------------+---------------------+------------------------+ \u5982\u679c\u9700\u8981\u5747\u8861\u8d1f\u8f7d\uff0c\u8bf7\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff1a nebula> BALANCE LEADER;","title":"CREATE SPACE"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#create_space","text":"\u56fe\u7a7a\u95f4\u662fNebula Graph\u4e2d\u5f7c\u6b64\u9694\u79bb\u7684\u56fe\u6570\u636e\u96c6\u5408\uff0c\u4e0eMySQL\u4e2d\u7684database\u6982\u5ff5\u7c7b\u4f3c\u3002 CREATE SPACE \u8bed\u53e5\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u540d\u79f0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u56fe\u7a7a\u95f4\u3002","title":"CREATE SPACE"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#_1","text":"\u53ea\u6709God\u89d2\u8272\u7684\u7528\u6237\u53ef\u4ee5\u6267\u884c CREATE SPACE \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u8eab\u4efd\u9a8c\u8bc1 \u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#_2","text":"CREATE SPACE [IF NOT EXISTS] <graph_space_name> [(partition_num = <partition_number>, replica_factor = <replica_number>, vid_type = {FIXED_STRING(<N>) | INT64})];","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#if_not_exists","text":"IF NOT EXISTS \u5173\u952e\u5b57\u53ef\u4ee5\u68c0\u6d4b\u5f85\u521b\u5efa\u7684\u56fe\u7a7a\u95f4\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u521b\u5efa\u56fe\u7a7a\u95f4\u3002 \u8bf4\u660e \uff1a\u4ec5\u68c0\u6d4b\u56fe\u7a7a\u95f4\u7684\u540d\u79f0\uff0c\u4e0d\u4f1a\u68c0\u6d4b\u5177\u4f53\u5c5e\u6027\u3002","title":"IF NOT EXISTS"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#_3","text":"graph_space_name \u5728Nebula Graph\u5b9e\u4f8b\u4e2d\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u56fe\u7a7a\u95f4\u3002","title":"\u56fe\u7a7a\u95f4\u540d\u79f0"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#_4","text":"\u60a8\u53ef\u4ee5\u4e3a\u65b0\u7684\u56fe\u7a7a\u95f4\u8bbe\u7f6e\u5982\u4e0b\u9009\u9879\uff1a partition_num \u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u5206\u7247\u6570\u91cf\u3002\u5efa\u8bae\u8bbe\u7f6e\u4e3a5\u500d\u7684\u96c6\u7fa4\u786c\u76d8\u6570\u91cf\u3002\u4f8b\u5982\u96c6\u7fa4\u4e2d\u67093\u4e2a\u786c\u76d8\uff0c\u5efa\u8bae\u8bbe\u7f6e15\u4e2a\u5206\u7247\u3002\u9ed8\u8ba4\u503c\u4e3a100\u3002 replica_factor \u6307\u5b9a\u6bcf\u4e2a\u5206\u7247\u7684\u526f\u672c\u6570\u91cf\u3002\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8bbe\u7f6e\u4e3a3\uff0c\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u8bbe\u7f6e\u4e3a1\u3002\u7531\u4e8e\u9700\u8981\u57fa\u4e8e\u591a\u6570\u8868\u51b3\uff0c\u526f\u672c\u6570\u91cf\u5fc5\u987b\u662f \u5947\u6570 \u3002\u9ed8\u8ba4\u503c\u4e3a1\u3002 vid_type \u6307\u5b9a\u70b9ID\u7684\u6570\u636e\u7c7b\u578b\u3002\u53ef\u9009\u503c\u4e3a FIXED_STRING(<N>) \u548c INT64 \u3002 FIXED_STRING(<N>) \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff0c\u6700\u5927\u957f\u5ea6\u4e3a N \uff0c\u8d85\u51fa\u957f\u5ea6\u4f1a\u62a5\u9519\uff1b INT64 \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a\u6574\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a FIXED_STRING(8) \u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u9009\u9879\uff0cNebula Graph\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c\u521b\u5efa\u56fe\u7a7a\u95f4\u3002","title":"\u81ea\u5b9a\u4e49\u56fe\u7a7a\u95f4\u9009\u9879"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#_5","text":"# \u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 nebula> CREATE SPACE my_space_1; # \u6307\u5b9a\u5206\u7247\u6570\u91cf\u3002 nebula> CREATE SPACE my_space_2(partition_num=10); # \u6307\u5b9a\u526f\u672c\u6570\u91cf\u3002 nebula> CREATE SPACE my_space_3(replica_factor=1); # \u6307\u5b9a\u70b9ID\u6700\u5927\u957f\u5ea6\u3002 nebula> CREATE SPACE my_space_4(vid_type = FIXED_STRING(30));","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#_6","text":"\u5c1d\u8bd5\u4f7f\u7528\u65b0\u521b\u5efa\u7684\u56fe\u7a7a\u95f4\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u56e0\u4e3a\u521b\u5efa\u662f\u5f02\u6b65\u5b9e\u73b0\u7684\u3002 Nebula Graph\u5c06\u5728\u4e0b\u4e00\u4e2a\u5fc3\u8df3\u5468\u671f\u5185\u5b8c\u6210\u56fe\u7a7a\u95f4\u7684\u521b\u5efa\uff0c\u4e3a\u4e86\u786e\u4fdd\u521b\u5efa\u6210\u529f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u4e4b\u4e00\uff1a \u5728 SHOW SPACES \u6216 DESCRIBE SPACE \u8bed\u53e5\u7684\u7ed3\u679c\u4e2d\u67e5\u627e\u65b0\u7684\u56fe\u7a7a\u95f4\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8bf7\u7b49\u5f85\u51e0\u79d2\u91cd\u8bd5\u3002 \u7b49\u5f85\u4e24\u4e2a\u5fc3\u8df3\u5468\u671f\uff0c\u4f8b\u598220\u79d2\u3002 \u5982\u679c\u9700\u8981\u4fee\u6539\u5fc3\u8df3\u95f4\u9694\uff0c\u8bf7\u4e3a \u6240\u6709\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539\u53c2\u6570 heartbeat_interval_secs \u3002","title":"\u521b\u5efa\u56fe\u7a7a\u95f4\u8bf4\u660e"},{"location":"3.ngql-guide/9.space-statements/1.create-space/#_7","text":"\u5728\u5927\u578b\u96c6\u7fa4\u4e2d\uff0c\u7531\u4e8e\u542f\u52a8\u65f6\u95f4\u4e0d\u540c\uff0c\u5206\u7247\u7684\u5206\u5e03\u53ef\u80fd\u4e0d\u5747\u8861\u3002\u60a8\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u68c0\u67e5\u5206\u7247\u7684\u5206\u5e03\u60c5\u51b5\uff1a nebula> SHOW HOSTS; +-----------+-------+--------+--------------+---------------------+------------------------+ | Host | Port | Status | Leader count | Leader distribution | Partition distribution | +-----------+-------+--------+--------------+---------------------+------------------------+ | storaged0 | 9779 | ONLINE | 1 | nba:5 | nba:5 | +-----------+-------+--------+--------------+---------------------+------------------------+ | storaged1 | 9779 | ONLINE | 2 | test:1, nba:5 | nba:5, test:1 | +-----------+-------+--------+--------------+---------------------+------------------------+ | storaged2 | 9779 | ONLINE | 1 | nba:5 | nba:5 | +-----------+-------+--------+--------------+---------------------+------------------------+ \u5982\u679c\u9700\u8981\u5747\u8861\u8d1f\u8f7d\uff0c\u8bf7\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff1a nebula> BALANCE LEADER;","title":"\u68c0\u67e5\u5206\u7247\u5206\u5e03\u60c5\u51b5"},{"location":"3.ngql-guide/9.space-statements/2.use-space/","text":"USE \u00b6 USE \u8bed\u53e5\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u56fe\u7a7a\u95f4\uff0c\u6216\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u56fe\u7a7a\u95f4\uff0c\u5c06\u5176\u4f5c\u4e3a\u540e\u7eed\u67e5\u8be2\u7684\u5de5\u4f5c\u7a7a\u95f4\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u6267\u884c USE \u8bed\u53e5\u6307\u5b9a\u56fe\u7a7a\u95f4\u65f6\uff0c\u9700\u8981\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u62e5\u6709\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684 \u6743\u9650 \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 \u8bed\u6cd5 \u00b6 USE <graph_space_name>; \u793a\u4f8b \u00b6 # \u6307\u5b9a\u56fe\u7a7a\u95f4space1\u4f5c\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u3002 nebula> USE space1; # \u68c0\u7d22\u56fe\u7a7a\u95f4space1\u3002 nebula> GO FROM 1 OVER edge1; # \u5207\u6362\u5230\u56fe\u7a7a\u95f4space2\u3002 nebula> USE space2; # \u68c0\u7d22\u56fe\u7a7a\u95f4space2\u3002\u65e0\u6cd5\u4ecespace1\u8bfb\u53d6\u4efb\u4f55\u6570\u636e\uff0c\u68c0\u7d22\u7684\u70b9\u548c\u8fb9\u4e0espace1\u65e0\u5173\u3002 nebula> GO FROM 2 OVER edge2; \u8bf4\u660e \uff1a\u4e0d\u80fd\u5728\u4e00\u6761\u8bed\u53e5\u4e2d\u540c\u65f6\u64cd\u4f5c\u4e24\u4e2a\u56fe\u7a7a\u95f4\u3002 \u4e0eFabric Cypher\u4e0d\u540c\uff0cNebula Graph\u7684\u56fe\u7a7a\u95f4\u5f7c\u6b64\u4e4b\u95f4\u662f\u5b8c\u5168\u9694\u79bb\u7684\uff0c\u5c06\u4e00\u4e2a\u56fe\u7a7a\u95f4\u4f5c\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u540e\uff0c\u60a8\u65e0\u6cd5\u8bbf\u95ee\u5176\u4ed6\u7a7a\u95f4\u3002\u68c0\u7d22\u65b0\u56fe\u7a7a\u95f4\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u901a\u8fc7 USE \u8bed\u53e5\u5207\u6362\u3002Fabric Cypher\u53ef\u4ee5\u5728\u4e00\u6761\u8bed\u53e5\u4e2d\u4f7f\u7528\u4e24\u4e2a\u56fe\u7a7a\u95f4\u3002","title":"USE SPACE"},{"location":"3.ngql-guide/9.space-statements/2.use-space/#use","text":"USE \u8bed\u53e5\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u56fe\u7a7a\u95f4\uff0c\u6216\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u56fe\u7a7a\u95f4\uff0c\u5c06\u5176\u4f5c\u4e3a\u540e\u7eed\u67e5\u8be2\u7684\u5de5\u4f5c\u7a7a\u95f4\u3002","title":"USE"},{"location":"3.ngql-guide/9.space-statements/2.use-space/#_1","text":"\u6267\u884c USE \u8bed\u53e5\u6307\u5b9a\u56fe\u7a7a\u95f4\u65f6\uff0c\u9700\u8981\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u62e5\u6709\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684 \u6743\u9650 \uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/9.space-statements/2.use-space/#_2","text":"USE <graph_space_name>;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/9.space-statements/2.use-space/#_3","text":"# \u6307\u5b9a\u56fe\u7a7a\u95f4space1\u4f5c\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u3002 nebula> USE space1; # \u68c0\u7d22\u56fe\u7a7a\u95f4space1\u3002 nebula> GO FROM 1 OVER edge1; # \u5207\u6362\u5230\u56fe\u7a7a\u95f4space2\u3002 nebula> USE space2; # \u68c0\u7d22\u56fe\u7a7a\u95f4space2\u3002\u65e0\u6cd5\u4ecespace1\u8bfb\u53d6\u4efb\u4f55\u6570\u636e\uff0c\u68c0\u7d22\u7684\u70b9\u548c\u8fb9\u4e0espace1\u65e0\u5173\u3002 nebula> GO FROM 2 OVER edge2; \u8bf4\u660e \uff1a\u4e0d\u80fd\u5728\u4e00\u6761\u8bed\u53e5\u4e2d\u540c\u65f6\u64cd\u4f5c\u4e24\u4e2a\u56fe\u7a7a\u95f4\u3002 \u4e0eFabric Cypher\u4e0d\u540c\uff0cNebula Graph\u7684\u56fe\u7a7a\u95f4\u5f7c\u6b64\u4e4b\u95f4\u662f\u5b8c\u5168\u9694\u79bb\u7684\uff0c\u5c06\u4e00\u4e2a\u56fe\u7a7a\u95f4\u4f5c\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u540e\uff0c\u60a8\u65e0\u6cd5\u8bbf\u95ee\u5176\u4ed6\u7a7a\u95f4\u3002\u68c0\u7d22\u65b0\u56fe\u7a7a\u95f4\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u901a\u8fc7 USE \u8bed\u53e5\u5207\u6362\u3002Fabric Cypher\u53ef\u4ee5\u5728\u4e00\u6761\u8bed\u53e5\u4e2d\u4f7f\u7528\u4e24\u4e2a\u56fe\u7a7a\u95f4\u3002","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/9.space-statements/3.show-spaces/","text":"SHOW SPACES \u00b6 SHOW SPACES \u8bed\u53e5\u53ef\u4ee5\u5217\u51faNebula Graph\u793a\u4f8b\u4e2d\u7684\u6240\u6709\u56fe\u7a7a\u95f4\u3002 \u8bed\u6cd5 \u00b6 SHOW SPACES; \u793a\u4f8b \u00b6 nebula> SHOW SPACES; +-------+ | Name | +-------+ | \"cba\" | +-------+ | \"nba\" | +-------+ \u521b\u5efa\u56fe\u7a7a\u95f4\u8bf7\u53c2\u89c1 CREATE SPACE \u3002","title":"SHOW SPACES"},{"location":"3.ngql-guide/9.space-statements/3.show-spaces/#show_spaces","text":"SHOW SPACES \u8bed\u53e5\u53ef\u4ee5\u5217\u51faNebula Graph\u793a\u4f8b\u4e2d\u7684\u6240\u6709\u56fe\u7a7a\u95f4\u3002","title":"SHOW SPACES"},{"location":"3.ngql-guide/9.space-statements/3.show-spaces/#_1","text":"SHOW SPACES;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/9.space-statements/3.show-spaces/#_2","text":"nebula> SHOW SPACES; +-------+ | Name | +-------+ | \"cba\" | +-------+ | \"nba\" | +-------+ \u521b\u5efa\u56fe\u7a7a\u95f4\u8bf7\u53c2\u89c1 CREATE SPACE \u3002","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/9.space-statements/4.describe-space/","text":"DESCRIBE SPACE \u00b6 DESCRIBE SPACE \u8bed\u53e5\u53ef\u4ee5\u663e\u793a\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u4fe1\u606f\u3002 \u8bed\u6cd5 \u00b6 \u4f60\u53ef\u4ee5\u7528 DESC \u4f5c\u4e3a DESCRIBE \u7684\u7f29\u5199\u3002 DESC[RIBE] SPACE <graph_space_name>; \u793a\u4f8b \u00b6 nebula> DESCRIBE SPACE nba; +----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+ | ID | Name | Partition Number | Replica Factor | Charset | Collate | Vid Type | Atomic Edge | Group | +----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+ | 1 | \"nba\" | 10 | 1 | \"utf8\" | \"utf8_bin\" | \"FIXED_STRING(32)\" | \"false\" | \"default\" | +----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+","title":"DESCRIBE SPACE"},{"location":"3.ngql-guide/9.space-statements/4.describe-space/#describe_space","text":"DESCRIBE SPACE \u8bed\u53e5\u53ef\u4ee5\u663e\u793a\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u4fe1\u606f\u3002","title":"DESCRIBE SPACE"},{"location":"3.ngql-guide/9.space-statements/4.describe-space/#_1","text":"\u4f60\u53ef\u4ee5\u7528 DESC \u4f5c\u4e3a DESCRIBE \u7684\u7f29\u5199\u3002 DESC[RIBE] SPACE <graph_space_name>;","title":"\u8bed\u6cd5"},{"location":"3.ngql-guide/9.space-statements/4.describe-space/#_2","text":"nebula> DESCRIBE SPACE nba; +----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+ | ID | Name | Partition Number | Replica Factor | Charset | Collate | Vid Type | Atomic Edge | Group | +----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+ | 1 | \"nba\" | 10 | 1 | \"utf8\" | \"utf8_bin\" | \"FIXED_STRING(32)\" | \"false\" | \"default\" | +----+-------+------------------+----------------+---------+------------+--------------------+-------------+-----------+","title":"\u793a\u4f8b"},{"location":"3.ngql-guide/9.space-statements/5.drop-space/","text":"DROP SPACE \u00b6 DROP SPACE \u8bed\u53e5\u53ef\u4ee5\u5220\u9664\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u6240\u6709\u5185\u5bb9\u3002 \u524d\u63d0\u6761\u4ef6 \u00b6 \u53ea\u6709God\u89d2\u8272\u7684\u7528\u6237\u53ef\u4ee5\u6267\u884c DROP SPACE \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u8eab\u4efd\u9a8c\u8bc1 \u3002 \u8bed\u6cd5 \u00b6 DROP SPACE [IF EXISTS] <graph_space_name>; IF NOT EXISTS \u5173\u952e\u5b57\u53ef\u4ee5\u68c0\u6d4b\u5f85\u5220\u9664\u7684\u56fe\u7a7a\u95f4\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u5220\u9664\u56fe\u7a7a\u95f4\u3002 DROP SPACE \u8bed\u53e5\u4e0d\u4f1a\u7acb\u523b\u5220\u9664\u786c\u76d8\u4e0a\u5bf9\u5e94\u56fe\u7a7a\u95f4\u7684\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528 USE \u8bed\u53e5\u6307\u5b9a\u5176\u4ed6\u4efb\u610f\u56fe\u7a7a\u95f4\uff0c\u7136\u540e\u6267\u884c SUBMIT JOB COMPACT \u3002 \u8b66\u544a \uff1a\u8bf7 \u8c28\u614e \u6267\u884c\u5220\u9664\u56fe\u7a7a\u95f4\u64cd\u4f5c\u3002","title":"DROP SPACE"},{"location":"3.ngql-guide/9.space-statements/5.drop-space/#drop_space","text":"DROP SPACE \u8bed\u53e5\u53ef\u4ee5\u5220\u9664\u6307\u5b9a\u56fe\u7a7a\u95f4\u7684\u6240\u6709\u5185\u5bb9\u3002","title":"DROP SPACE"},{"location":"3.ngql-guide/9.space-statements/5.drop-space/#_1","text":"\u53ea\u6709God\u89d2\u8272\u7684\u7528\u6237\u53ef\u4ee5\u6267\u884c DROP SPACE \u8bed\u53e5\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 \u8eab\u4efd\u9a8c\u8bc1 \u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"3.ngql-guide/9.space-statements/5.drop-space/#_2","text":"DROP SPACE [IF EXISTS] <graph_space_name>; IF NOT EXISTS \u5173\u952e\u5b57\u53ef\u4ee5\u68c0\u6d4b\u5f85\u5220\u9664\u7684\u56fe\u7a7a\u95f4\u662f\u5426\u5b58\u5728\uff0c\u53ea\u6709\u5b58\u5728\u65f6\uff0c\u624d\u4f1a\u5220\u9664\u56fe\u7a7a\u95f4\u3002 DROP SPACE \u8bed\u53e5\u4e0d\u4f1a\u7acb\u523b\u5220\u9664\u786c\u76d8\u4e0a\u5bf9\u5e94\u56fe\u7a7a\u95f4\u7684\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528 USE \u8bed\u53e5\u6307\u5b9a\u5176\u4ed6\u4efb\u610f\u56fe\u7a7a\u95f4\uff0c\u7136\u540e\u6267\u884c SUBMIT JOB COMPACT \u3002 \u8b66\u544a \uff1a\u8bf7 \u8c28\u614e \u6267\u884c\u5220\u9664\u56fe\u7a7a\u95f4\u64cd\u4f5c\u3002","title":"\u8bed\u6cd5"},{"location":"nebula-exchange/ex-ug-compile/","text":"Compile Exchange \u00b6 To compile Exchange, follow these steps: Run these commands to install Nebula Java Client v2.x. $ git clone https://github.com/vesoft-inc/nebula-java.git $ cd nebula-java $ mvn clean install -Dmaven.test.skip = true -Dgpg.skip -Dmaven.javadoc.skip = true NOTE : After the installation, you can see the /com/vesoft/client/2.0.0-beta/client-2.0.0-beta.jar in your local Maven repository. Run these commands to package Nebula Exchange v2.x. $ git clone https://github.com/vesoft-inc/nebula-spark-utils.git $ cd nebula-spark-utils/nebula-exchange $ mvn clean package -Dmaven.test.skip = true -Dgpg.skip -Dmaven.javadoc.skip = true After the compiling, you can see the structure of the Exchange directory as follows. . \u251c\u2500\u2500 README-CN.md \u251c\u2500\u2500 README.md \u251c\u2500\u2500 pom.xml \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 main \u2502 \u2514\u2500\u2500 test \u2514\u2500\u2500 target \u251c\u2500\u2500 classes \u251c\u2500\u2500 classes.timestamp \u251c\u2500\u2500 maven-archiver \u251c\u2500\u2500 nebula-exchange-2.x.y-javadoc.jar \u251c\u2500\u2500 nebula-exchange-2.x.y-sources.jar \u251c\u2500\u2500 nebula-exchange-2.x.y.jar \u251c\u2500\u2500 original-nebula-exchange-2.x.y.jar \u2514\u2500\u2500 site In the target directory, you can see the exchange-2.x.y.jar file. NOTE : The version of the JAR file depends on the releases of Nebula Java Client. You can find the latest versions on the Releases page of the nebula-spark-utils repository . To import data, you can refer to the example configuration in the target/classes/application.conf , target/classes/server_application.conf , and target/classes/stream_application.conf files.","title":"Compile Exchange"},{"location":"nebula-exchange/ex-ug-compile/#compile_exchange","text":"To compile Exchange, follow these steps: Run these commands to install Nebula Java Client v2.x. $ git clone https://github.com/vesoft-inc/nebula-java.git $ cd nebula-java $ mvn clean install -Dmaven.test.skip = true -Dgpg.skip -Dmaven.javadoc.skip = true NOTE : After the installation, you can see the /com/vesoft/client/2.0.0-beta/client-2.0.0-beta.jar in your local Maven repository. Run these commands to package Nebula Exchange v2.x. $ git clone https://github.com/vesoft-inc/nebula-spark-utils.git $ cd nebula-spark-utils/nebula-exchange $ mvn clean package -Dmaven.test.skip = true -Dgpg.skip -Dmaven.javadoc.skip = true After the compiling, you can see the structure of the Exchange directory as follows. . \u251c\u2500\u2500 README-CN.md \u251c\u2500\u2500 README.md \u251c\u2500\u2500 pom.xml \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 main \u2502 \u2514\u2500\u2500 test \u2514\u2500\u2500 target \u251c\u2500\u2500 classes \u251c\u2500\u2500 classes.timestamp \u251c\u2500\u2500 maven-archiver \u251c\u2500\u2500 nebula-exchange-2.x.y-javadoc.jar \u251c\u2500\u2500 nebula-exchange-2.x.y-sources.jar \u251c\u2500\u2500 nebula-exchange-2.x.y.jar \u251c\u2500\u2500 original-nebula-exchange-2.x.y.jar \u2514\u2500\u2500 site In the target directory, you can see the exchange-2.x.y.jar file. NOTE : The version of the JAR file depends on the releases of Nebula Java Client. You can find the latest versions on the Releases page of the nebula-spark-utils repository . To import data, you can refer to the example configuration in the target/classes/application.conf , target/classes/server_application.conf , and target/classes/stream_application.conf files.","title":"Compile Exchange"},{"location":"nebula-exchange/ex-ug-toc/","text":"Nebula Exchange v2.x User Guide \u00b6 About Nebula Exchange What is Nebula Exchange Limitations Glossary FAQ Compile Exchange Use Exchange Import data from CSV files Import data from JSON files Import data from HIVE [Import data from Apache Parquet][DOC_TO_DO] [Import data from Apache ORC][DOC_TO_DO] [Import data from Neo4j][DOC_TO_DO] [Import data from HBase][DOC_TO_DO] [Import data from MySQL][DOC_TO_DO] [Import data from Kafka][DOC_TO_DO] [Import data from Pulsar][DOC_TO_DO] [Import SST files][DOC_TO_DO] Parameter reference Spark related parameters Nebula Graph related parameters Import command parameters","title":"Nebula Exchange v2.x User Guide"},{"location":"nebula-exchange/ex-ug-toc/#nebula_exchange_v2x_user_guide","text":"About Nebula Exchange What is Nebula Exchange Limitations Glossary FAQ Compile Exchange Use Exchange Import data from CSV files Import data from JSON files Import data from HIVE [Import data from Apache Parquet][DOC_TO_DO] [Import data from Apache ORC][DOC_TO_DO] [Import data from Neo4j][DOC_TO_DO] [Import data from HBase][DOC_TO_DO] [Import data from MySQL][DOC_TO_DO] [Import data from Kafka][DOC_TO_DO] [Import data from Pulsar][DOC_TO_DO] [Import SST files][DOC_TO_DO] Parameter reference Spark related parameters Nebula Graph related parameters Import command parameters","title":"Nebula Exchange v2.x User Guide"},{"location":"nebula-exchange/about-exchange/ex-ug-faq/","text":"FAQ \u00b6 What version of Nebula Graph does Exchange v2.x support? Read Limitations to get the latest information about supported Nebula Graph versions. What are the differences between Exchange v1.x and Exchange v2.x? Compared with Exchange v1.x, Exchange v2.x has these new features: Importing vertex data with String type IDs. Importing data of the Null, Date, DateTime, and Time types. Importing data from other Hive sources besides Hive on Spark. Recording and retrying the INSERT statement after failures during data import. For more information, see Exchange README . What is the difference between Exchange and Spark Writer? Both are Spark applications, and Exchange is based on Spark Writer. Both of them are designed for the migration of data into a Nebula Graph cluster in a distributed environment, but the later maintenance work will focus on Exchange. Compared with Spark Writer, Exchange has the following improvements: Supporting more data sources, such as MySQL, Neo4j, HIVE, HBase, Kafka, and Pulsar. Some problems with Spark Writer were fixed. For example, by default Spark reads source data from HDFS as strings, which is probably different from your graph schema defined in Nebula Graph. Exchange supports automatically matching and converting data types. With it, when a non-string data type is defined in Nebula Graph, Exchange converts the strings into data of the required data type.","title":"FAQ"},{"location":"nebula-exchange/about-exchange/ex-ug-faq/#faq","text":"What version of Nebula Graph does Exchange v2.x support? Read Limitations to get the latest information about supported Nebula Graph versions. What are the differences between Exchange v1.x and Exchange v2.x? Compared with Exchange v1.x, Exchange v2.x has these new features: Importing vertex data with String type IDs. Importing data of the Null, Date, DateTime, and Time types. Importing data from other Hive sources besides Hive on Spark. Recording and retrying the INSERT statement after failures during data import. For more information, see Exchange README . What is the difference between Exchange and Spark Writer? Both are Spark applications, and Exchange is based on Spark Writer. Both of them are designed for the migration of data into a Nebula Graph cluster in a distributed environment, but the later maintenance work will focus on Exchange. Compared with Spark Writer, Exchange has the following improvements: Supporting more data sources, such as MySQL, Neo4j, HIVE, HBase, Kafka, and Pulsar. Some problems with Spark Writer were fixed. For example, by default Spark reads source data from HDFS as strings, which is probably different from your graph schema defined in Nebula Graph. Exchange supports automatically matching and converting data types. With it, when a non-string data type is defined in Nebula Graph, Exchange converts the strings into data of the required data type.","title":"FAQ"},{"location":"nebula-exchange/about-exchange/ex-ug-limitations/","text":"Limitations \u00b6 This article introduces the limitations of Exchange v2.x. Supported Nebula Graph versions \u00b6 Exchange v2.x supports Nebula Graph v2.x only. If you are using Nebula Graph v1.x, please use Nebula Exchange v1.x . Supported operation systems \u00b6 You can use Exchange v2.x in these operation systems: CentOS 7 macOS NOTE : Importing SST files with Exchange v2.x is supported in Linux only. Software dependencies \u00b6 To make sure that Exchange v2.x works properly, make sure that these software applications are installed in your machine: Apache Spark: 2.3.0 or later versions Java: 1.8 Scala: 2.10.7, 2.11.12, or 2.12.10 In these scenarios, Hadoop Distributed File System (HDFS) must be deployed: Importing data from HDFS to Nebula Graph Importing SST files into Nebula Graph","title":"Limitations"},{"location":"nebula-exchange/about-exchange/ex-ug-limitations/#limitations","text":"This article introduces the limitations of Exchange v2.x.","title":"Limitations"},{"location":"nebula-exchange/about-exchange/ex-ug-limitations/#supported_nebula_graph_versions","text":"Exchange v2.x supports Nebula Graph v2.x only. If you are using Nebula Graph v1.x, please use Nebula Exchange v1.x .","title":"Supported Nebula Graph versions"},{"location":"nebula-exchange/about-exchange/ex-ug-limitations/#supported_operation_systems","text":"You can use Exchange v2.x in these operation systems: CentOS 7 macOS NOTE : Importing SST files with Exchange v2.x is supported in Linux only.","title":"Supported operation systems"},{"location":"nebula-exchange/about-exchange/ex-ug-limitations/#software_dependencies","text":"To make sure that Exchange v2.x works properly, make sure that these software applications are installed in your machine: Apache Spark: 2.3.0 or later versions Java: 1.8 Scala: 2.10.7, 2.11.12, or 2.12.10 In these scenarios, Hadoop Distributed File System (HDFS) must be deployed: Importing data from HDFS to Nebula Graph Importing SST files into Nebula Graph","title":"Software dependencies"},{"location":"nebula-exchange/about-exchange/ex-ug-terms/","text":"Glossary \u00b6 This article gives explanations of some necessary terminologies in this user guide. Nebula Exchange: Referred to as Exchange v2.x or Exchange in this user guide. It is a Spark application based on Apache Spark\u2122 for batch or stream processing data migration. It supports converting data from different sources into vertex and edge data that can be recognized by Nebula Graph, and then concurrently importing data into Nebula Graph. Apache Spark\u2122: A fast and general computing engine designed for large-scale data processing. It is an open-source project of Apache Software Foundation. Driver Program: Referred to as driver in this user guide. It is a program that runs the main function of an application and creates a new SparkContext instance.","title":"Glossary"},{"location":"nebula-exchange/about-exchange/ex-ug-terms/#glossary","text":"This article gives explanations of some necessary terminologies in this user guide. Nebula Exchange: Referred to as Exchange v2.x or Exchange in this user guide. It is a Spark application based on Apache Spark\u2122 for batch or stream processing data migration. It supports converting data from different sources into vertex and edge data that can be recognized by Nebula Graph, and then concurrently importing data into Nebula Graph. Apache Spark\u2122: A fast and general computing engine designed for large-scale data processing. It is an open-source project of Apache Software Foundation. Driver Program: Referred to as driver in this user guide. It is a program that runs the main function of an application and creates a new SparkContext instance.","title":"Glossary"},{"location":"nebula-exchange/about-exchange/ex-ug-what-is-exchange/","text":"What is Nebula Exchange \u00b6 Nebula Exchange v2.x (Exchange v2.x or Exchange in short) is an Apache Spark\u2122 application. It can be used to migrate data from a cluster in a distributed environment to a Nebula Graph v2.x cluster. It supports processing different formats of batch data and streaming data. Exchange is composed of Reader, Processor, and Writer. Reader reads data of different sources and creates DataFrame. Processor traverses every row of the DataFrame and obtains the values for each column according to the mapping of the fields in the configuration file. And then after the specified rows of data to be batch processed are traversed, Writer writes the obtained data into Nebula Graph concurrently. This figure shows how the data is transformed and transferred in Exchange. Scenarios \u00b6 You can use Exchange in these scenarios: Converting streaming data from Kafka or Pulsar platforms to vertex or edge data of property graphs and importing them into Nebula Graph. For example, log files, online shopping data, in-game player activities, social networking information, financial trading services, geospatial services, or telemetry data from connected devices or instruments in the data center. Converting batch data (such as data in a certain period of time) from a relational database (such as MySQL) or a distributed file system (such as HDFS) into vertex or edge data of property graphs, and importing them into Nebula Graph. Converting a large amount of data into SST files and then importing them into Nebula Graph. Features \u00b6 Exchange has these features: Adaptable: Exchange supports importing data from different sources into Nebula Graph, which is convenient for you to migrate data. SST files supported: Exchange supports converting data from different sources into SST files for data import. NOTE : Importing SST files with Exchange v2.x is supported in Linux only. Resuming broken transfer: Exchange supports resuming an interrupted transfer from a broken point during the data import process, which saves your time and improves efficiency. NOTE : Exchange v2.x supports resuming broken transfer for Neo4j only. Asynchronous: Exchange enables you to set an insertion statement for the source and sends it to the Graph Service of Nebula Graph for data insertion. Flexible: Exchange supports importing multiple types of vertices and edges of different sources or formats simultaneously. Statistics: Exchange uses the accumulator in Apache Spark\u2122 to count the successes and failures during the insertion process. Easy to use and user-friendly: Exchange supports HOCON (Human-Optimized Config Object Notation) configuration file format, which is object-oriented, and easy to understand and operate. Supported data sources \u00b6 You can use Exchange v2.x to convert data of these sources into vertex and edge data and then import them to Nebula Graph v2.x: Data of different formats stored on HDFS, including: Apache Parquet Apache ORC JSON CSV Apache HBase\u2122 Data warehouses: HIVE Graph databases: Neo4j 2.4.5-M1. Resuming transfer from a broken point is supported for Neo4j data only. Relational databases: MySQL Stream processing platforms: Apache Kafka\u00ae Messaging and streaming platforms: Apache Pulsar 2.4.5","title":"What is Nebula Exchange"},{"location":"nebula-exchange/about-exchange/ex-ug-what-is-exchange/#what_is_nebula_exchange","text":"Nebula Exchange v2.x (Exchange v2.x or Exchange in short) is an Apache Spark\u2122 application. It can be used to migrate data from a cluster in a distributed environment to a Nebula Graph v2.x cluster. It supports processing different formats of batch data and streaming data. Exchange is composed of Reader, Processor, and Writer. Reader reads data of different sources and creates DataFrame. Processor traverses every row of the DataFrame and obtains the values for each column according to the mapping of the fields in the configuration file. And then after the specified rows of data to be batch processed are traversed, Writer writes the obtained data into Nebula Graph concurrently. This figure shows how the data is transformed and transferred in Exchange.","title":"What is Nebula Exchange"},{"location":"nebula-exchange/about-exchange/ex-ug-what-is-exchange/#scenarios","text":"You can use Exchange in these scenarios: Converting streaming data from Kafka or Pulsar platforms to vertex or edge data of property graphs and importing them into Nebula Graph. For example, log files, online shopping data, in-game player activities, social networking information, financial trading services, geospatial services, or telemetry data from connected devices or instruments in the data center. Converting batch data (such as data in a certain period of time) from a relational database (such as MySQL) or a distributed file system (such as HDFS) into vertex or edge data of property graphs, and importing them into Nebula Graph. Converting a large amount of data into SST files and then importing them into Nebula Graph.","title":"Scenarios"},{"location":"nebula-exchange/about-exchange/ex-ug-what-is-exchange/#features","text":"Exchange has these features: Adaptable: Exchange supports importing data from different sources into Nebula Graph, which is convenient for you to migrate data. SST files supported: Exchange supports converting data from different sources into SST files for data import. NOTE : Importing SST files with Exchange v2.x is supported in Linux only. Resuming broken transfer: Exchange supports resuming an interrupted transfer from a broken point during the data import process, which saves your time and improves efficiency. NOTE : Exchange v2.x supports resuming broken transfer for Neo4j only. Asynchronous: Exchange enables you to set an insertion statement for the source and sends it to the Graph Service of Nebula Graph for data insertion. Flexible: Exchange supports importing multiple types of vertices and edges of different sources or formats simultaneously. Statistics: Exchange uses the accumulator in Apache Spark\u2122 to count the successes and failures during the insertion process. Easy to use and user-friendly: Exchange supports HOCON (Human-Optimized Config Object Notation) configuration file format, which is object-oriented, and easy to understand and operate.","title":"Features"},{"location":"nebula-exchange/about-exchange/ex-ug-what-is-exchange/#supported_data_sources","text":"You can use Exchange v2.x to convert data of these sources into vertex and edge data and then import them to Nebula Graph v2.x: Data of different formats stored on HDFS, including: Apache Parquet Apache ORC JSON CSV Apache HBase\u2122 Data warehouses: HIVE Graph databases: Neo4j 2.4.5-M1. Resuming transfer from a broken point is supported for Neo4j data only. Relational databases: MySQL Stream processing platforms: Apache Kafka\u00ae Messaging and streaming platforms: Apache Pulsar 2.4.5","title":"Supported data sources"},{"location":"nebula-exchange/parameter-reference/ex-ug-para-import-command/","text":"Import command parameters \u00b6 When the configuration file is ready, replace master-node-url and exchange-2.x.y.jar in this command and run it to import the data from the specified source into Nebula Graph. $SPARK_HOME /bin/spark-submit --master \"master-node-url\" --class com.vesoft.nebula.exchange.Exchange target/exchange-2.x.y.jar -c /path/to/conf/application.conf This table lists all the parameters in the preceding command. Parameters Required? Default Description --master Yes None Specifies the URL of the Master node of the specified Spark cluster. For more information, see master-urls in Spark Documentation \u3002 --class Yes None Specifies the entry point of Exchange. -c / --config Yes None Specifies the path of the Exchange configuration file. -h / --hive No false If you want to import data from HIVE, add this parameter. -D / --dry No false Before data import, add this parameter to do a check of the format of the configuration file, but not the configuration of tags and edges . Do not use this parameter when you import data.","title":"Import command parameters"},{"location":"nebula-exchange/parameter-reference/ex-ug-para-import-command/#import_command_parameters","text":"When the configuration file is ready, replace master-node-url and exchange-2.x.y.jar in this command and run it to import the data from the specified source into Nebula Graph. $SPARK_HOME /bin/spark-submit --master \"master-node-url\" --class com.vesoft.nebula.exchange.Exchange target/exchange-2.x.y.jar -c /path/to/conf/application.conf This table lists all the parameters in the preceding command. Parameters Required? Default Description --master Yes None Specifies the URL of the Master node of the specified Spark cluster. For more information, see master-urls in Spark Documentation \u3002 --class Yes None Specifies the entry point of Exchange. -c / --config Yes None Specifies the path of the Exchange configuration file. -h / --hive No false If you want to import data from HIVE, add this parameter. -D / --dry No false Before data import, add this parameter to do a check of the format of the configuration file, but not the configuration of tags and edges . Do not use this parameter when you import data.","title":"Import command parameters"},{"location":"nebula-exchange/parameter-reference/ex-ug-paras-nebulagraph/","text":"Nebula Graph related parameters \u00b6 To import data, you must set parameters for Nebula Graph. This table lists all the Nebula Graph related parameters. For more information, see the examples . Parameters Default Data Type Required? Description nebula.address.graph None list[string] Yes Specifies the addresses and ports used by the Graph Service of Nebula Graph. Multiple addresses must be separated with commas. In the format of \"ip1:port\",\"ip2:port\",\"ip3:port\" . nebula.address.meta None list[string] Yes Specifies the addresses and ports used by the Meta Service of Nebula Graph. Multiple addresses must be separated with commas. In the format of \"ip1:port\",\"ip2:port\",\"ip3:port\" . nebula.user user string Yes Specifies an account of Nebula Graph. The default value is user . If authentication is enabled in Nebula Graph: - If no account is created, use root . - If a specified account is created and given the write permission to a graph space, you can use this account. nebula.pswd password string Yes Specifies the password of the specified account. The default password for the user account is password . If authentication is enabled in Nebula Graph: - For the root account, use nebula . - For another account, use the specified password. nebula.space None string Yes Specifies the name of the graph space to import data. nebula.connection.timeout 3000 int No Specifies the period of timeout for Thrift connection. Unit: ms. nebula.connection.retry 3 int No Specifies the number of retries for Thrift connection. nebula.execution.retry 3 int No Specifies the number of execution retries of an nGQL statements nebula.error.max 32 int No Specifies the maximum number of failures during the import process. When the specified number of failures occur, the submitted Spark job stops automatically. nebula.error.output None string Yes Specifies a logging directory on the Nebula Graph cluster for the error message.","title":"Nebula Graph related parameters"},{"location":"nebula-exchange/parameter-reference/ex-ug-paras-nebulagraph/#nebula_graph_related_parameters","text":"To import data, you must set parameters for Nebula Graph. This table lists all the Nebula Graph related parameters. For more information, see the examples . Parameters Default Data Type Required? Description nebula.address.graph None list[string] Yes Specifies the addresses and ports used by the Graph Service of Nebula Graph. Multiple addresses must be separated with commas. In the format of \"ip1:port\",\"ip2:port\",\"ip3:port\" . nebula.address.meta None list[string] Yes Specifies the addresses and ports used by the Meta Service of Nebula Graph. Multiple addresses must be separated with commas. In the format of \"ip1:port\",\"ip2:port\",\"ip3:port\" . nebula.user user string Yes Specifies an account of Nebula Graph. The default value is user . If authentication is enabled in Nebula Graph: - If no account is created, use root . - If a specified account is created and given the write permission to a graph space, you can use this account. nebula.pswd password string Yes Specifies the password of the specified account. The default password for the user account is password . If authentication is enabled in Nebula Graph: - For the root account, use nebula . - For another account, use the specified password. nebula.space None string Yes Specifies the name of the graph space to import data. nebula.connection.timeout 3000 int No Specifies the period of timeout for Thrift connection. Unit: ms. nebula.connection.retry 3 int No Specifies the number of retries for Thrift connection. nebula.execution.retry 3 int No Specifies the number of execution retries of an nGQL statements nebula.error.max 32 int No Specifies the maximum number of failures during the import process. When the specified number of failures occur, the submitted Spark job stops automatically. nebula.error.output None string Yes Specifies a logging directory on the Nebula Graph cluster for the error message.","title":"Nebula Graph related parameters"},{"location":"nebula-exchange/parameter-reference/ex-ug-paras-spark/","text":"Spark related parameters \u00b6 To import data, you must set parameters for Spark. This table lists some generally-used parameters. For more Spark-related parameters, see Apache Spark documentation . For more information, see the examples . Parameters Default Data type Required? Description spark.app.name Nebula Exchange 2.0 string No Specifies the name of the Spark Driver Program. spark.driver.cores 1 int No Specifies the number of cores to use for the driver process, only in cluster mode. spark.driver.maxResultSize 1G string No Specifies the limit of the total size of serialized results of all partitions for each Spark action (e.g. collect) in bytes. Should be at least 1M, or 0 for unlimited. spark.cores.max None int No When the driver program runs on a standalone deployed cluster or a Mesos cluster in \"coarse-grained\" sharing mode, the maximum amount of CPU cores to request for the application from across the cluster (not from each machine). If not set, the default will be spark.deploy.defaultCores on the standalone cluster manager of Spark, or infinite (all available cores) on Mesos.","title":"Spark related parameters"},{"location":"nebula-exchange/parameter-reference/ex-ug-paras-spark/#spark_related_parameters","text":"To import data, you must set parameters for Spark. This table lists some generally-used parameters. For more Spark-related parameters, see Apache Spark documentation . For more information, see the examples . Parameters Default Data type Required? Description spark.app.name Nebula Exchange 2.0 string No Specifies the name of the Spark Driver Program. spark.driver.cores 1 int No Specifies the number of cores to use for the driver process, only in cluster mode. spark.driver.maxResultSize 1G string No Specifies the limit of the total size of serialized results of all partitions for each Spark action (e.g. collect) in bytes. Should be at least 1M, or 0 for unlimited. spark.cores.max None int No When the driver program runs on a standalone deployed cluster or a Mesos cluster in \"coarse-grained\" sharing mode, the maximum amount of CPU cores to request for the application from across the cluster (not from each machine). If not set, the default will be spark.deploy.defaultCores on the standalone cluster manager of Spark, or infinite (all available cores) on Mesos.","title":"Spark related parameters"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/","text":"Import data from CSV files \u00b6 This article uses an example to show how to use Exchange to import data from CSV files stored on HDFS into Nebula Graph. If you want to import data from local CSV files into Nebula Graph v2.x, see Nebula Importer . Dataset \u00b6 In this article, the Social Network: MOOC User Action Dataset provided by Stanford Network Analysis Platform (SNAP) and 97 unique course names obtained from the public network are used as the sample dataset. The dataset contains: Two vertex types ( user and course ), 7,144 vertices in total. One edge type ( action ), 411,749 edges in total. You can download the example dataset from the nebula-web-docker repository. Environment \u00b6 The practice is done in macOS. Here is the environment information: Hardware specifications: CPU: 1.7 GHz Quad-Core Intel Core i7 Memory: 16 GB Spark 2.4.7, deployed in the Standalone mode Hadoop 2.9.2, deployed in the Pseudo-Distributed mode Nebula Graph v2-nightly, deployed with Docker Compose. For more information, see Deploy Nebula Graph with Docker Compose . Prerequisites \u00b6 To import data from CSV files on HDFS with Exchange v2.x, do a check of these: Exchange v2.x is compiled. For more information, see Compile Exchange v2.x . Exchange 2.0.0 is used in this example. Spark is installed. Hadoop is installed and started. Nebula Graph is deployed and started. Get the information: IP addresses and ports of the Graph Service and the Meta Service. A Nebula Graph account with the privilege of writing data and its password. Get the necessary information for schema creation in Nebula Graph, including tags and edge types. Procedure \u00b6 Step 1. Create a schema in Nebula Graph \u00b6 Analyze the data in the CSV files and follow these steps to create a schema in Nebula Graph: Confirm the essential elements of the schema. Elements Names Properties Tag user userId string Tag course courseId int, courseName string Edge Type action actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double In Nebula Graph, create a graph space named csv and create a schema. -- Create a graph space named csv CREATE SPACE [IF NOT EXISTS] <graph_space_name> [(partition_num = <partition_number>, replica_factor = <replica_number>, vid_type = {FIXED_STRING(<N>)) | INT64}]; -- Choose the csv graph space USE csv; -- Create the user tag CREATE TAG user(userId string); -- Create the course tag CREATE TAG course(courseId int, courseName string); -- Create the action edge type CREATE EDGE action (actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double); For more information, see Quick Start of Nebula Graph Database . Step 2. Prepare CSV files \u00b6 Do a check of these: The CSV files are processed to meet the requirements of the schema. For more information, see Quick Start of Nebula Graph Studio . > NOTE : Exchange supports importing CSV files with or without headers. The CSV files must be stored in HDFS and get the file storage path. Step 3. Edit configuration file \u00b6 After compiling of Exchange, copy the target/classes/application.conf file and edit the configuration for CSV files. In this example, a new configuration file is named csv_ application.conf . In this file, the vertex and edge related configuration is introduced in the comments and all the items that are not used in this example are commented out. For more information about the Spark and Nebula related parameters, see Spark related parameters and Nebula Graph related parameters . { # Spark related configuration spark: { app: { name: Nebula Exchange 2.0 } driver: { cores: 1 maxResultSize: 1G } executor: { memory:1G } cores { max: 16 } } # Nebula Graph related configuration nebula: { address:{ # Specifies the IP addresses and ports of the Graph Service and the Meta Service of Nebula Graph. # If multiple servers are used, separate the addresses with commas. # Format: \"ip1:port\",\"ip2:port\",\"ip3:port\". graph:[\"127.0.0.1:9669\"] meta:[\"127.0.0.1:9559\"] } # Specifies an account that has the WriteData privilege in Nebula Graph and its password. user: user pswd: password # Specifies a graph space name space: csv connection { timeout: 3000 retry: 3 } execution { retry: 3 } error: { max: 32 output: /tmp/errors } rate: { limit: 1024 timeout: 1000 } } # Process vertices tags: [ # Sets for the course tag { # Specifies a tag name defined in Nebula Graph. name: course type: { # Specifies the data source. csv is used. source: csv # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc_to_do). sink: client } # Specifies the HDFS path of the CSV file. # Enclose the path with double quotes and start the path with hdfs://. path: \"hdfs://namenode_ip:port/path/to/course.csv\" # If the CSV file has no header, use [_c0, _c1, _c2, ..., _cn] to # represent its header and to indicate columns as the source of the property values. fields: [_c0, _c1] # If the CSV file has a header, use the actual column names. # Specifies property names defined in Nebula Graph. # fields for the CSV file and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. nebula.fields: [courseId, courseName] # Specifies a column as the source of VIDs. # The value of vertex must be one column of the CSV file. vertex: _c1 # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. # vertex: { # field: _c1, # policy: \"hash\" # } # Specifies the separator. The default value is commas. separator: \",\" # If the CSV file has a header, set header to true. # If the CSV file has no header, set header to false (default value). header: false # Specifies the maximum number of vertex data to be written into # Nebula Graph in a single batch. batch: 256 # Specifies the partition number of Spark. partition: 32 } # Sets for the user tag { name: user type: { source: csv sink: client } path: \"hdfs://namenode_ip:port/path/to/user.csv\" # fields for the CSV file and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. fields: [userId] # Specifies property names defined in Nebula Graph. # fields for the CSV file and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. nebula.fields: [userId] # The value of vertex.field must be one column of the CSV file. vertex: userId separator: \",\" header: true batch: 256 partition: 32 } # If more tags are necessary, refer to the preceding configuration to add more. ] # Process edges edges: [ # Sets for the action edge type { # Specifies an edge type name defined in Nebula Graph name: action type: { # Specifies the data source. csv is used. source: csv # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc_to_do). sink: client } # Specifies the HDFS path of the CSV file. # Enclose the path with double quotes and start the path with hdfs://. path: \"hdfs://namenode_ip:port/path/to/actions.csv\" # If the CSV file has no header, use [_c0, _c1, _c2, ..., _cn] to # represent its header and to indicate columns as the source of the property values. fields: [_c0, _c3, _c4, _c5, _c6, _c7, _c8] # If the CSV file has a header, use the actual column names. # Specifies property names defined in Nebula Graph. # fields for the CSV file and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. nebula.fields: [actionId, duration, feature0, feature1, feature2, feature3, label] # Specifies the columns as the source of the IDs of the source and target vertices. source: _c1 target: _c2 # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use source.policy or target.policy for mapping. #target: { # field: _c2 # policy: \"hash\" #} # Specifies the separator. The default value is commas. separator: \",\" # If the CSV file has a header, set header to true. # If the CSV file has no header, set header to false (default value). header: false # Specifies the maximum number of vertex data to be written into # Nebula Graph in a single batch. batch: 256 # Specifies the partition number of Spark. partition: 32 } ] # If more edge types are necessary, refer to the preceding configuration to add more. } Step 4. (Optional) Verify the configuration \u00b6 After the configuration, run the import command with the -D parameter to verify the configuration file. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/csv_application.conf -D Step 5. Import data into Nebula Graph \u00b6 When the configuration is ready, run this command to import data from CSV files into Nebula Graph. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/csv_application.conf Step 6. (Optional) Verify data in Nebula Graph \u00b6 You can use a Nebula Graph client, such as Nebula Graph Studio, to verify the imported data. For example, in Nebula Graph Studio, run this statement. GO FROM \"1\" OVER action; If the queried destination vertices return, the data are imported into Nebula Graph. You can run the SHOW STATS statement to count the data. Step 7. (Optional) Create and rebuild indexes in Nebula Graph \u00b6 After the data is imported, you can create and rebuild indexes in Nebula Graph. For more information, see nGQL User Guide .","title":"Import data from CSV files"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#import_data_from_csv_files","text":"This article uses an example to show how to use Exchange to import data from CSV files stored on HDFS into Nebula Graph. If you want to import data from local CSV files into Nebula Graph v2.x, see Nebula Importer .","title":"Import data from CSV files"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#dataset","text":"In this article, the Social Network: MOOC User Action Dataset provided by Stanford Network Analysis Platform (SNAP) and 97 unique course names obtained from the public network are used as the sample dataset. The dataset contains: Two vertex types ( user and course ), 7,144 vertices in total. One edge type ( action ), 411,749 edges in total. You can download the example dataset from the nebula-web-docker repository.","title":"Dataset"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#environment","text":"The practice is done in macOS. Here is the environment information: Hardware specifications: CPU: 1.7 GHz Quad-Core Intel Core i7 Memory: 16 GB Spark 2.4.7, deployed in the Standalone mode Hadoop 2.9.2, deployed in the Pseudo-Distributed mode Nebula Graph v2-nightly, deployed with Docker Compose. For more information, see Deploy Nebula Graph with Docker Compose .","title":"Environment"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#prerequisites","text":"To import data from CSV files on HDFS with Exchange v2.x, do a check of these: Exchange v2.x is compiled. For more information, see Compile Exchange v2.x . Exchange 2.0.0 is used in this example. Spark is installed. Hadoop is installed and started. Nebula Graph is deployed and started. Get the information: IP addresses and ports of the Graph Service and the Meta Service. A Nebula Graph account with the privilege of writing data and its password. Get the necessary information for schema creation in Nebula Graph, including tags and edge types.","title":"Prerequisites"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#procedure","text":"","title":"Procedure"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#step_1_create_a_schema_in_nebula_graph","text":"Analyze the data in the CSV files and follow these steps to create a schema in Nebula Graph: Confirm the essential elements of the schema. Elements Names Properties Tag user userId string Tag course courseId int, courseName string Edge Type action actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double In Nebula Graph, create a graph space named csv and create a schema. -- Create a graph space named csv CREATE SPACE [IF NOT EXISTS] <graph_space_name> [(partition_num = <partition_number>, replica_factor = <replica_number>, vid_type = {FIXED_STRING(<N>)) | INT64}]; -- Choose the csv graph space USE csv; -- Create the user tag CREATE TAG user(userId string); -- Create the course tag CREATE TAG course(courseId int, courseName string); -- Create the action edge type CREATE EDGE action (actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double); For more information, see Quick Start of Nebula Graph Database .","title":"Step 1. Create a schema in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#step_2_prepare_csv_files","text":"Do a check of these: The CSV files are processed to meet the requirements of the schema. For more information, see Quick Start of Nebula Graph Studio . > NOTE : Exchange supports importing CSV files with or without headers. The CSV files must be stored in HDFS and get the file storage path.","title":"Step 2. Prepare CSV files"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#step_3_edit_configuration_file","text":"After compiling of Exchange, copy the target/classes/application.conf file and edit the configuration for CSV files. In this example, a new configuration file is named csv_ application.conf . In this file, the vertex and edge related configuration is introduced in the comments and all the items that are not used in this example are commented out. For more information about the Spark and Nebula related parameters, see Spark related parameters and Nebula Graph related parameters . { # Spark related configuration spark: { app: { name: Nebula Exchange 2.0 } driver: { cores: 1 maxResultSize: 1G } executor: { memory:1G } cores { max: 16 } } # Nebula Graph related configuration nebula: { address:{ # Specifies the IP addresses and ports of the Graph Service and the Meta Service of Nebula Graph. # If multiple servers are used, separate the addresses with commas. # Format: \"ip1:port\",\"ip2:port\",\"ip3:port\". graph:[\"127.0.0.1:9669\"] meta:[\"127.0.0.1:9559\"] } # Specifies an account that has the WriteData privilege in Nebula Graph and its password. user: user pswd: password # Specifies a graph space name space: csv connection { timeout: 3000 retry: 3 } execution { retry: 3 } error: { max: 32 output: /tmp/errors } rate: { limit: 1024 timeout: 1000 } } # Process vertices tags: [ # Sets for the course tag { # Specifies a tag name defined in Nebula Graph. name: course type: { # Specifies the data source. csv is used. source: csv # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc_to_do). sink: client } # Specifies the HDFS path of the CSV file. # Enclose the path with double quotes and start the path with hdfs://. path: \"hdfs://namenode_ip:port/path/to/course.csv\" # If the CSV file has no header, use [_c0, _c1, _c2, ..., _cn] to # represent its header and to indicate columns as the source of the property values. fields: [_c0, _c1] # If the CSV file has a header, use the actual column names. # Specifies property names defined in Nebula Graph. # fields for the CSV file and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. nebula.fields: [courseId, courseName] # Specifies a column as the source of VIDs. # The value of vertex must be one column of the CSV file. vertex: _c1 # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. # vertex: { # field: _c1, # policy: \"hash\" # } # Specifies the separator. The default value is commas. separator: \",\" # If the CSV file has a header, set header to true. # If the CSV file has no header, set header to false (default value). header: false # Specifies the maximum number of vertex data to be written into # Nebula Graph in a single batch. batch: 256 # Specifies the partition number of Spark. partition: 32 } # Sets for the user tag { name: user type: { source: csv sink: client } path: \"hdfs://namenode_ip:port/path/to/user.csv\" # fields for the CSV file and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. fields: [userId] # Specifies property names defined in Nebula Graph. # fields for the CSV file and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. nebula.fields: [userId] # The value of vertex.field must be one column of the CSV file. vertex: userId separator: \",\" header: true batch: 256 partition: 32 } # If more tags are necessary, refer to the preceding configuration to add more. ] # Process edges edges: [ # Sets for the action edge type { # Specifies an edge type name defined in Nebula Graph name: action type: { # Specifies the data source. csv is used. source: csv # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc_to_do). sink: client } # Specifies the HDFS path of the CSV file. # Enclose the path with double quotes and start the path with hdfs://. path: \"hdfs://namenode_ip:port/path/to/actions.csv\" # If the CSV file has no header, use [_c0, _c1, _c2, ..., _cn] to # represent its header and to indicate columns as the source of the property values. fields: [_c0, _c3, _c4, _c5, _c6, _c7, _c8] # If the CSV file has a header, use the actual column names. # Specifies property names defined in Nebula Graph. # fields for the CSV file and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. nebula.fields: [actionId, duration, feature0, feature1, feature2, feature3, label] # Specifies the columns as the source of the IDs of the source and target vertices. source: _c1 target: _c2 # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use source.policy or target.policy for mapping. #target: { # field: _c2 # policy: \"hash\" #} # Specifies the separator. The default value is commas. separator: \",\" # If the CSV file has a header, set header to true. # If the CSV file has no header, set header to false (default value). header: false # Specifies the maximum number of vertex data to be written into # Nebula Graph in a single batch. batch: 256 # Specifies the partition number of Spark. partition: 32 } ] # If more edge types are necessary, refer to the preceding configuration to add more. }","title":"Step 3. Edit configuration file"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#step_4_optional_verify_the_configuration","text":"After the configuration, run the import command with the -D parameter to verify the configuration file. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/csv_application.conf -D","title":"Step 4. (Optional) Verify the configuration"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#step_5_import_data_into_nebula_graph","text":"When the configuration is ready, run this command to import data from CSV files into Nebula Graph. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/csv_application.conf","title":"Step 5. Import data into Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#step_6_optional_verify_data_in_nebula_graph","text":"You can use a Nebula Graph client, such as Nebula Graph Studio, to verify the imported data. For example, in Nebula Graph Studio, run this statement. GO FROM \"1\" OVER action; If the queried destination vertices return, the data are imported into Nebula Graph. You can run the SHOW STATS statement to count the data.","title":"Step 6. (Optional) Verify data in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-from-csv/#step_7_optional_create_and_rebuild_indexes_in_nebula_graph","text":"After the data is imported, you can create and rebuild indexes in Nebula Graph. For more information, see nGQL User Guide .","title":"Step 7. (Optional) Create and rebuild indexes in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/","text":"Import data from HIVE \u00b6 This article uses an example to show how to use Exchange to import data from HIVE into Nebula Graph. Dataset \u00b6 In this article, the Social Network: MOOC User Action Dataset provided by Stanford Network Analysis Platform (SNAP) and 97 unique course names obtained from the public network are used as the sample dataset. The dataset contains: Two vertex types ( user and course ), 7,144 vertices in total. One edge type ( action ), 411,749 edges in total. You can download the example dataset from the nebula-web-docker repository. In this example, the dataset is stored in a database named mooc in HIVE, and the information of all vertices and edges is stored in the users , courses , and actions tables. Here are the structures of all the tables. scala > sql ( \"describe mooc.users\" ). show + --------+---------+-------+ | col_name | data_type | comment | + --------+---------+-------+ | userid | string | null | + --------+---------+-------+ scala > sql ( \"describe mooc.courses\" ). show + ----------+---------+-------+ | col_name | data_type | comment | + ----------+---------+-------+ | courseid | bigint | null | | coursename | string | null | + ----------+---------+-------+ scala > sql ( \"describe mooc.actions\" ). show + --------+---------+-------+ | col_name | data_type | comment | + --------+---------+-------+ | actionid | bigint | null | | srcid | string | null | | dstid | string | null | | duration | double | null | | feature0 | double | null | | feature1 | double | null | | feature2 | double | null | | feature3 | double | null | | label | boolean | null | + --------+---------+-------+ NOTE : bigint in HIVE equals to int in Nebula Graph. Environment \u00b6 The practice is done in macOS. Here is the environment information: Hardware specifications: CPU: 1.7 GHz Quad-Core Intel Core i7 Memory: 16 GB Spark 2.4.7, deployed in the Standalone mode Hadoop 2.9.2, deployed in the Pseudo-Distributed mode HIVE 2.3.7, with MySQL 8.0.22 Nebula Graph v2-nightly, deployed with Docker Compose. For more information, see Deploy Nebula Graph with Docker Compose . Prerequisites \u00b6 To import data from HIVE with Exchange v2.x, do a check of these: Exchange v2.x is compiled. For more information, see Compile Exchange v2.x . Exchange 2.0.0 is used in this example. Spark is installed. Hadoop is installed and started and the hive metastore database (MySQL is used in this example) is started. Nebula Graph is deployed and started. Get the information: IP addresses and ports of the Graph Service and the Meta Service. A Nebula Graph account with the privilege of writing data and its password. Get the necessary information for schema creation in Nebula Graph, including tags and edge types. Procedure \u00b6 Step 1. Create a schema in Nebula Graph \u00b6 Follow these steps to create a schema in Nebula Graph: Confirm the essential elements of the schema. Elements Names Properties Tag user userId string Tag course courseId int, courseName string Edge Type action actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double In Nebula Graph, create a graph space named hive and create a schema. -- Create a graph space named hive CREATE SPACE hive(partition_num=10, replica_factor=1, vid_type=fixed_string(100)); -- Choose the hive graph space USE hive; -- Create the user tag CREATE TAG user(userId string); -- Create the course tag CREATE TAG course(courseId int, courseName string); -- Create the action edge type CREATE EDGE action (actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double); For more information, see Quick Start of Nebula Graph . Step 2. Verify the HIVE SQL statements \u00b6 When spark-shell starts, run these statements one by one to make sure that Spark can read data from HIVE. scala > sql ( \"select userid from mooc.users\" ). show scala > sql ( \"select courseid, coursename from mooc.courses\" ). show scala > sql ( \"select actionid, srcid, dstid, duration, feature0, feature1, feature2, feature3, label from mooc.actions\" ). show Here is an example of data read from the mooc.actions table. + --------+-----+--------------------+--------+------------+------------+-----------+-----------+-----+ | actionid | srcid | dstid | duration | feature0 | feature1 | feature2 | feature3 | label | + --------+-----+--------------------+--------+------------+------------+-----------+-----------+-----+ | 0 | 0 | Environmental Dis ... | 0 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 1 | 0 | History of Ecology | 6 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 2 | 0 | Women in Islam | 41 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 3 | 0 | History of Ecology | 49 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 4 | 0 | Women in Islam | 51 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 5 | 0 | Legacies of the A ... | 55 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 6 | 0 | ITP Core 2 | 59 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 7 | 0 | The Research Pape ... | 62 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 8 | 0 | Neurobiology | 65 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 9 | 0 | Wikipedia | 113 . 0 |- 0 . 319991479 |- 0 . 435701433 | 1 . 108826104 | 12 . 77723482 | false | | 10 | 0 | Media History and ... | 226 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 607804941 | 149 . 4512115 | false | | 11 | 0 | WIKISOO | 974 . 0 |- 0 . 319991479 |- 0 . 435701433 | 1 . 108826104 | 3 . 344522776 | false | | 12 | 0 | Environmental Dis ... | 1000 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 13 | 0 | WIKISOO | 1172 . 0 |- 0 . 319991479 |- 0 . 435701433 | 1 . 108826104 | 1 . 136866766 | false | | 14 | 0 | Women in Islam | 1182 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 15 | 0 | History of Ecology | 1185 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 16 | 0 | Human Development ... | 1687 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 17 | 1 | Human Development ... | 7262 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 18 | 1 | History of Ecology | 7266 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 19 | 1 | Women in Islam | 7273 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 607804941 | 0 . 936170765 | false | + --------+-----+--------------------+--------+------------+------------+-----------+-----------+-----+ only showing top 20 rows Step 3. Edit configuration file \u00b6 After compiling of Exchange, copy the target/classes/application.conf file and edit the configuration for HIVE. In this example, a new configuration file is named hive_ application.conf . In this file, the vertex and edge related configuration is introduced as comments and all the items that are not used in this example are commented out. For more information about the Spark and Nebula related parameters, see Spark related parameters and Nebula Graph related parameters . { # Spark related configuration spark: { app: { name: Nebula Exchange 2.0 } driver: { cores: 1 maxResultSize: 1G } executor: { memory:1G } cores { max: 16 } } # If Spark and HIVE are deployed in the different clusters, # configure these parameters for HIVE. Otherwise, ignore them. #hive: { # waredir: \"hdfs://NAMENODE_IP:9000/apps/svr/hive-xxx/warehouse/\" # connectionURL: \"jdbc:mysql://your_ip:3306/hive_spark?characterEncoding=UTF-8\" # connectionDriverName: \"com.mysql.jdbc.Driver\" # connectionUserName: \"user\" # connectionPassword: \"password\" #} # Nebula Graph related configuration nebula: { address:{ # Specifies the IP addresses and ports of the Graph Service and the Meta Service of Nebula Graph # If multiple servers are used, separate the addresses with commas. # Format: \"ip1:port\",\"ip2:port\",\"ip3:port\" graph:[\"127.0.0.1:9669\"] meta:[\"127.0.0.1:9559\"] } # Specifies an account that has the WriteData privilege in Nebula Graph and its password user: user pswd: password # Specifies a graph space name space: hive connection { timeout: 3000 retry: 3 } execution { retry: 3 } error: { max: 32 output: /tmp/errors } rate: { limit: 1024 timeout: 1000 } } # Process vertices tags: [ # Sets for the user tag { # Specifies a tag name defined in Nebula Graph name: user type: { # Specifies the data source. hive is used. source: hive # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc to do). sink: client } # Specifies the SQL statement to read data from the users table in the mooc database exec: \"select userid from mooc.users\" # Specifies the column names from the users table to fields. # Their values are used as the source of the userId (nebula.fields) property defined in Nebula Graph. # If more than one column name is specified, separate them with commas. # fields for the HIVE and nebula.fields for Nebula Graph must have the one-to-one correspondence relationship. fields: [userid] nebula.fields: [userId] # Specifies a column as the source of VIDs. # The value of vertex must be one column name in the exec sentence. # If the values are not of the int type, use vertex.policy to # set the mapping policy. \"hash\" is preferred. # Refer to the configuration of the course tag. vertex: userid # Specifies the maximum number of vertex data to be written into # Nebula Graph in a single batch. batch: 256 # Specifies the partition number of Spark. partition: 32 } # Sets for the course tag { name: course type: { source: hive sink: client } exec: \"select courseid, coursename from mooc.courses\" fields: [courseid, coursename] nebula.fields: [courseId, courseName] # Specifies a column as the source of VIDs. # The value of vertex.field must be one column name in the exec sentence. vertex: coursename # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. #vertex: { # field: coursename # policy: \"hash\" #} batch: 256 partition: 32 } # If more tags are necessary, refer to the preceding configuration to add more. ] # Process edges edges: [ # Sets for the action edge type { # Specifies an edge type name defined in Nebula Graph name: action type: { # Specifies the data source. hive is used. source: hive # Specifies how to import vertex data into Nebula Graph: client or sst # For more information about importing sst files, # see Import SST files (doc to do). sink: client } # Specifies the SQL statement to read data from the actions table in # the mooc database. exec: \"select actionid, srcid, dstid, duration, feature0, feature1, feature2, feature3, label from mooc.actions\" # Specifies the column names from the actions table to fields. # Their values are used as the source of the properties of # the action edge type defined in Nebula Graph. # If more than one column name is specified, separate them with commas. # fields for the HIVE and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. fields: [actionid, duration, feature0, feature1, feature2, feature3, label] nebula.fields: [actionId, duration, feature0, feature1, feature2, feature3, label] # source specifies a column as the source of the IDs of # the source vertex of an edge. # target specifies a column as the source of the IDs of # the target vertex of an edge. # The value of source.field and target.field must be # column names set in the exec sentence. source: srcid target: dstid # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. #target: { # field: dstid # policy: \"hash\" #} # Specifies the maximum number of vertex data to be # written into Nebula Graph in a single batch. batch: 256 # Specifies the partition number of Spark. partition: 32 } ] } Step 4. (Optional) Verify the configuration \u00b6 After the configuration, run the import command with the -D parameter to verify the configuration file. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/hive_application.conf -h -D Step 5. Import data into Nebula Graph \u00b6 When the configuration is ready, run this command to import data from HIVE into Nebula Graph. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/hive_application.conf -h Step 6. (Optional) Verify data in Nebula Graph \u00b6 You can use a Nebula Graph client, such as Nebula Graph Studio, to verify the imported data. For example, in Nebula Graph Studio, run this statement. GO FROM \"1\" OVER action; If the queried destination vertices return, the data are imported into Nebula Graph. You can run the SHOW STATS statement to count the data. Step 7. (Optional) Create and rebuild indexes in Nebula Graph \u00b6 After the data is imported, you can create and rebuild indexes in Nebula Graph. For more information, see nGQL User Guide .","title":"Import data from HIVE"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#import_data_from_hive","text":"This article uses an example to show how to use Exchange to import data from HIVE into Nebula Graph.","title":"Import data from HIVE"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#dataset","text":"In this article, the Social Network: MOOC User Action Dataset provided by Stanford Network Analysis Platform (SNAP) and 97 unique course names obtained from the public network are used as the sample dataset. The dataset contains: Two vertex types ( user and course ), 7,144 vertices in total. One edge type ( action ), 411,749 edges in total. You can download the example dataset from the nebula-web-docker repository. In this example, the dataset is stored in a database named mooc in HIVE, and the information of all vertices and edges is stored in the users , courses , and actions tables. Here are the structures of all the tables. scala > sql ( \"describe mooc.users\" ). show + --------+---------+-------+ | col_name | data_type | comment | + --------+---------+-------+ | userid | string | null | + --------+---------+-------+ scala > sql ( \"describe mooc.courses\" ). show + ----------+---------+-------+ | col_name | data_type | comment | + ----------+---------+-------+ | courseid | bigint | null | | coursename | string | null | + ----------+---------+-------+ scala > sql ( \"describe mooc.actions\" ). show + --------+---------+-------+ | col_name | data_type | comment | + --------+---------+-------+ | actionid | bigint | null | | srcid | string | null | | dstid | string | null | | duration | double | null | | feature0 | double | null | | feature1 | double | null | | feature2 | double | null | | feature3 | double | null | | label | boolean | null | + --------+---------+-------+ NOTE : bigint in HIVE equals to int in Nebula Graph.","title":"Dataset"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#environment","text":"The practice is done in macOS. Here is the environment information: Hardware specifications: CPU: 1.7 GHz Quad-Core Intel Core i7 Memory: 16 GB Spark 2.4.7, deployed in the Standalone mode Hadoop 2.9.2, deployed in the Pseudo-Distributed mode HIVE 2.3.7, with MySQL 8.0.22 Nebula Graph v2-nightly, deployed with Docker Compose. For more information, see Deploy Nebula Graph with Docker Compose .","title":"Environment"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#prerequisites","text":"To import data from HIVE with Exchange v2.x, do a check of these: Exchange v2.x is compiled. For more information, see Compile Exchange v2.x . Exchange 2.0.0 is used in this example. Spark is installed. Hadoop is installed and started and the hive metastore database (MySQL is used in this example) is started. Nebula Graph is deployed and started. Get the information: IP addresses and ports of the Graph Service and the Meta Service. A Nebula Graph account with the privilege of writing data and its password. Get the necessary information for schema creation in Nebula Graph, including tags and edge types.","title":"Prerequisites"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#procedure","text":"","title":"Procedure"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#step_1_create_a_schema_in_nebula_graph","text":"Follow these steps to create a schema in Nebula Graph: Confirm the essential elements of the schema. Elements Names Properties Tag user userId string Tag course courseId int, courseName string Edge Type action actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double In Nebula Graph, create a graph space named hive and create a schema. -- Create a graph space named hive CREATE SPACE hive(partition_num=10, replica_factor=1, vid_type=fixed_string(100)); -- Choose the hive graph space USE hive; -- Create the user tag CREATE TAG user(userId string); -- Create the course tag CREATE TAG course(courseId int, courseName string); -- Create the action edge type CREATE EDGE action (actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double); For more information, see Quick Start of Nebula Graph .","title":"Step 1. Create a schema in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#step_2_verify_the_hive_sql_statements","text":"When spark-shell starts, run these statements one by one to make sure that Spark can read data from HIVE. scala > sql ( \"select userid from mooc.users\" ). show scala > sql ( \"select courseid, coursename from mooc.courses\" ). show scala > sql ( \"select actionid, srcid, dstid, duration, feature0, feature1, feature2, feature3, label from mooc.actions\" ). show Here is an example of data read from the mooc.actions table. + --------+-----+--------------------+--------+------------+------------+-----------+-----------+-----+ | actionid | srcid | dstid | duration | feature0 | feature1 | feature2 | feature3 | label | + --------+-----+--------------------+--------+------------+------------+-----------+-----------+-----+ | 0 | 0 | Environmental Dis ... | 0 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 1 | 0 | History of Ecology | 6 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 2 | 0 | Women in Islam | 41 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 3 | 0 | History of Ecology | 49 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 4 | 0 | Women in Islam | 51 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 5 | 0 | Legacies of the A ... | 55 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 6 | 0 | ITP Core 2 | 59 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 7 | 0 | The Research Pape ... | 62 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 8 | 0 | Neurobiology | 65 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 9 | 0 | Wikipedia | 113 . 0 |- 0 . 319991479 |- 0 . 435701433 | 1 . 108826104 | 12 . 77723482 | false | | 10 | 0 | Media History and ... | 226 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 607804941 | 149 . 4512115 | false | | 11 | 0 | WIKISOO | 974 . 0 |- 0 . 319991479 |- 0 . 435701433 | 1 . 108826104 | 3 . 344522776 | false | | 12 | 0 | Environmental Dis ... | 1000 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 13 | 0 | WIKISOO | 1172 . 0 |- 0 . 319991479 |- 0 . 435701433 | 1 . 108826104 | 1 . 136866766 | false | | 14 | 0 | Women in Islam | 1182 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 15 | 0 | History of Ecology | 1185 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 16 | 0 | Human Development ... | 1687 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 17 | 1 | Human Development ... | 7262 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 18 | 1 | History of Ecology | 7266 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 106783779 |- 0 . 06730924 | false | | 19 | 1 | Women in Islam | 7273 . 0 |- 0 . 319991479 |- 0 . 435701433 | 0 . 607804941 | 0 . 936170765 | false | + --------+-----+--------------------+--------+------------+------------+-----------+-----------+-----+ only showing top 20 rows","title":"Step 2. Verify the HIVE SQL statements"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#step_3_edit_configuration_file","text":"After compiling of Exchange, copy the target/classes/application.conf file and edit the configuration for HIVE. In this example, a new configuration file is named hive_ application.conf . In this file, the vertex and edge related configuration is introduced as comments and all the items that are not used in this example are commented out. For more information about the Spark and Nebula related parameters, see Spark related parameters and Nebula Graph related parameters . { # Spark related configuration spark: { app: { name: Nebula Exchange 2.0 } driver: { cores: 1 maxResultSize: 1G } executor: { memory:1G } cores { max: 16 } } # If Spark and HIVE are deployed in the different clusters, # configure these parameters for HIVE. Otherwise, ignore them. #hive: { # waredir: \"hdfs://NAMENODE_IP:9000/apps/svr/hive-xxx/warehouse/\" # connectionURL: \"jdbc:mysql://your_ip:3306/hive_spark?characterEncoding=UTF-8\" # connectionDriverName: \"com.mysql.jdbc.Driver\" # connectionUserName: \"user\" # connectionPassword: \"password\" #} # Nebula Graph related configuration nebula: { address:{ # Specifies the IP addresses and ports of the Graph Service and the Meta Service of Nebula Graph # If multiple servers are used, separate the addresses with commas. # Format: \"ip1:port\",\"ip2:port\",\"ip3:port\" graph:[\"127.0.0.1:9669\"] meta:[\"127.0.0.1:9559\"] } # Specifies an account that has the WriteData privilege in Nebula Graph and its password user: user pswd: password # Specifies a graph space name space: hive connection { timeout: 3000 retry: 3 } execution { retry: 3 } error: { max: 32 output: /tmp/errors } rate: { limit: 1024 timeout: 1000 } } # Process vertices tags: [ # Sets for the user tag { # Specifies a tag name defined in Nebula Graph name: user type: { # Specifies the data source. hive is used. source: hive # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc to do). sink: client } # Specifies the SQL statement to read data from the users table in the mooc database exec: \"select userid from mooc.users\" # Specifies the column names from the users table to fields. # Their values are used as the source of the userId (nebula.fields) property defined in Nebula Graph. # If more than one column name is specified, separate them with commas. # fields for the HIVE and nebula.fields for Nebula Graph must have the one-to-one correspondence relationship. fields: [userid] nebula.fields: [userId] # Specifies a column as the source of VIDs. # The value of vertex must be one column name in the exec sentence. # If the values are not of the int type, use vertex.policy to # set the mapping policy. \"hash\" is preferred. # Refer to the configuration of the course tag. vertex: userid # Specifies the maximum number of vertex data to be written into # Nebula Graph in a single batch. batch: 256 # Specifies the partition number of Spark. partition: 32 } # Sets for the course tag { name: course type: { source: hive sink: client } exec: \"select courseid, coursename from mooc.courses\" fields: [courseid, coursename] nebula.fields: [courseId, courseName] # Specifies a column as the source of VIDs. # The value of vertex.field must be one column name in the exec sentence. vertex: coursename # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. #vertex: { # field: coursename # policy: \"hash\" #} batch: 256 partition: 32 } # If more tags are necessary, refer to the preceding configuration to add more. ] # Process edges edges: [ # Sets for the action edge type { # Specifies an edge type name defined in Nebula Graph name: action type: { # Specifies the data source. hive is used. source: hive # Specifies how to import vertex data into Nebula Graph: client or sst # For more information about importing sst files, # see Import SST files (doc to do). sink: client } # Specifies the SQL statement to read data from the actions table in # the mooc database. exec: \"select actionid, srcid, dstid, duration, feature0, feature1, feature2, feature3, label from mooc.actions\" # Specifies the column names from the actions table to fields. # Their values are used as the source of the properties of # the action edge type defined in Nebula Graph. # If more than one column name is specified, separate them with commas. # fields for the HIVE and nebula.fields for Nebula Graph must # have the one-to-one correspondence relationship. fields: [actionid, duration, feature0, feature1, feature2, feature3, label] nebula.fields: [actionId, duration, feature0, feature1, feature2, feature3, label] # source specifies a column as the source of the IDs of # the source vertex of an edge. # target specifies a column as the source of the IDs of # the target vertex of an edge. # The value of source.field and target.field must be # column names set in the exec sentence. source: srcid target: dstid # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. #target: { # field: dstid # policy: \"hash\" #} # Specifies the maximum number of vertex data to be # written into Nebula Graph in a single batch. batch: 256 # Specifies the partition number of Spark. partition: 32 } ] }","title":"Step 3. Edit configuration file"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#step_4_optional_verify_the_configuration","text":"After the configuration, run the import command with the -D parameter to verify the configuration file. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/hive_application.conf -h -D","title":"Step 4. (Optional) Verify the configuration"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#step_5_import_data_into_nebula_graph","text":"When the configuration is ready, run this command to import data from HIVE into Nebula Graph. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/hive_application.conf -h","title":"Step 5. Import data into Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#step_6_optional_verify_data_in_nebula_graph","text":"You can use a Nebula Graph client, such as Nebula Graph Studio, to verify the imported data. For example, in Nebula Graph Studio, run this statement. GO FROM \"1\" OVER action; If the queried destination vertices return, the data are imported into Nebula Graph. You can run the SHOW STATS statement to count the data.","title":"Step 6. (Optional) Verify data in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-hive/#step_7_optional_create_and_rebuild_indexes_in_nebula_graph","text":"After the data is imported, you can create and rebuild indexes in Nebula Graph. For more information, see nGQL User Guide .","title":"Step 7. (Optional) Create and rebuild indexes in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/","text":"Import data from JSON files \u00b6 This article uses an example to show how to use Exchange to import data from JSON files stored on HDFS into Nebula Graph. Dataset \u00b6 The JSON file (test.json) used in this example is like {\"source\":string, \"target\":string, \"likeness\":double} , representing a like relationship between source and target . 21,645 records in total. Here are some sample data: { \"source\" : 53802643 , \"target\" : 87847387 , \"likeness\" : 0.34 } { \"source\" : 29509860 , \"target\" : 57501950 , \"likeness\" : 0.40 } { \"source\" : 97319348 , \"target\" : 50240344 , \"likeness\" : 0.77 } { \"source\" : 94295709 , \"target\" : 8189720 , \"likeness\" : 0.82 } { \"source\" : 78707720 , \"target\" : 53874070 , \"likeness\" : 0.98 } { \"source\" : 23399562 , \"target\" : 20136097 , \"likeness\" : 0.47 } Environment \u00b6 The practice is done in macOS. Here is the environment information: Hardware specifications: CPU: 1.7 GHz Quad-Core Intel Core i7 Memory: 16 GB Spark 2.4.7, deployed in the Standalone mode Hadoop 2.9.2, deployed in the Pseudo-Distributed mode Nebula Graph v2-nightly, deployed with Docker Compose. For more information, see Deploy Nebula Graph with Docker Compose . Prerequisites \u00b6 To import data from JSON files on HDFS with Exchange v2.x, do a check of these: Exchange v2.x is compiled. For more information, see Compile Exchange v2.x . Exchange 2.0.0 is used in this example. Spark is installed. Hadoop is installed and started. Nebula Graph is deployed and started. Get the information: IP addresses and ports of the Graph Service and the Meta Service. A Nebula Graph account with the privilege of writing data and its password. Get the necessary information for schema creation in Nebula Graph, including tags and edge types. Procedure \u00b6 Step 1. Create a schema in Nebula Graph \u00b6 Analyze the data in the JSON files and follow these steps to create a schema in Nebula Graph: Confirm the essential elements of the schema. Elements Names Properties Tag source srcId string Tag target dstId string Edge Type like likeness double In Nebula Graph, create a graph space named json and create a schema. -- Create a graph space named json CREATE SPACE json(partition_num=10, replica_factor=1, vid_type=fixed_string(30)); -- Choose the json graph space USE json; -- Create the source tag CREATE TAG source (srcId string); -- Create the target tag CREATE TAG target (dstId string); -- Create the like edge type CREATE EDGE like (likeness double); For more information, see Quick Start of Nebula Graph . Step 2. Prepare JSON files \u00b6 Create separate JSON files for vertex and edge data. Store the JSON files in HDFS and get the HDFS path of the files. NOTE : In this example, only one JSON file is used to import vertex and edge data at the same time. Some vertex data representing source and target are duplicate. Therefore, during the import process, these vertices are written repeatedly. In Nebula Graph, data is overwritten when repeated insertion occurs, and the last write is read out. In practice, to increase the write speed, creating separate files for vertex and edge data is recommended. Step 3. Edit configuration file \u00b6 After compiling of Exchange, copy the target/classes/application.conf file and edit the configuration for JSON files. In this example, a new configuration file is named json_ application.conf . In this file, the vertex and edge related configuration is introduced as comments and all the items that are not used in this example are commented out. For more information about the Spark and Nebula related parameters, see Spark related parameters and Nebula Graph related parameters . { # Spark related configuration spark: { app: { name: Spark Writer } driver: { cores: 1 maxResultSize: 1G } executor: { memory:1G } cores { max: 16 } } # Nebula Graph related configuration nebula: { address:{ # Specifies the IP addresses and ports of the Graph Service and the Meta Service of Nebula Graph. # If multiple servers are used, separate the addresses with commas. # Format: \"ip1:port\",\"ip2:port\",\"ip3:port\" graph:[\"127.0.0.1:9669\"] meta:[\"127.0.0.1:9559\"] } # Specifies an account that has the WriteData privilege in Nebula Graph and its password. user: user pswd: password # Specifies a graph space name space: json connection { timeout: 3000 retry: 3 } execution { retry: 3 } error: { max: 32 output: /tmp/errors } rate: { limit: 1024 timeout: 1000 } } # Process vertices tags: [ # Sets for the source tag { # Specifies a tag name defined in Nebula Graph name: source type: { # Specifies the data source. json is used. source: json # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc to do). sink: client } # Specifies the HDFS path of the JSON file. # Enclose the path with double quotes and start the path with hdfs://. path: \"hdfs://namenode_ip:port/path/to/test.json\" # Specifies the keys in the JSON file. # Their values are used as the source of the srcId property # defined in Nebula Graph. # If more than one key is specified, separate them with commas. fields: [\"source\"] nebula.fields: [\"srcId\"] # Specifies the values of a key in the JSON file as # the source of the VID in Nebula Graph. # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. # vertex: { # field: key_name_in_json # policy: \"hash\" # } vertex: source batch: 256 partition: 32 } # Sets for the target tag { name: target type: { source: json sink: client } path: \"hdfs://namenode_ip:port/path/to/test.json\" fields: [\"target\"] nebula.fields: [\"dstId\"] vertex: \"target\" batch: 256 partition: 32 isImplicit: true } # If more tags are necessary, refer to the preceding configuration to add more. ] # Process edges edges: [ # Sets for the like edge type { # Specifies an edge type name defined in Nebula Graph name: like type: { # Specifies the data source. json is used. source: json # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc to do). sink: client } # Specifies the HDFS path of the JSON file. # Enclose the path with double quotes and start the path with hdfs://. path: \"hdfs://namenode_ip:port/path/to/test.json\" # Specifies the keys in the JSON file. # Their values are used as the source of the likeness property defined in Nebula Graph. # If more than one key is specified, separate them with commas. fields: [\"likeness\"] nebula.fields: [\"likeness\"] # Specifies the values of two keys in the JSON file as the source # of the IDs of source and destination vertices of the like edges in Nebula Graph. # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. # source: { # field: key_name_in_json # policy: \"hash\" # } # target: { # field: key_name_in_json # policy: \"hash\" # } source: \"source\" target: \"target\" batch: 256 partition: 32 } # If more edge types are necessary, refer to the preceding configuration to add more. ] } Step 4. (Optional) Verify the configuration \u00b6 After the configuration, run the import command with the -D parameter to verify the configuration file. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/json_application.conf -D Step 5. Import data into Nebula Graph \u00b6 When the configuration is ready, run this command to import data from JSON files into Nebula Graph. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/json_application.conf Step 6. (Optional) Verify data in Nebula Graph \u00b6 You can use a Nebula Graph client, such as Nebula Graph Studio, to verify the imported data. For example, in Nebula Graph Studio, run this statement. GO FROM \"53802643\" OVER like; If the queried destination vertices return, the data are imported into Nebula Graph. You can run the SHOW STATS statement to count the data. Step 7. (Optional) Create and rebuild indexes in Nebula Graph \u00b6 After the data is imported, you can create and rebuild indexes in Nebula Graph. For more information, see nGQL User Guide .","title":"Import data from JSON files"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#import_data_from_json_files","text":"This article uses an example to show how to use Exchange to import data from JSON files stored on HDFS into Nebula Graph.","title":"Import data from JSON files"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#dataset","text":"The JSON file (test.json) used in this example is like {\"source\":string, \"target\":string, \"likeness\":double} , representing a like relationship between source and target . 21,645 records in total. Here are some sample data: { \"source\" : 53802643 , \"target\" : 87847387 , \"likeness\" : 0.34 } { \"source\" : 29509860 , \"target\" : 57501950 , \"likeness\" : 0.40 } { \"source\" : 97319348 , \"target\" : 50240344 , \"likeness\" : 0.77 } { \"source\" : 94295709 , \"target\" : 8189720 , \"likeness\" : 0.82 } { \"source\" : 78707720 , \"target\" : 53874070 , \"likeness\" : 0.98 } { \"source\" : 23399562 , \"target\" : 20136097 , \"likeness\" : 0.47 }","title":"Dataset"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#environment","text":"The practice is done in macOS. Here is the environment information: Hardware specifications: CPU: 1.7 GHz Quad-Core Intel Core i7 Memory: 16 GB Spark 2.4.7, deployed in the Standalone mode Hadoop 2.9.2, deployed in the Pseudo-Distributed mode Nebula Graph v2-nightly, deployed with Docker Compose. For more information, see Deploy Nebula Graph with Docker Compose .","title":"Environment"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#prerequisites","text":"To import data from JSON files on HDFS with Exchange v2.x, do a check of these: Exchange v2.x is compiled. For more information, see Compile Exchange v2.x . Exchange 2.0.0 is used in this example. Spark is installed. Hadoop is installed and started. Nebula Graph is deployed and started. Get the information: IP addresses and ports of the Graph Service and the Meta Service. A Nebula Graph account with the privilege of writing data and its password. Get the necessary information for schema creation in Nebula Graph, including tags and edge types.","title":"Prerequisites"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#procedure","text":"","title":"Procedure"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#step_1_create_a_schema_in_nebula_graph","text":"Analyze the data in the JSON files and follow these steps to create a schema in Nebula Graph: Confirm the essential elements of the schema. Elements Names Properties Tag source srcId string Tag target dstId string Edge Type like likeness double In Nebula Graph, create a graph space named json and create a schema. -- Create a graph space named json CREATE SPACE json(partition_num=10, replica_factor=1, vid_type=fixed_string(30)); -- Choose the json graph space USE json; -- Create the source tag CREATE TAG source (srcId string); -- Create the target tag CREATE TAG target (dstId string); -- Create the like edge type CREATE EDGE like (likeness double); For more information, see Quick Start of Nebula Graph .","title":"Step 1. Create a schema in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#step_2_prepare_json_files","text":"Create separate JSON files for vertex and edge data. Store the JSON files in HDFS and get the HDFS path of the files. NOTE : In this example, only one JSON file is used to import vertex and edge data at the same time. Some vertex data representing source and target are duplicate. Therefore, during the import process, these vertices are written repeatedly. In Nebula Graph, data is overwritten when repeated insertion occurs, and the last write is read out. In practice, to increase the write speed, creating separate files for vertex and edge data is recommended.","title":"Step 2. Prepare JSON files"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#step_3_edit_configuration_file","text":"After compiling of Exchange, copy the target/classes/application.conf file and edit the configuration for JSON files. In this example, a new configuration file is named json_ application.conf . In this file, the vertex and edge related configuration is introduced as comments and all the items that are not used in this example are commented out. For more information about the Spark and Nebula related parameters, see Spark related parameters and Nebula Graph related parameters . { # Spark related configuration spark: { app: { name: Spark Writer } driver: { cores: 1 maxResultSize: 1G } executor: { memory:1G } cores { max: 16 } } # Nebula Graph related configuration nebula: { address:{ # Specifies the IP addresses and ports of the Graph Service and the Meta Service of Nebula Graph. # If multiple servers are used, separate the addresses with commas. # Format: \"ip1:port\",\"ip2:port\",\"ip3:port\" graph:[\"127.0.0.1:9669\"] meta:[\"127.0.0.1:9559\"] } # Specifies an account that has the WriteData privilege in Nebula Graph and its password. user: user pswd: password # Specifies a graph space name space: json connection { timeout: 3000 retry: 3 } execution { retry: 3 } error: { max: 32 output: /tmp/errors } rate: { limit: 1024 timeout: 1000 } } # Process vertices tags: [ # Sets for the source tag { # Specifies a tag name defined in Nebula Graph name: source type: { # Specifies the data source. json is used. source: json # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc to do). sink: client } # Specifies the HDFS path of the JSON file. # Enclose the path with double quotes and start the path with hdfs://. path: \"hdfs://namenode_ip:port/path/to/test.json\" # Specifies the keys in the JSON file. # Their values are used as the source of the srcId property # defined in Nebula Graph. # If more than one key is specified, separate them with commas. fields: [\"source\"] nebula.fields: [\"srcId\"] # Specifies the values of a key in the JSON file as # the source of the VID in Nebula Graph. # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. # vertex: { # field: key_name_in_json # policy: \"hash\" # } vertex: source batch: 256 partition: 32 } # Sets for the target tag { name: target type: { source: json sink: client } path: \"hdfs://namenode_ip:port/path/to/test.json\" fields: [\"target\"] nebula.fields: [\"dstId\"] vertex: \"target\" batch: 256 partition: 32 isImplicit: true } # If more tags are necessary, refer to the preceding configuration to add more. ] # Process edges edges: [ # Sets for the like edge type { # Specifies an edge type name defined in Nebula Graph name: like type: { # Specifies the data source. json is used. source: json # Specifies how to import vertex data into Nebula Graph: client or sst. # For more information about importing sst files, see Import SST files (doc to do). sink: client } # Specifies the HDFS path of the JSON file. # Enclose the path with double quotes and start the path with hdfs://. path: \"hdfs://namenode_ip:port/path/to/test.json\" # Specifies the keys in the JSON file. # Their values are used as the source of the likeness property defined in Nebula Graph. # If more than one key is specified, separate them with commas. fields: [\"likeness\"] nebula.fields: [\"likeness\"] # Specifies the values of two keys in the JSON file as the source # of the IDs of source and destination vertices of the like edges in Nebula Graph. # For now, only string type VIDs are supported in Nebula Graph v2.x. # Do not use vertex.policy for mapping. # source: { # field: key_name_in_json # policy: \"hash\" # } # target: { # field: key_name_in_json # policy: \"hash\" # } source: \"source\" target: \"target\" batch: 256 partition: 32 } # If more edge types are necessary, refer to the preceding configuration to add more. ] }","title":"Step 3. Edit configuration file"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#step_4_optional_verify_the_configuration","text":"After the configuration, run the import command with the -D parameter to verify the configuration file. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/json_application.conf -D","title":"Step 4. (Optional) Verify the configuration"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#step_5_import_data_into_nebula_graph","text":"When the configuration is ready, run this command to import data from JSON files into Nebula Graph. For more information about the parameters, see Import command parameters . $SPARK_HOME /bin/spark-submit --master \"local\" --class com.vesoft.nebula.exchange.Exchange /path/to/nebula-exchange-2.0.0.jar -c /path/to/conf/json_application.conf","title":"Step 5. Import data into Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#step_6_optional_verify_data_in_nebula_graph","text":"You can use a Nebula Graph client, such as Nebula Graph Studio, to verify the imported data. For example, in Nebula Graph Studio, run this statement. GO FROM \"53802643\" OVER like; If the queried destination vertices return, the data are imported into Nebula Graph. You can run the SHOW STATS statement to count the data.","title":"Step 6. (Optional) Verify data in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-json/#step_7_optional_create_and_rebuild_indexes_in_nebula_graph","text":"After the data is imported, you can create and rebuild indexes in Nebula Graph. For more information, see nGQL User Guide .","title":"Step 7. (Optional) Create and rebuild indexes in Nebula Graph"},{"location":"nebula-exchange/use-exchange/ex-ug-import-steps/","text":"Use Exchange \u00b6 This article introduces the generally-used procedure on how to use Exchange to import data from a specified source to Nebula Graph. Prerequisites \u00b6 To import data with Exchange, do a check of these: Nebula Graph is deployed and started. Get the information: IP addresses and ports of the Graph Service and the Meta Service. A Nebula Graph account with the privilege of writing data and its password. Exchange is compiled. For more information, see Compile Exchange . Spark is installed. Get the necessary information for schema creation in Nebula Graph, including tags and edge types. Procedure \u00b6 To import data from a source to Nebula Graph, follow these steps: Create a graph space and a schema in Nebula Graph. (Optional) Process the source data. For example, to import data from a Neo4j database, create indexes for the specified tags in Neo4j to export the data from Neo4j more quickly. Edit the configuration file for Spark, Nebula Graph, vertices, and edges. NOTE : After compiling of Exchange, refer to the example configuration files in the nebula-exchange/target/classes directory for the configuration for different sources. (Optional) Run the import command with the -D parameter to verify the configuration. For more information, see Import command parameters . Run the import command to import data into Nebula Graph. Verify the imported data in Nebula Graph. (Optional) Create and rebuild indexes in Nebula Graph. For more information, see the examples: Import data from HIVE Import data from CSV files Import data from JSON files","title":"Use Exchange"},{"location":"nebula-exchange/use-exchange/ex-ug-import-steps/#use_exchange","text":"This article introduces the generally-used procedure on how to use Exchange to import data from a specified source to Nebula Graph.","title":"Use Exchange"},{"location":"nebula-exchange/use-exchange/ex-ug-import-steps/#prerequisites","text":"To import data with Exchange, do a check of these: Nebula Graph is deployed and started. Get the information: IP addresses and ports of the Graph Service and the Meta Service. A Nebula Graph account with the privilege of writing data and its password. Exchange is compiled. For more information, see Compile Exchange . Spark is installed. Get the necessary information for schema creation in Nebula Graph, including tags and edge types.","title":"Prerequisites"},{"location":"nebula-exchange/use-exchange/ex-ug-import-steps/#procedure","text":"To import data from a source to Nebula Graph, follow these steps: Create a graph space and a schema in Nebula Graph. (Optional) Process the source data. For example, to import data from a Neo4j database, create indexes for the specified tags in Neo4j to export the data from Neo4j more quickly. Edit the configuration file for Spark, Nebula Graph, vertices, and edges. NOTE : After compiling of Exchange, refer to the example configuration files in the nebula-exchange/target/classes directory for the configuration for different sources. (Optional) Run the import command with the -D parameter to verify the configuration. For more information, see Import command parameters . Run the import command to import data into Nebula Graph. Verify the imported data in Nebula Graph. (Optional) Create and rebuild indexes in Nebula Graph. For more information, see the examples: Import data from HIVE Import data from CSV files Import data from JSON files","title":"Procedure"},{"location":"nebula-studio/st-ug-toc/","text":"Nebula Graph Studio User Guide \u00b6 About Nebula Graph Studio What is Nebula Graph Studio Limitations Check updates Deploy and connect Deploy Studio Connect to Nebula Graph Design a schema Create a schema Import data Query graph data --> Operation guide [Use Explore][DOC_TO_DO] Use Console Open in Explore View subgraphs [Export as CSV files][DOC_TO_DO] Best practices [DOC_TO_DO] Troubleshooting [DOC_TO_DO] Connection Error messages","title":"Nebula Graph Studio User Guide"},{"location":"nebula-studio/st-ug-toc/#nebula_graph_studio_user_guide","text":"About Nebula Graph Studio What is Nebula Graph Studio Limitations Check updates Deploy and connect Deploy Studio Connect to Nebula Graph Design a schema Create a schema Import data Query graph data --> Operation guide [Use Explore][DOC_TO_DO] Use Console Open in Explore View subgraphs [Export as CSV files][DOC_TO_DO] Best practices [DOC_TO_DO] Troubleshooting [DOC_TO_DO] Connection Error messages","title":"Nebula Graph Studio User Guide"},{"location":"nebula-studio/about-studio/st-ug-check-updates/","text":"Check updates \u00b6 Studio v2.x is in development. To get updated with its development, visit GitHub and read its Changelog . For Docker-based Studio v2.x, when you get access to Studio, on the upper-right corner of the page, click the version number and then New version , and you will be directed to the Changelog. When new version is released, under the nebula-web-docker directory, run these commands one by one to update the Docker image and start the services: $ git pull origin master $ cd v2 $ docker-compose pull && docker-compose up -d","title":"Check updates"},{"location":"nebula-studio/about-studio/st-ug-check-updates/#check_updates","text":"Studio v2.x is in development. To get updated with its development, visit GitHub and read its Changelog . For Docker-based Studio v2.x, when you get access to Studio, on the upper-right corner of the page, click the version number and then New version , and you will be directed to the Changelog. When new version is released, under the nebula-web-docker directory, run these commands one by one to update the Docker image and start the services: $ git pull origin master $ cd v2 $ docker-compose pull && docker-compose up -d","title":"Check updates"},{"location":"nebula-studio/about-studio/st-ug-limitations/","text":"Limitations \u00b6 This article introduces the limitations of Studio v2.x. Nebula Graph versions \u00b6 Only Nebula Graph v2.x is supported. If you are using Nebula Graph v1.x, please use Studio v1.x. For more information, see Studio v1.x User Guide . Architecture \u00b6 For now, Docker-based Studio v2.x supports x86_64 architecture only. Upload data \u00b6 On Docker-based Studio v2.x, only CSV files with comma-separated data and without headers can be uploaded, but no limitations are applied to the size and store period for a single file. The maximum data volume depends on the storage capacity of your machine. Data backup \u00b6 For now, you can export the queried results in the CSV format on the Console page. No other backup methods are available. nGQL statements \u00b6 On the Console page of Docker-based Studio v2.x, all the nGQL syntaxes except these are supported: USE <space_name> : You cannot run such a statement on the Console page to choose a graph space. As an alternative, you can click a graph space name in the drop-down list of Current Graph Space . You cannot use line breaks (\\). As an alternative, you can use the Enter key to split a line. Browser \u00b6 We recommend that you use the latest version of Chrome to get access to Studio v2.x.","title":"Limitations"},{"location":"nebula-studio/about-studio/st-ug-limitations/#limitations","text":"This article introduces the limitations of Studio v2.x.","title":"Limitations"},{"location":"nebula-studio/about-studio/st-ug-limitations/#nebula_graph_versions","text":"Only Nebula Graph v2.x is supported. If you are using Nebula Graph v1.x, please use Studio v1.x. For more information, see Studio v1.x User Guide .","title":"Nebula Graph versions"},{"location":"nebula-studio/about-studio/st-ug-limitations/#architecture","text":"For now, Docker-based Studio v2.x supports x86_64 architecture only.","title":"Architecture"},{"location":"nebula-studio/about-studio/st-ug-limitations/#upload_data","text":"On Docker-based Studio v2.x, only CSV files with comma-separated data and without headers can be uploaded, but no limitations are applied to the size and store period for a single file. The maximum data volume depends on the storage capacity of your machine.","title":"Upload data"},{"location":"nebula-studio/about-studio/st-ug-limitations/#data_backup","text":"For now, you can export the queried results in the CSV format on the Console page. No other backup methods are available.","title":"Data backup"},{"location":"nebula-studio/about-studio/st-ug-limitations/#ngql_statements","text":"On the Console page of Docker-based Studio v2.x, all the nGQL syntaxes except these are supported: USE <space_name> : You cannot run such a statement on the Console page to choose a graph space. As an alternative, you can click a graph space name in the drop-down list of Current Graph Space . You cannot use line breaks (\\). As an alternative, you can use the Enter key to split a line.","title":"nGQL statements"},{"location":"nebula-studio/about-studio/st-ug-limitations/#browser","text":"We recommend that you use the latest version of Chrome to get access to Studio v2.x.","title":"Browser"},{"location":"nebula-studio/about-studio/st-ug-what-is-graph-studio/","text":"What is Nebula Graph Studio \u00b6 Nebula Graph Studio (Studio in short) is a browser-based visualization tool to manage Nebula Graph. It provides you with a graphical user interface to manipulate graph schemas, import data, explore graph data, and run nGQL statements to retrieve data. With Studio, you can quickly become a graph exploration expert from scratch. Release distributions \u00b6 For now, Studio v2.x has only Docker-based distribution. You can deploy Studio v2.x with Docker and connect it to Nebula Graph v2.x. For more information, see Deploy Studio . Studio on Cloud is not available now. Features \u00b6 Studio provides these features: Graphical Console enables you to run nGQL statements and read the results in a human-friendly way. The Explore function enables you to explore the graph data. It helps you dig the relationships among data and improves the efficiency of data analysis. Scenarios \u00b6 You can use Studio v2.x in one of these scenarios: You have a dataset, and you want to explore and analyze data in a visualized way. You can use Docker Compose or Nebula Graph Cloud Service to deploy Nebula Graph and then use Studio to explore or analyze data in a visualized way. You have deployed Nebula Graph and imported a dataset. You want to use a GUI to run nGQL statements or explore and analyze graph data in a visualized way. You are a beginner of nGQL (Nebula Graph Query Language) and you prefer to use a GUI rather than a command-line interface (CLI) to learn the language.","title":"What is Studio"},{"location":"nebula-studio/about-studio/st-ug-what-is-graph-studio/#what_is_nebula_graph_studio","text":"Nebula Graph Studio (Studio in short) is a browser-based visualization tool to manage Nebula Graph. It provides you with a graphical user interface to manipulate graph schemas, import data, explore graph data, and run nGQL statements to retrieve data. With Studio, you can quickly become a graph exploration expert from scratch.","title":"What is Nebula Graph Studio"},{"location":"nebula-studio/about-studio/st-ug-what-is-graph-studio/#release_distributions","text":"For now, Studio v2.x has only Docker-based distribution. You can deploy Studio v2.x with Docker and connect it to Nebula Graph v2.x. For more information, see Deploy Studio . Studio on Cloud is not available now.","title":"Release distributions"},{"location":"nebula-studio/about-studio/st-ug-what-is-graph-studio/#features","text":"Studio provides these features: Graphical Console enables you to run nGQL statements and read the results in a human-friendly way. The Explore function enables you to explore the graph data. It helps you dig the relationships among data and improves the efficiency of data analysis.","title":"Features"},{"location":"nebula-studio/about-studio/st-ug-what-is-graph-studio/#scenarios","text":"You can use Studio v2.x in one of these scenarios: You have a dataset, and you want to explore and analyze data in a visualized way. You can use Docker Compose or Nebula Graph Cloud Service to deploy Nebula Graph and then use Studio to explore or analyze data in a visualized way. You have deployed Nebula Graph and imported a dataset. You want to use a GUI to run nGQL statements or explore and analyze graph data in a visualized way. You are a beginner of nGQL (Nebula Graph Query Language) and you prefer to use a GUI rather than a command-line interface (CLI) to learn the language.","title":"Scenarios"},{"location":"nebula-studio/install-configure/st-ug-connect/","text":"Connect to Nebula Graph \u00b6 For Docker-based Studio v2.x, when it is started, you must configure it to connect to Nebula Graph v2.x. This article introduces how to connect Docker-based Studio v2.x to Nebula Graph v2.x. Prerequisites \u00b6 Before you connect Docker-based Studio v2.x to Nebula Graph v2.x, you must do a check of these: The Nebula Graph v2.x services and Studio v2.x are started. For more information, see Deploy Studio . You have the IP address and the port used by the Graph service of Nebula Graph v2.x. The default port is 9669 . NOTE : Run ifconfig or ipconfig on the machine to get the IP address. Procedure \u00b6 To connect Docker-based Studio to Nebula Graph, follow these steps: On the Config Server page of Studio, configure these fields: Host : Enter the IP address and the port of the Graph service of Nebula Graph. The valid format is IP:port . The default port is 9669 . NOTE : When Nebula Graph and Studio are deployed on the same machine, you must enter the IP address of the machine, but not 127.0.0.1 or localhost , in the Host field. Username and Password : You can use user and password as the username and its password. After the configuration, click the Connect button. If you can see the Console page, Docker-based Studio is successfully connected to Nebula Graph. One session continues up to 30 minutes. If you do not operate Studio within 30 minutes, the active session will time out and you must connect to Nebula Graph again. Next to do \u00b6 When Studio v2.x is successfully connected to Nebula Graph v2.x, you can learn nGQL v2.x on the Console page or explore and analyze data on the Explore page.","title":"Connect to Nebula Graph"},{"location":"nebula-studio/install-configure/st-ug-connect/#connect_to_nebula_graph","text":"For Docker-based Studio v2.x, when it is started, you must configure it to connect to Nebula Graph v2.x. This article introduces how to connect Docker-based Studio v2.x to Nebula Graph v2.x.","title":"Connect to Nebula Graph"},{"location":"nebula-studio/install-configure/st-ug-connect/#prerequisites","text":"Before you connect Docker-based Studio v2.x to Nebula Graph v2.x, you must do a check of these: The Nebula Graph v2.x services and Studio v2.x are started. For more information, see Deploy Studio . You have the IP address and the port used by the Graph service of Nebula Graph v2.x. The default port is 9669 . NOTE : Run ifconfig or ipconfig on the machine to get the IP address.","title":"Prerequisites"},{"location":"nebula-studio/install-configure/st-ug-connect/#procedure","text":"To connect Docker-based Studio to Nebula Graph, follow these steps: On the Config Server page of Studio, configure these fields: Host : Enter the IP address and the port of the Graph service of Nebula Graph. The valid format is IP:port . The default port is 9669 . NOTE : When Nebula Graph and Studio are deployed on the same machine, you must enter the IP address of the machine, but not 127.0.0.1 or localhost , in the Host field. Username and Password : You can use user and password as the username and its password. After the configuration, click the Connect button. If you can see the Console page, Docker-based Studio is successfully connected to Nebula Graph. One session continues up to 30 minutes. If you do not operate Studio within 30 minutes, the active session will time out and you must connect to Nebula Graph again.","title":"Procedure"},{"location":"nebula-studio/install-configure/st-ug-connect/#next_to_do","text":"When Studio v2.x is successfully connected to Nebula Graph v2.x, you can learn nGQL v2.x on the Console page or explore and analyze data on the Explore page.","title":"Next to do"},{"location":"nebula-studio/install-configure/st-ug-deploy/","text":"Deploy Studio \u00b6 This article introduces how to deploy Docker-based Studio v2.x. Prerequisites \u00b6 Before you deploy Docker-based Studio v2.x, you must do a check of these: The Nebula Graph v2.x services are deployed and started. For more information, see Nebula Graph Database Manual . NOTE : Different methods are available for you to deploy Nebula Graph. If this is your first time to use Nebula Graph, we recommend that you use Docker Compose to deploy Nebula Graph. For more information, see Deploy Nebula Graph with Docker Compose . On the machine where Studio v2.x will run, Docker Compose is installed and started. For more information, see Docker Compose Documentation . Procedure \u00b6 To deploy and start Docker-based Studio v2.x, run these commands one by one: Download the configuration files for the deployment. git clone https://github.com/vesoft-inc/nebula-web-docker.git Change to the nebula-web-docker/v2 directory. cd nebula-web-docker/v2 Pull the Docker image of Studio v2.x. docker-compose pull Build and start Docker-based Studio v2.x. In this command, -d is to run the containers in the background. docker-compose up -d If these lines return, Docker-based Studio v2.x is deployed and started. Creating docker_importer_1 ... done Creating docker_client_1 ... done Creating docker_web_1 ... done Creating docker_nginx_1 ... done When Docker-based Studio v2.x is started, use http://ip address:7001 to get access to Studio v2.x. NOTE : Run ifconfig or ipconfig to get the IP address of the machine where Docker-based Studio is running. On the machine running Docker-based Studio, you can use http://localhost:7001 to get access to Studio. If you can see the Config Server page on the browser, Docker-based Studio is started successfully. Next to do \u00b6 On the Config Server page, connect Docker-based Studio to Nebula Graph. For more information, see Connect to Nebula Graph .","title":"Deploy Studio"},{"location":"nebula-studio/install-configure/st-ug-deploy/#deploy_studio","text":"This article introduces how to deploy Docker-based Studio v2.x.","title":"Deploy Studio"},{"location":"nebula-studio/install-configure/st-ug-deploy/#prerequisites","text":"Before you deploy Docker-based Studio v2.x, you must do a check of these: The Nebula Graph v2.x services are deployed and started. For more information, see Nebula Graph Database Manual . NOTE : Different methods are available for you to deploy Nebula Graph. If this is your first time to use Nebula Graph, we recommend that you use Docker Compose to deploy Nebula Graph. For more information, see Deploy Nebula Graph with Docker Compose . On the machine where Studio v2.x will run, Docker Compose is installed and started. For more information, see Docker Compose Documentation .","title":"Prerequisites"},{"location":"nebula-studio/install-configure/st-ug-deploy/#procedure","text":"To deploy and start Docker-based Studio v2.x, run these commands one by one: Download the configuration files for the deployment. git clone https://github.com/vesoft-inc/nebula-web-docker.git Change to the nebula-web-docker/v2 directory. cd nebula-web-docker/v2 Pull the Docker image of Studio v2.x. docker-compose pull Build and start Docker-based Studio v2.x. In this command, -d is to run the containers in the background. docker-compose up -d If these lines return, Docker-based Studio v2.x is deployed and started. Creating docker_importer_1 ... done Creating docker_client_1 ... done Creating docker_web_1 ... done Creating docker_nginx_1 ... done When Docker-based Studio v2.x is started, use http://ip address:7001 to get access to Studio v2.x. NOTE : Run ifconfig or ipconfig to get the IP address of the machine where Docker-based Studio is running. On the machine running Docker-based Studio, you can use http://localhost:7001 to get access to Studio. If you can see the Config Server page on the browser, Docker-based Studio is started successfully.","title":"Procedure"},{"location":"nebula-studio/install-configure/st-ug-deploy/#next_to_do","text":"On the Config Server page, connect Docker-based Studio to Nebula Graph. For more information, see Connect to Nebula Graph .","title":"Next to do"},{"location":"nebula-studio/manage-schema/st-ug-crud-edge-type/","text":"","title":"St ug crud edge type"},{"location":"nebula-studio/manage-schema/st-ug-crud-index/","text":"","title":"St ug crud index"},{"location":"nebula-studio/manage-schema/st-ug-crud-space/","text":"","title":"St ug crud space"},{"location":"nebula-studio/manage-schema/st-ug-crud-tag/","text":"","title":"St ug crud tag"},{"location":"nebula-studio/quick-start/st-ug-create-schema/","text":"Create a schema \u00b6 To batch import data into Nebula Graph, you must have a graph schema. You can create a schema on the Console page or on the Schema page of Studio. NOTE : You can use nebula-console to create a schema. For more information, see Deploy Nebula Graph with Docker Compose and Get started with Nebula Graph . Prerequisites \u00b6 To create a graph schema on Studio v2.x, you must do a check of these: Studio is connected to Nebula Graph v2.x. Your account has the privilege of GOD, ADMIN, or DBA. The schema is designed. A graph space is created. NOTE : If no graph space exists and your account has the GOD privilege, you can create a graph space on the Console page. For more information, see CREATE SPACE . In this example, we recommend that you set vid_type=FIXED_STRING(100) in the CREATE SPACE statement. Create a schema with Schema \u00b6 To create a schema on the Schema page, follow these steps: Create tags. For more information, see Operate tags . Create edge types. For more information, see Operate edge types . Create a schema with Console \u00b6 To create a schema on the Console page, follow these steps: In the toolbar, click the Console tab. In the Current Graph Space field, choose a graph space name. In this example, mooc_actions is used. In the input box, enter these statements one by one and click the button . // To create a tag named \"user\", with no property nebula> CREATE TAG user (); // To create a tag named \"course\", with one property nebula> CREATE TAG course (courseId int); // To create an edge type named \"action\", with seven properties nebula> CREATE EDGE action (actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double); If the preceding statements are executed successfully, the schema is created. You can run the statements as follows to view the schema. // To list all the tags in the current graph space nebula> SHOW TAGS; // To list all the edge types in the current graph space nebula> SHOW EDGES; // To view the definition of the tags and edge types nebula> DESCRIBE TAG user; nebula> DESCRIBE TAG course; nebula> DESCRIBE EDGE action; If the schema is created successfully, in the result window, you can see the definition of the tags and edge types. Next to do \u00b6 When a schema is created, you can import data .","title":"Create a schema"},{"location":"nebula-studio/quick-start/st-ug-create-schema/#create_a_schema","text":"To batch import data into Nebula Graph, you must have a graph schema. You can create a schema on the Console page or on the Schema page of Studio. NOTE : You can use nebula-console to create a schema. For more information, see Deploy Nebula Graph with Docker Compose and Get started with Nebula Graph .","title":"Create a schema"},{"location":"nebula-studio/quick-start/st-ug-create-schema/#prerequisites","text":"To create a graph schema on Studio v2.x, you must do a check of these: Studio is connected to Nebula Graph v2.x. Your account has the privilege of GOD, ADMIN, or DBA. The schema is designed. A graph space is created. NOTE : If no graph space exists and your account has the GOD privilege, you can create a graph space on the Console page. For more information, see CREATE SPACE . In this example, we recommend that you set vid_type=FIXED_STRING(100) in the CREATE SPACE statement.","title":"Prerequisites"},{"location":"nebula-studio/quick-start/st-ug-create-schema/#create_a_schema_with_schema","text":"To create a schema on the Schema page, follow these steps: Create tags. For more information, see Operate tags . Create edge types. For more information, see Operate edge types .","title":"Create a schema with Schema"},{"location":"nebula-studio/quick-start/st-ug-create-schema/#create_a_schema_with_console","text":"To create a schema on the Console page, follow these steps: In the toolbar, click the Console tab. In the Current Graph Space field, choose a graph space name. In this example, mooc_actions is used. In the input box, enter these statements one by one and click the button . // To create a tag named \"user\", with no property nebula> CREATE TAG user (); // To create a tag named \"course\", with one property nebula> CREATE TAG course (courseId int); // To create an edge type named \"action\", with seven properties nebula> CREATE EDGE action (actionId int, duration double, label bool, feature0 double, feature1 double, feature2 double, feature3 double); If the preceding statements are executed successfully, the schema is created. You can run the statements as follows to view the schema. // To list all the tags in the current graph space nebula> SHOW TAGS; // To list all the edge types in the current graph space nebula> SHOW EDGES; // To view the definition of the tags and edge types nebula> DESCRIBE TAG user; nebula> DESCRIBE TAG course; nebula> DESCRIBE EDGE action; If the schema is created successfully, in the result window, you can see the definition of the tags and edge types.","title":"Create a schema with Console"},{"location":"nebula-studio/quick-start/st-ug-create-schema/#next_to_do","text":"When a schema is created, you can import data .","title":"Next to do"},{"location":"nebula-studio/quick-start/st-ug-explore/","text":"Query graph data \u00b6 When data is imported, you can use the Console page or the Explore page to query graph data. For example, if you want to query the properties of the course named History of Chinese Women Through Time , you can perform these optional operations: On the Console tab: Run FETCH PROP ON * \"History of Chinese Women Through Time\"; . The result window shows all the property information of this vertex. When the result returns, click the Open in Explore button and then you can view the vertex information in a visualized way. On the Explore tab: Click the Start with Vertices button. In the dialog box, enter History of Chinese Women Through Time and then click the Add button. On the board, you can see the vertex. Move your mouse pointer on the vertex to see the vertex details, as shown in the preceding figure.","title":"Query graph data"},{"location":"nebula-studio/quick-start/st-ug-explore/#query_graph_data","text":"When data is imported, you can use the Console page or the Explore page to query graph data. For example, if you want to query the properties of the course named History of Chinese Women Through Time , you can perform these optional operations: On the Console tab: Run FETCH PROP ON * \"History of Chinese Women Through Time\"; . The result window shows all the property information of this vertex. When the result returns, click the Open in Explore button and then you can view the vertex information in a visualized way. On the Explore tab: Click the Start with Vertices button. In the dialog box, enter History of Chinese Women Through Time and then click the Add button. On the board, you can see the vertex. Move your mouse pointer on the vertex to see the vertex details, as shown in the preceding figure.","title":"Query graph data"},{"location":"nebula-studio/quick-start/st-ug-import-data/","text":"Import data \u00b6 After CSV files of data and a schema are created, you can use the Import page to batch import vertex and edge data into Nebula Graph for graph exploration and data analysis. Prerequisites \u00b6 To batch import data, do a check of these: Studio v2.x is connected to Nebula Graph v2.x. A schema is created. CSV files for vertex and edge data separately are created. Your account has privilege of GOD, ADMIN, DBA, or USER. Procedure \u00b6 To batch import data, follow these steps: In the toolbar, click the Import tab. On the Select Space page, choose a graph space name. In this example, mooc_actions is used. And then click the Next button. On the Upload Files page, click the Upload Files button and then choose CSV files. In this example, user.csv , course.csv , and actions.csv are chosen. NOTE : You can choose multiple CSV files at the same time. On the Select Files page, do a check of the file size and click Preview or Delete in the Operations column to make sure that all source data is correct. And then click the Next button. On the Map Vertices page, click the + Bind Datasource button, and in the dialog box, choose a CSV file. In this example, user.csv or course.csv is chosen. In the DataSource X tab, click the + Tag button. In the vertexId section, do these operations: a. In the CSV Index column, click Mapping . b. In the dialog box, choose a column from the CSV file. In this example, the only one cloumn of user.csv is chosen to generate VIDs representing users and the courseName column of course.csv is chosen to generate VIDs representing courses. In the TAG 1 section, do these operations: a. In the TAG drop-down list, choose a tag name. In this example, user is used for the user.csv file, and course is used for the course.csv file. b. In the property list, click Mapping to choose a data column from the CSV file as the value of a property. In this example, no data is chosen for user . For the course tag, choose Column 0 for the courseId property and set its type to int . (Optional) If necessary, repeat Step 5 through Step 8 for more tags. When the configuration is done, click the Next button. When Config validation was successful prompts, data mapping for the vertices is successful. On the Map Edges page, click the + Bind Datasource button, and in the dialog box, choose a CSV file. In this example, the actions.csv file is chosen. In the Type drop-down list, choose an edge type name. In this example, action is chosen. In the property list, click Mapping to choose a column from the actions.csv file as values of a property for the edges. srcId and dstId are the VIDs of the source vertex and destination vertex of an edge. In this example, srcId must be set to the VIDs of the users and dstId must be set to the VIDs of the courses. rank is optional. When the configuration is done, click the Next button. On the Import page, click the Start Import button. On the log window, you can see the import progress. The consumed time depends on the data volume. During data import, you can click the Stop Import button to stop data import. When the log window shows information as follows, the data import is done. Next to do \u00b6 When the data are imported to Nebula Graph v2.x, you can query graph data .","title":"Import data"},{"location":"nebula-studio/quick-start/st-ug-import-data/#import_data","text":"After CSV files of data and a schema are created, you can use the Import page to batch import vertex and edge data into Nebula Graph for graph exploration and data analysis.","title":"Import data"},{"location":"nebula-studio/quick-start/st-ug-import-data/#prerequisites","text":"To batch import data, do a check of these: Studio v2.x is connected to Nebula Graph v2.x. A schema is created. CSV files for vertex and edge data separately are created. Your account has privilege of GOD, ADMIN, DBA, or USER.","title":"Prerequisites"},{"location":"nebula-studio/quick-start/st-ug-import-data/#procedure","text":"To batch import data, follow these steps: In the toolbar, click the Import tab. On the Select Space page, choose a graph space name. In this example, mooc_actions is used. And then click the Next button. On the Upload Files page, click the Upload Files button and then choose CSV files. In this example, user.csv , course.csv , and actions.csv are chosen. NOTE : You can choose multiple CSV files at the same time. On the Select Files page, do a check of the file size and click Preview or Delete in the Operations column to make sure that all source data is correct. And then click the Next button. On the Map Vertices page, click the + Bind Datasource button, and in the dialog box, choose a CSV file. In this example, user.csv or course.csv is chosen. In the DataSource X tab, click the + Tag button. In the vertexId section, do these operations: a. In the CSV Index column, click Mapping . b. In the dialog box, choose a column from the CSV file. In this example, the only one cloumn of user.csv is chosen to generate VIDs representing users and the courseName column of course.csv is chosen to generate VIDs representing courses. In the TAG 1 section, do these operations: a. In the TAG drop-down list, choose a tag name. In this example, user is used for the user.csv file, and course is used for the course.csv file. b. In the property list, click Mapping to choose a data column from the CSV file as the value of a property. In this example, no data is chosen for user . For the course tag, choose Column 0 for the courseId property and set its type to int . (Optional) If necessary, repeat Step 5 through Step 8 for more tags. When the configuration is done, click the Next button. When Config validation was successful prompts, data mapping for the vertices is successful. On the Map Edges page, click the + Bind Datasource button, and in the dialog box, choose a CSV file. In this example, the actions.csv file is chosen. In the Type drop-down list, choose an edge type name. In this example, action is chosen. In the property list, click Mapping to choose a column from the actions.csv file as values of a property for the edges. srcId and dstId are the VIDs of the source vertex and destination vertex of an edge. In this example, srcId must be set to the VIDs of the users and dstId must be set to the VIDs of the courses. rank is optional. When the configuration is done, click the Next button. On the Import page, click the Start Import button. On the log window, you can see the import progress. The consumed time depends on the data volume. During data import, you can click the Stop Import button to stop data import. When the log window shows information as follows, the data import is done.","title":"Procedure"},{"location":"nebula-studio/quick-start/st-ug-import-data/#next_to_do","text":"When the data are imported to Nebula Graph v2.x, you can query graph data .","title":"Next to do"},{"location":"nebula-studio/quick-start/st-ug-plan-schema/","text":"Design a schema \u00b6 To manipulate graph data in Nebula Graph with Studio, you must have a graph schema. This article introduces how to design a graph schema for Nebula Graph. A graph schema for Nebula Graph must have these essential elements: Tags (namely vertex types) and their properties. Edge types and their properties In this article, the Social Network: MOOC User Action Dataset and 97 distinct course names are used to introduce how to design a schema. This table gives all the essential elements of the schema. Element Name Property name (Data type) Description Tag user No property. Represents users of the specified MOOC platform. The userId values are used as VIDs of user vertices. Tag course courseId ( int ). Represents the courses on the specified MOOC platform. The courseName values are used as the VIDs of the course vertices. Edge type action - actionId ( int ) - duration ( double ): Represents the duration of an action measured in seconds from the beginning. Its values are equal to the timestamp values in the data source. - label ( bool ): Represents whether a user drops out after an action. TRUE indicates a drop-out action, FALSE otherwise. - feature0 ( double ) - feature1 ( double ) - feature2 ( double ) - feature3 ( double ) Represents actions taken by users on the specified MOOC platform. An action links a user and a course and the direction is from a user to a course. It has four features. This figure shows the relationship ( action ) between a user and a course on the MOOC platform.","title":"Design a schema"},{"location":"nebula-studio/quick-start/st-ug-plan-schema/#design_a_schema","text":"To manipulate graph data in Nebula Graph with Studio, you must have a graph schema. This article introduces how to design a graph schema for Nebula Graph. A graph schema for Nebula Graph must have these essential elements: Tags (namely vertex types) and their properties. Edge types and their properties In this article, the Social Network: MOOC User Action Dataset and 97 distinct course names are used to introduce how to design a schema. This table gives all the essential elements of the schema. Element Name Property name (Data type) Description Tag user No property. Represents users of the specified MOOC platform. The userId values are used as VIDs of user vertices. Tag course courseId ( int ). Represents the courses on the specified MOOC platform. The courseName values are used as the VIDs of the course vertices. Edge type action - actionId ( int ) - duration ( double ): Represents the duration of an action measured in seconds from the beginning. Its values are equal to the timestamp values in the data source. - label ( bool ): Represents whether a user drops out after an action. TRUE indicates a drop-out action, FALSE otherwise. - feature0 ( double ) - feature1 ( double ) - feature2 ( double ) - feature3 ( double ) Represents actions taken by users on the specified MOOC platform. An action links a user and a course and the direction is from a user to a course. It has four features. This figure shows the relationship ( action ) between a user and a course on the MOOC platform.","title":"Design a schema"},{"location":"nebula-studio/quick-start/st-ug-prepare-csv/","text":"Prepare CSV files \u00b6 With Studio, you can batch import vertex and edge data into Nebula Graph. Currently, only CSV files without headers and comma-separated data are supported. Each file represents vertex or edge data of one type. To create applicable CSV files, process the source data as follows: Generate CSV files for vertex and edge data: user.csv : Contains the vertices representing users with no property. The userId column can be used as the vertex IDs. course.csv : Contains the vertices representing courses with the courseId properties. The courseName column can be used as the vertex IDs. actions.csv contains: The edges representing actions with the actionId , label , duration , feature0 , feature1 , feature2 , and feature3 properties. For the label column, 1 is replaced with TRUE and 0 is replaced with FALSE . The userId column representing the source vertices of the edges. The courseName column representing the destination vertices of the edges. This figure shows an example of a CSV file with the header. Delete all the headers from the CSV files.","title":"Prepare CSV files"},{"location":"nebula-studio/quick-start/st-ug-prepare-csv/#prepare_csv_files","text":"With Studio, you can batch import vertex and edge data into Nebula Graph. Currently, only CSV files without headers and comma-separated data are supported. Each file represents vertex or edge data of one type. To create applicable CSV files, process the source data as follows: Generate CSV files for vertex and edge data: user.csv : Contains the vertices representing users with no property. The userId column can be used as the vertex IDs. course.csv : Contains the vertices representing courses with the courseId properties. The courseName column can be used as the vertex IDs. actions.csv contains: The edges representing actions with the actionId , label , duration , feature0 , feature1 , feature2 , and feature3 properties. For the label column, 1 is replaced with TRUE and 0 is replaced with FALSE . The userId column representing the source vertices of the edges. The courseName column representing the destination vertices of the edges. This figure shows an example of a CSV file with the header. Delete all the headers from the CSV files.","title":"Prepare CSV files"},{"location":"nebula-studio/use-console/st-ug-open-in-explore/","text":"Open in Explore \u00b6 With the Open in Explore function, you can run nGQL statements on the Console page to query vertex or edge data and then view the result on the Explore page in a visualized way. Prerequisites \u00b6 To use the Open in Explore function, you must do a check of these: The version of Studio is v2.0.0 or later. Studio is connected to Nebula Graph v2.x. A dataset exists in the database. Query and visualize edge data \u00b6 To query edge data on the Console page and then view the result on the Explore page, follow these steps: In the toolbar, click the Console tab. In the Current Graph Space field, choose a graph space name. In this example, mooc_actions is chosen. In the input box, enter an nGQL statement and click the button . NOTE : The query result must contain the VIDs of the source vertex and the destination vertex of an edge. Here is an nGQL statement example. nebula> MATCH (u:user {userId: 1}) - [:action] -> (c) RETURN u.userId AS UserID, c.courseName AS Course; NOTE : For more information about the MATCH syntax, see MATCH in nGQL User Guide . The query result gives the edges between User 1 and the courses that he/she takes on the MOOC platform, as shown in this figure. Click the Open in Explore button. In the dialog box, configure as follows: a. Click Edge Type . b. In the Edge Type field, enter an edge type name. In this example, action is used. c. In the Src ID field, choose a column name from the result table representing the VIDs of the source vertices. In this example, UserID is chosen. d. In the Dst ID field, choose a column name from the result table representing the VIDs of the destination vertices. In this example, Course is chosen. e. (Optional) If the result table contains the ranking information of the edges, in the Rank field, choose a column name representing the rank of the edges. If no ranking information exists in the result, leave the Rank field blank. f. When the configuration is done, click the Import button. If some data exists on the board of Explore , choose a method to insert data: Incremental Insertion : Click this button to add the result to the existing data on the board. Insert After Clear : Click this button to clear the existing data from the board and then add the data to the board. When the data is inserted, you can view the visualized representation of the edge data. Query and visualize vertex data \u00b6 To query vertex data on the Console page and then view the result on the Explore page, follow these steps: In the toolbar, click the Console tab. In the Current Graph Space field, choose a graph space name. In this example, mooc_actions is chosen. In the input box, enter an nGQL statement and click the button . NOTE : The query result must contain the VIDs of the vertices. Here is an nGQL statement example. nebula> GO FROM \"1\" OVER action YIELD action._dst AS Course; The query result gives the courses that the specified user took, as shown in this figure. Click the Open in Explore button. In the dialog box, configure as follows: a. Click Vertex . b. In the Vertex ID field, choose a column name from the result table representing the VIDs of the vertices. In this example, Course is chosen. c. When the configuration is done, click the Import button. If some data exists on the board of Explore , choose a method to insert data: Incremental Insertion : Click this button to add the queried result to the existing data on the board. Insert After Clear : Click this button to clear the existing data from the board and then add the data. When the data is inserted, you can view the visualized representation of the vertex data. Next to do \u00b6 On the Explore page, you can expand the board to explore and analyze graph data.","title":"Open in Explore"},{"location":"nebula-studio/use-console/st-ug-open-in-explore/#open_in_explore","text":"With the Open in Explore function, you can run nGQL statements on the Console page to query vertex or edge data and then view the result on the Explore page in a visualized way.","title":"Open in Explore"},{"location":"nebula-studio/use-console/st-ug-open-in-explore/#prerequisites","text":"To use the Open in Explore function, you must do a check of these: The version of Studio is v2.0.0 or later. Studio is connected to Nebula Graph v2.x. A dataset exists in the database.","title":"Prerequisites"},{"location":"nebula-studio/use-console/st-ug-open-in-explore/#query_and_visualize_edge_data","text":"To query edge data on the Console page and then view the result on the Explore page, follow these steps: In the toolbar, click the Console tab. In the Current Graph Space field, choose a graph space name. In this example, mooc_actions is chosen. In the input box, enter an nGQL statement and click the button . NOTE : The query result must contain the VIDs of the source vertex and the destination vertex of an edge. Here is an nGQL statement example. nebula> MATCH (u:user {userId: 1}) - [:action] -> (c) RETURN u.userId AS UserID, c.courseName AS Course; NOTE : For more information about the MATCH syntax, see MATCH in nGQL User Guide . The query result gives the edges between User 1 and the courses that he/she takes on the MOOC platform, as shown in this figure. Click the Open in Explore button. In the dialog box, configure as follows: a. Click Edge Type . b. In the Edge Type field, enter an edge type name. In this example, action is used. c. In the Src ID field, choose a column name from the result table representing the VIDs of the source vertices. In this example, UserID is chosen. d. In the Dst ID field, choose a column name from the result table representing the VIDs of the destination vertices. In this example, Course is chosen. e. (Optional) If the result table contains the ranking information of the edges, in the Rank field, choose a column name representing the rank of the edges. If no ranking information exists in the result, leave the Rank field blank. f. When the configuration is done, click the Import button. If some data exists on the board of Explore , choose a method to insert data: Incremental Insertion : Click this button to add the result to the existing data on the board. Insert After Clear : Click this button to clear the existing data from the board and then add the data to the board. When the data is inserted, you can view the visualized representation of the edge data.","title":"Query and visualize edge data"},{"location":"nebula-studio/use-console/st-ug-open-in-explore/#query_and_visualize_vertex_data","text":"To query vertex data on the Console page and then view the result on the Explore page, follow these steps: In the toolbar, click the Console tab. In the Current Graph Space field, choose a graph space name. In this example, mooc_actions is chosen. In the input box, enter an nGQL statement and click the button . NOTE : The query result must contain the VIDs of the vertices. Here is an nGQL statement example. nebula> GO FROM \"1\" OVER action YIELD action._dst AS Course; The query result gives the courses that the specified user took, as shown in this figure. Click the Open in Explore button. In the dialog box, configure as follows: a. Click Vertex . b. In the Vertex ID field, choose a column name from the result table representing the VIDs of the vertices. In this example, Course is chosen. c. When the configuration is done, click the Import button. If some data exists on the board of Explore , choose a method to insert data: Incremental Insertion : Click this button to add the queried result to the existing data on the board. Insert After Clear : Click this button to clear the existing data from the board and then add the data. When the data is inserted, you can view the visualized representation of the vertex data.","title":"Query and visualize vertex data"},{"location":"nebula-studio/use-console/st-ug-open-in-explore/#next_to_do","text":"On the Explore page, you can expand the board to explore and analyze graph data.","title":"Next to do"},{"location":"nebula-studio/use-console/st-ug-visualize-subgraph/","text":"View subgraphs \u00b6 With the View Subgraphs function, you can run a FIND SHORTEST | ALL PATH or a GET SUBGRAPH statement on the Console page and then view the result on the Explore page. Studio version \u00b6 Studio of v2.0.0 or later versions supports this function. To update the version, see Check updates . Prerequisites \u00b6 To use the View Subgraphs function, you must do a check of these: The version of Studio is v2.0.0 or later. Studio is connected to Nebula Graph v2.x. A dataset exists in the database. In the example of this article, the mooc_actions dataset is used. For more information, see Import data . Procedure \u00b6 To query the paths or subgraph on the Console page and then view them on the Explore page, follow these steps: In the navigation bar, click the Console tab. In the Current Graph Space dropdown list, choose a graph space name. In this example, mooc_actions is chosen. In the input box, enter a FIND SHORTEST PATH , FIND ALL PATH , or GET SUBGRAPH statement and click Run . Here is an nGQL statement example. // Run FIND ALL PATH nebula> FIND ALL PATH FROM \"1\",\"2\",\"4\",\"6\",\"42\" to \"History of Ecology\",\"Neurobiology\" OVER action; // Run FIND SHORTEST PATH nebula> FIND SHORTEST PATH FROM \"1\",\"2\",\"4\",\"6\",\"42\" to \"History of Ecology\",\"Neurobiology\" OVER action; // Run GET SUBGRAPH nebula> GET SUBGRAPH 1 STEPS FROM \"1\"; Take the FIND ALL PATH for example, the queried result gives all the paths from the specified user vertices to the course vertices, as shown in this figure. Click the View Subgraphs button. (Optional) If some data exists on the board of Explore , choose a method to insert data: - Incremental Insertion : Click this button to add the result to the existing data on the board. - Insert After Clear : Click this button to clear the existing data from the board and then add the data to the board. When the data is inserted, you can view the visualized representation of the paths. Next to do \u00b6 On the Explore page, you can expand the graph to explore and analyze graph data.","title":"View subgraphs"},{"location":"nebula-studio/use-console/st-ug-visualize-subgraph/#view_subgraphs","text":"With the View Subgraphs function, you can run a FIND SHORTEST | ALL PATH or a GET SUBGRAPH statement on the Console page and then view the result on the Explore page.","title":"View subgraphs"},{"location":"nebula-studio/use-console/st-ug-visualize-subgraph/#studio_version","text":"Studio of v2.0.0 or later versions supports this function. To update the version, see Check updates .","title":"Studio version"},{"location":"nebula-studio/use-console/st-ug-visualize-subgraph/#prerequisites","text":"To use the View Subgraphs function, you must do a check of these: The version of Studio is v2.0.0 or later. Studio is connected to Nebula Graph v2.x. A dataset exists in the database. In the example of this article, the mooc_actions dataset is used. For more information, see Import data .","title":"Prerequisites"},{"location":"nebula-studio/use-console/st-ug-visualize-subgraph/#procedure","text":"To query the paths or subgraph on the Console page and then view them on the Explore page, follow these steps: In the navigation bar, click the Console tab. In the Current Graph Space dropdown list, choose a graph space name. In this example, mooc_actions is chosen. In the input box, enter a FIND SHORTEST PATH , FIND ALL PATH , or GET SUBGRAPH statement and click Run . Here is an nGQL statement example. // Run FIND ALL PATH nebula> FIND ALL PATH FROM \"1\",\"2\",\"4\",\"6\",\"42\" to \"History of Ecology\",\"Neurobiology\" OVER action; // Run FIND SHORTEST PATH nebula> FIND SHORTEST PATH FROM \"1\",\"2\",\"4\",\"6\",\"42\" to \"History of Ecology\",\"Neurobiology\" OVER action; // Run GET SUBGRAPH nebula> GET SUBGRAPH 1 STEPS FROM \"1\"; Take the FIND ALL PATH for example, the queried result gives all the paths from the specified user vertices to the course vertices, as shown in this figure. Click the View Subgraphs button. (Optional) If some data exists on the board of Explore , choose a method to insert data: - Incremental Insertion : Click this button to add the result to the existing data on the board. - Insert After Clear : Click this button to clear the existing data from the board and then add the data to the board. When the data is inserted, you can view the visualized representation of the paths.","title":"Procedure"},{"location":"nebula-studio/use-console/st-ug-visualize-subgraph/#next_to_do","text":"On the Explore page, you can expand the graph to explore and analyze graph data.","title":"Next to do"}]}